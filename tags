!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ALL_DEPS_DIRS	deps/cowboy/erlang.mk	/^ALL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(filter-out $(IGNORE_DEPS),$(DEPS)))$/;"	m
ALL_DEPS_DIRS	deps/cowlib/erlang.mk	/^ALL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(DEPS))$/;"	m
ALL_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(DEPS))$/;"	m
ALL_DOC_DEPS_DIRS	deps/cowboy/erlang.mk	/^ALL_DOC_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(DOC_DEPS))$/;"	m
ALL_SHELL_DEPS_DIRS	deps/cowboy/erlang.mk	/^ALL_SHELL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(SHELL_DEPS))$/;"	m
ALL_SHELL_DEPS_DIRS	deps/cowlib/erlang.mk	/^ALL_SHELL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(SHELL_DEPS))$/;"	m
ALL_SHELL_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_SHELL_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(SHELL_DEPS))$/;"	m
ALL_TEST_DEPS_DIRS	deps/cowboy/erlang.mk	/^ALL_TEST_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(TEST_DEPS))$/;"	m
ALL_TEST_DEPS_DIRS	deps/cowlib/erlang.mk	/^ALL_TEST_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(TEST_DEPS))$/;"	m
ALL_TEST_DEPS_DIRS	deps/ranch/erlang.mk	/^ALL_TEST_DEPS_DIRS = $(addprefix $(DEPS_DIR)\/,$(TEST_DEPS))$/;"	m
API	deps/maru/lib/maru/helper.ex	/^      defmodule API do$/;"	m
Adapter	deps/plug/lib/plug/conn/adapter.ex	/^defmodule Plug.Conn.Adapter do$/;"	m
AllowBlank	deps/maru/lib/maru/validations.ex	/^  defmodule AllowBlank do$/;"	m
AlreadySentError	deps/plug/lib/plug/conn.ex	/^  defmodule AlreadySentError do$/;"	m
AppRouter	deps/plug/lib/plug/error_handler.ex	/^      defmodule AppRouter do$/;"	m
AppRouter	deps/plug/lib/plug/router.ex	/^      defmodule AppRouter do$/;"	m
AtLeastOneOf	deps/maru/lib/maru/validations.ex	/^  defmodule AtLeastOneOf do$/;"	m
Atom	deps/maru/lib/maru/param_type.ex	/^  defmodule Atom do$/;"	m
Authorization	deps/maru/lib/maru/helper.ex	/^    defmodule Authorization do$/;"	m
BadEncodingError	deps/plug/lib/plug/parsers.ex	/^  defmodule BadEncodingError do$/;"	m
Boolean	deps/maru/lib/maru/param_type.ex	/^  defmodule Boolean do$/;"	m
Builder	deps/maru/lib/maru/builder.ex	/^defmodule Maru.Builder do$/;"	m
Builder	deps/plug/lib/plug/builder.ex	/^defmodule Plug.Builder do$/;"	m
CC	deps/cowboy/erlang.mk	/^	CC ?= cc$/;"	m
CC	deps/cowboy/erlang.mk	/^	CC ?= gcc$/;"	m
CFLAGS	deps/cowboy/erlang.mk	/^	CFLAGS ?= -O3 -std=c99 -arch x86_64 -finline-functions -Wall -Wmissing-prototypes$/;"	m
CFLAGS	deps/cowboy/erlang.mk	/^	CFLAGS ?= -O3 -std=c99 -finline-functions -Wall -Wmissing-prototypes$/;"	m
CI_INSTALL_DIR	deps/cowboy/erlang.mk	/^CI_INSTALL_DIR ?= $(HOME)\/erlang$/;"	m
CI_OTP	deps/cowboy/Makefile	/^CI_OTP = OTP_R16B01 OTP_R16B02 OTP_R16B03-1 OTP-17.0.2 OTP-17.1.2 OTP-17.2.2 OTP-17.3.4 OTP-17.4.1 OTP-17.5.6.2 OTP-18.0.2$/;"	m
CI_OTP	deps/cowboy/erlang.mk	/^CI_OTP ?=$/;"	m
COMPILE_C	deps/cowboy/erlang.mk	/^COMPILE_C = $(c_verbose) $(CC) $(CFLAGS) $(CPPFLAGS) -c$/;"	m
COMPILE_CPP	deps/cowboy/erlang.mk	/^COMPILE_CPP = $(cpp_verbose) $(CXX) $(CXXFLAGS) $(CPPFLAGS) -c$/;"	m
COMPILE_FIRST	deps/cowboy/Makefile	/^COMPILE_FIRST = cowboy_middleware cowboy_sub_protocol$/;"	m
COMPILE_FIRST	deps/cowboy/erlang.mk	/^COMPILE_FIRST ?=$/;"	m
COMPILE_FIRST	deps/cowlib/erlang.mk	/^COMPILE_FIRST ?=$/;"	m
COMPILE_FIRST	deps/ranch/Makefile	/^COMPILE_FIRST = ranch_transport$/;"	m
COMPILE_FIRST	deps/ranch/erlang.mk	/^COMPILE_FIRST ?=$/;"	m
COMPILE_FIRST_PATHS	deps/cowboy/erlang.mk	/^COMPILE_FIRST_PATHS = $(addprefix src\/,$(addsuffix .erl,$(COMPILE_FIRST)))$/;"	m
COMPILE_FIRST_PATHS	deps/cowlib/erlang.mk	/^COMPILE_FIRST_PATHS = $(addprefix src\/,$(addsuffix .erl,$(COMPILE_FIRST)))$/;"	m
COMPILE_FIRST_PATHS	deps/ranch/erlang.mk	/^COMPILE_FIRST_PATHS = $(addprefix src\/,$(addsuffix .erl,$(COMPILE_FIRST)))$/;"	m
COMPILE_MIB_FIRST	deps/cowboy/erlang.mk	/^COMPILE_MIB_FIRST ?=$/;"	m
COMPILE_MIB_FIRST_PATHS	deps/cowboy/erlang.mk	/^COMPILE_MIB_FIRST_PATHS = $(addprefix mibs\/,$(addsuffix .mib,$(COMPILE_MIB_FIRST)))$/;"	m
COOKIE	deps/plug/lib/plug/session/cookie.ex	/^defmodule Plug.Session.COOKIE do$/;"	m
COVERDATA	deps/cowboy/erlang.mk	/^COVERDATA = $(filter-out all.coverdata,$(wildcard *.coverdata))$/;"	m
COVER_MODS	deps/cowboy/erlang.mk	/^COVER_MODS = $(notdir $(basename $(call core_ls,ebin\/*.beam)))$/;"	m
COVER_REPORT_DIR	deps/cowboy/erlang.mk	/^COVER_REPORT_DIR = cover$/;"	m
COW_INLINE_HRL	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(COW_INLINE_HRL, 1).$/;"	d
COW_INLINE_HRL	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(COW_INLINE_HRL, 1).$/;"	d
COW_INLINE_HRL	deps/cowlib/include/cow_inline.hrl	/^-define(COW_INLINE_HRL, 1).$/;"	d
CSRFProtection	deps/plug/lib/plug/csrf_protection.ex	/^defmodule Plug.CSRFProtection do$/;"	m
CT_OPTS	deps/cowboy/erlang.mk	/^CT_OPTS ?=$/;"	m
CT_OPTS	deps/cowlib/erlang.mk	/^CT_OPTS ?=$/;"	m
CT_OPTS	deps/ranch/erlang.mk	/^CT_OPTS ?=$/;"	m
CT_RUN	deps/cowboy/erlang.mk	/^CT_RUN = ct_run \\$/;"	m
CT_RUN	deps/cowlib/erlang.mk	/^CT_RUN = ct_run \\$/;"	m
CT_RUN	deps/ranch/erlang.mk	/^CT_RUN = ct_run \\$/;"	m
CT_SUITES	deps/cowboy/erlang.mk	/^	CT_SUITES ?= $(sort $(subst _SUITE.erl,,$(notdir $(call core_find,$(TEST_DIR)\/,*_SUITE.erl))))$/;"	m
CT_SUITES	deps/cowboy/erlang.mk	/^	CT_SUITES ?=$/;"	m
CT_SUITES	deps/cowlib/erlang.mk	/^	CT_SUITES ?= $(sort $(subst _SUITE.erl,,$(shell find test -type f -name \\*_SUITE.erl -exec basename {} \\;)))$/;"	m
CT_SUITES	deps/cowlib/erlang.mk	/^	CT_SUITES ?=$/;"	m
CT_SUITES	deps/ranch/erlang.mk	/^	CT_SUITES ?= $(sort $(subst _SUITE.erl,,$(shell find test -type f -name \\*_SUITE.erl -exec basename {} \\;)))$/;"	m
CT_SUITES	deps/ranch/erlang.mk	/^	CT_SUITES ?=$/;"	m
CXXFLAGS	deps/cowboy/erlang.mk	/^	CXXFLAGS ?= -O3 -arch x86_64 -finline-functions -Wall$/;"	m
CXXFLAGS	deps/cowboy/erlang.mk	/^	CXXFLAGS ?= -O3 -finline-functions -Wall$/;"	m
C_SRC_DIR	deps/cowboy/erlang.mk	/^C_SRC_DIR ?= $(CURDIR)\/c_src$/;"	m
C_SRC_ENV	deps/cowboy/erlang.mk	/^C_SRC_ENV ?= $(C_SRC_DIR)\/env.mk$/;"	m
C_SRC_OUTPUT	deps/cowboy/erlang.mk	/^C_SRC_OUTPUT ?= $(CURDIR)\/priv\/$(PROJECT).so$/;"	m
C_SRC_TYPE	deps/cowboy/erlang.mk	/^C_SRC_TYPE ?= shared$/;"	m
CharList	deps/maru/lib/maru/param_type.ex	/^  defmodule CharList do$/;"	m
Collectable	deps/plug/lib/plug/conn.ex	/^defimpl Collectable, for: Plug.Conn do$/;"	i
Config	deps/maru/lib/maru/config.ex	/^defmodule Maru.Config do$/;"	m
Conn	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^defmodule Plug.Adapters.Cowboy.Conn do$/;"	m
Conn	deps/plug/lib/plug/adapters/test/conn.ex	/^defmodule Plug.Adapters.Test.Conn do$/;"	m
Conn	deps/plug/lib/plug/conn.ex	/^defmodule Plug.Conn do$/;"	m
Cookies	deps/plug/lib/plug/conn/cookies.ex	/^defmodule Plug.Conn.Cookies do$/;"	m
Cowboy	deps/plug/lib/plug/adapters/cowboy.ex	/^defmodule Plug.Adapters.Cowboy do$/;"	m
Crypto	deps/plug/lib/plug/crypto.ex	/^defmodule Plug.Crypto do$/;"	m
DEPS	deps/cowboy/Makefile	/^DEPS = cowlib ranch$/;"	m
DEPS_DIR	deps/cowboy/erlang.mk	/^DEPS_DIR ?= $(CURDIR)\/deps$/;"	m
DEPS_DIR	deps/cowlib/erlang.mk	/^DEPS_DIR ?= $(CURDIR)\/deps$/;"	m
DEPS_DIR	deps/ranch/erlang.mk	/^DEPS_DIR ?= $(CURDIR)\/deps$/;"	m
DIALYZER_DIRS	deps/cowboy/erlang.mk	/^DIALYZER_DIRS ?= --src -r src$/;"	m
DIALYZER_DIRS	deps/cowlib/erlang.mk	/^DIALYZER_DIRS ?= --src -r src$/;"	m
DIALYZER_DIRS	deps/ranch/erlang.mk	/^DIALYZER_DIRS ?= --src -r src$/;"	m
DIALYZER_OPTS	deps/cowboy/erlang.mk	/^DIALYZER_OPTS ?= -Werror_handling -Wrace_conditions \\$/;"	m
DIALYZER_OPTS	deps/cowlib/erlang.mk	/^DIALYZER_OPTS ?= -Werror_handling -Wrace_conditions \\$/;"	m
DIALYZER_OPTS	deps/ranch/erlang.mk	/^DIALYZER_OPTS ?= -Werror_handling -Wrace_conditions \\$/;"	m
DIALYZER_PLT	deps/cowboy/erlang.mk	/^DIALYZER_PLT ?= $(CURDIR)\/.$(PROJECT).plt$/;"	m
DIALYZER_PLT	deps/cowlib/erlang.mk	/^DIALYZER_PLT ?= $(CURDIR)\/.$(PROJECT).plt$/;"	m
DIALYZER_PLT	deps/ranch/erlang.mk	/^DIALYZER_PLT ?= $(CURDIR)\/.$(PROJECT).plt$/;"	m
DSLs	deps/maru/lib/maru/builder/dsls.ex	/^defmodule Maru.Builder.DSLs do$/;"	m
DTL_FULL_PATH	deps/cowboy/erlang.mk	/^DTL_FULL_PATH ?= 0$/;"	m
Debugger	deps/plug/lib/plug/debugger.ex	/^defmodule Plug.Debugger do$/;"	m
Decode	deps/poison/lib/poison/decoder.ex	/^defmodule Poison.Decode do$/;"	m
Decoder	deps/poison/lib/poison/decoder.ex	/^defimpl Poison.Decoder, for: Any do$/;"	i
Decoder	deps/poison/lib/poison/decoder.ex	/^defprotocol Poison.Decoder do$/;"	p
EDOC_OPTS	deps/cowboy/erlang.mk	/^EDOC_OPTS ?=$/;"	m
ELVIS	deps/cowboy/erlang.mk	/^ELVIS ?= $(CURDIR)\/elvis$/;"	m
ELVIS	deps/cowlib/erlang.mk	/^ELVIS ?= $(CURDIR)\/elvis$/;"	m
ELVIS	deps/ranch/erlang.mk	/^ELVIS ?= $(CURDIR)\/elvis$/;"	m
ELVIS_CONFIG	deps/cowboy/erlang.mk	/^ELVIS_CONFIG ?= $(CURDIR)\/elvis.config$/;"	m
ELVIS_CONFIG	deps/cowlib/erlang.mk	/^ELVIS_CONFIG ?= $(CURDIR)\/elvis.config$/;"	m
ELVIS_CONFIG	deps/ranch/erlang.mk	/^ELVIS_CONFIG ?= $(CURDIR)\/elvis.config$/;"	m
ELVIS_CONFIG_URL	deps/cowboy/erlang.mk	/^ELVIS_CONFIG_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.5-beta2\/elvis.config$/;"	m
ELVIS_CONFIG_URL	deps/cowlib/erlang.mk	/^ELVIS_CONFIG_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.3\/elvis.config$/;"	m
ELVIS_CONFIG_URL	deps/ranch/erlang.mk	/^ELVIS_CONFIG_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.3\/elvis.config$/;"	m
ELVIS_OPTS	deps/cowboy/erlang.mk	/^ELVIS_OPTS ?=$/;"	m
ELVIS_OPTS	deps/cowlib/erlang.mk	/^ELVIS_OPTS ?=$/;"	m
ELVIS_OPTS	deps/ranch/erlang.mk	/^ELVIS_OPTS ?=$/;"	m
ELVIS_URL	deps/cowboy/erlang.mk	/^ELVIS_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.5-beta2\/elvis$/;"	m
ELVIS_URL	deps/cowlib/erlang.mk	/^ELVIS_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.3\/elvis$/;"	m
ELVIS_URL	deps/ranch/erlang.mk	/^ELVIS_URL ?= https:\/\/github.com\/inaka\/elvis\/releases\/download\/0.2.3\/elvis$/;"	m
ERL	deps/cowboy/erlang.mk	/^ERL = erl +A0 -noinput -boot start_clean$/;"	m
ERLANG_MK_BUILD_CONFIG	deps/cowboy/erlang.mk	/^ERLANG_MK_BUILD_CONFIG ?= build.config$/;"	m
ERLANG_MK_BUILD_CONFIG	deps/cowlib/erlang.mk	/^ERLANG_MK_BUILD_CONFIG ?= build.config$/;"	m
ERLANG_MK_BUILD_CONFIG	deps/ranch/erlang.mk	/^ERLANG_MK_BUILD_CONFIG ?= build.config$/;"	m
ERLANG_MK_BUILD_DIR	deps/cowboy/erlang.mk	/^ERLANG_MK_BUILD_DIR ?= .erlang.mk.build$/;"	m
ERLANG_MK_BUILD_DIR	deps/cowlib/erlang.mk	/^ERLANG_MK_BUILD_DIR ?= .erlang.mk.build$/;"	m
ERLANG_MK_BUILD_DIR	deps/ranch/erlang.mk	/^ERLANG_MK_BUILD_DIR ?= .erlang.mk.build$/;"	m
ERLANG_MK_FILENAME	deps/cowboy/erlang.mk	/^ERLANG_MK_FILENAME := $(realpath $(lastword $(MAKEFILE_LIST)))$/;"	m
ERLANG_MK_TMP	deps/cowboy/erlang.mk	/^ERLANG_MK_TMP ?= $(CURDIR)\/.erlang.mk$/;"	m
ERLANG_MK_VERSION	deps/cowboy/erlang.mk	/^ERLANG_MK_VERSION = 1.2.0-632-g26ea355-dirty$/;"	m
ERLANG_MK_VERSION	deps/cowlib/erlang.mk	/^ERLANG_MK_VERSION = 1$/;"	m
ERLANG_MK_VERSION	deps/ranch/erlang.mk	/^ERLANG_MK_VERSION = 1$/;"	m
ERLC_EXCLUDE	deps/cowboy/erlang.mk	/^ERLC_EXCLUDE ?=$/;"	m
ERLC_EXCLUDE_PATHS	deps/cowboy/erlang.mk	/^ERLC_EXCLUDE_PATHS = $(addprefix src\/,$(addsuffix .erl,$(ERLC_EXCLUDE)))$/;"	m
ERLC_MIB_OPTS	deps/cowboy/erlang.mk	/^ERLC_MIB_OPTS ?=$/;"	m
ERLC_OPTS	deps/cowboy/Makefile	/^ERLC_OPTS ?= -Werror +debug_info +warn_export_all +warn_export_vars \\$/;"	m
ERLC_OPTS	deps/cowboy/erlang.mk	/^ERLC_OPTS ?= -Werror +debug_info +warn_export_vars +warn_shadow_vars \\$/;"	m
ERLC_OPTS	deps/cowboy/erlang.mk	/^test-build:: ERLC_OPTS=$(TEST_ERLC_OPTS)$/;"	m
ERLC_OPTS	deps/cowlib/erlang.mk	/^ERLC_OPTS ?= -Werror +debug_info +warn_export_all +warn_export_vars \\$/;"	m
ERLC_OPTS	deps/cowlib/erlang.mk	/^tests-ct: ERLC_OPTS = $(TEST_ERLC_OPTS)$/;"	m
ERLC_OPTS	deps/ranch/erlang.mk	/^ERLC_OPTS ?= -Werror +debug_info +warn_export_all +warn_export_vars \\$/;"	m
ERLC_OPTS	deps/ranch/erlang.mk	/^tests-ct: ERLC_OPTS = $(TEST_ERLC_OPTS)$/;"	m
ERL_LIBS	deps/cowboy/erlang.mk	/^	ERL_LIBS := $(ERL_LIBS):$(DEPS_DIR)$/;"	m
ERL_LIBS	deps/cowboy/erlang.mk	/^	ERL_LIBS = $(DEPS_DIR)$/;"	m
ERL_LIBS	deps/cowlib/erlang.mk	/^	ERL_LIBS := $(ERL_LIBS):$(DEPS_DIR)$/;"	m
ERL_LIBS	deps/cowlib/erlang.mk	/^	ERL_LIBS = $(DEPS_DIR)$/;"	m
ERL_LIBS	deps/ranch/erlang.mk	/^	ERL_LIBS := $(ERL_LIBS):$(DEPS_DIR)$/;"	m
ERL_LIBS	deps/ranch/erlang.mk	/^	ERL_LIBS = $(DEPS_DIR)$/;"	m
ESCRIPT_BEAMS	deps/cowboy/erlang.mk	/^ESCRIPT_BEAMS ?= "ebin\/*", "deps\/*\/ebin\/*"$/;"	m
ESCRIPT_COMMAND	deps/cowboy/erlang.mk	/^ESCRIPT_COMMAND = $(subst ' ',,$(ESCRIPT_RAW))$/;"	m
ESCRIPT_COMMENT	deps/cowboy/erlang.mk	/^ESCRIPT_COMMENT ?= This is an -*- erlang -*- file$/;"	m
ESCRIPT_EMU_ARGS	deps/cowboy/erlang.mk	/^ESCRIPT_EMU_ARGS ?= -pa . \\$/;"	m
ESCRIPT_NAME	deps/cowboy/erlang.mk	/^ESCRIPT_NAME ?= $(PROJECT)$/;"	m
ESCRIPT_RAW	deps/cowboy/erlang.mk	/^define ESCRIPT_RAW$/;"	m
ESCRIPT_SHEBANG	deps/cowboy/erlang.mk	/^ESCRIPT_SHEBANG ?= \/usr\/bin\/env escript$/;"	m
ESCRIPT_STATIC	deps/cowboy/erlang.mk	/^ESCRIPT_STATIC ?= "deps\/*\/priv\/**", "priv\/**"$/;"	m
ESCRIPT_SYS_CONFIG	deps/cowboy/erlang.mk	/^ESCRIPT_SYS_CONFIG ?= "rel\/sys.config"$/;"	m
ETS	deps/plug/lib/plug/session/ets.ex	/^defmodule Plug.Session.ETS do$/;"	m
EUNIT_EBIN_MODS	deps/cowboy/erlang.mk	/^EUNIT_EBIN_MODS = $(notdir $(basename $(call core_find,ebin\/,*.beam)))$/;"	m
EUNIT_HRL_MODS	deps/cowboy/erlang.mk	/^EUNIT_HRL_MODS = $(subst $(space),$(comma),$(shell \\$/;"	m
EUNIT_MODS	deps/cowboy/erlang.mk	/^EUNIT_MODS = $(foreach mod,$(EUNIT_EBIN_MODS) $(filter-out \\$/;"	m
EUNIT_OPTS	deps/cowboy/erlang.mk	/^EUNIT_OPTS ?=$/;"	m
EUNIT_TEST_MODS	deps/cowboy/erlang.mk	/^EUNIT_TEST_MODS = $(notdir $(basename $(call core_find,$(TEST_DIR)\/,*.beam)))$/;"	m
Encode	deps/poison/lib/poison/encoder.ex	/^defmodule Poison.Encode do$/;"	m
EncodeError	deps/poison/lib/poison/encoder.ex	/^defmodule Poison.EncodeError do$/;"	m
Encoder	deps/poison/lib/poison/encoder.ex	/^      defimpl Poison.Encoder, for: unquote(module) do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: Any do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: Atom do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: BitString do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: Float do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: HashDict do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: Integer do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: List do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: Map do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defimpl Poison.Encoder, for: [Range, Stream, HashSet] do$/;"	i
Encoder	deps/poison/lib/poison/encoder.ex	/^defprotocol Poison.Encoder do$/;"	p
Endpoint	deps/maru/lib/maru/router/endpoint.ex	/^defmodule Maru.Router.Endpoint do$/;"	m
ErrorHandler	deps/plug/lib/plug/error_handler.ex	/^defmodule Plug.ErrorHandler do$/;"	m
ExactlyOneOf	deps/maru/lib/maru/validations.ex	/^  defmodule ExactlyOneOf do$/;"	m
Exception	deps/plug/lib/plug/exceptions.ex	/^defimpl Plug.Exception, for: Any do$/;"	i
Exception	deps/plug/lib/plug/exceptions.ex	/^defprotocol Plug.Exception do$/;"	p
Exceptions	deps/maru/lib/maru/builder/exceptions.ex	/^defmodule Maru.Builder.Exceptions do$/;"	m
Exceptions	deps/maru/lib/maru/exceptions.ex	/^defmodule Maru.Exceptions do$/;"	m
Extend	deps/maru/lib/maru/plugs/extend.ex	/^defmodule Maru.Plugs.Extend do$/;"	m
File	deps/maru/lib/maru/param_type.ex	/^  defmodule File do$/;"	m
Float	deps/maru/lib/maru/param_type.ex	/^  defmodule Float do$/;"	m
GEN_OUT	deps/cowlib/Makefile	/^GEN_OUT = src\/cow_mimetypes.erl$/;"	m
GEN_SRC	deps/cowlib/Makefile	/^GEN_SRC = src\/cow_mimetypes.erl.src$/;"	m
GEN_URL	deps/cowlib/Makefile	/^GEN_URL = http:\/\/svn.apache.org\/repos\/asf\/httpd\/httpd\/trunk\/docs\/conf\/mime.types$/;"	m
HTML	deps/plug/lib/plug/html.ex	/^defmodule Plug.HTML do$/;"	m
Handler	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^defmodule Plug.Adapters.Cowboy.Handler do$/;"	m
Head	deps/plug/lib/plug/head.ex	/^defmodule Plug.Head do$/;"	m
Helper	deps/maru/lib/maru/helper.ex	/^defmodule Maru.Helper do$/;"	m
IGNORE_DEPS	deps/cowboy/erlang.mk	/^IGNORE_DEPS ?=$/;"	m
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, Acc),$/;"	d
INLINE_LOWERCASE	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, Acc),$/;"	d
INLINE_LOWERCASE	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, A9, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, A8, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, A7, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, A6, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, A5, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, A4, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, A3, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, A2, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, A1, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, A0, Acc),$/;"	d
INLINE_LOWERCASE	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE(Function, Rest, Acc),$/;"	d
INLINE_LOWERCASE_BC	_build/dev/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE_BC(Bin),$/;"	d
INLINE_LOWERCASE_BC	_build/test/lib/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE_BC(Bin),$/;"	d
INLINE_LOWERCASE_BC	deps/cowlib/include/cow_inline.hrl	/^-define(INLINE_LOWERCASE_BC(Bin),$/;"	d
Inspect	deps/plug/lib/plug/conn.ex	/^defimpl Inspect, for: Plug.Conn do$/;"	i
Integer	deps/maru/lib/maru/param_type.ex	/^  defmodule Integer do$/;"	m
InvalidCSRFTokenError	deps/plug/lib/plug/csrf_protection.ex	/^  defmodule InvalidCSRFTokenError do$/;"	m
InvalidCrossOriginRequestError	deps/plug/lib/plug/csrf_protection.ex	/^  defmodule InvalidCrossOriginRequestError do$/;"	m
InvalidFormatter	deps/maru/lib/maru/exceptions.ex	/^  defmodule InvalidFormatter do$/;"	m
InvalidHeaderKeyFormatError	deps/plug/lib/plug/conn.ex	/^  defmodule InvalidHeaderKeyFormatError do$/;"	m
InvalidPathError	deps/plug/lib/plug/static.ex	/^  defmodule InvalidPathError do$/;"	m
InvalidSpecError	deps/plug/lib/plug/router/utils.ex	/^defmodule Plug.Router.InvalidSpecError do$/;"	m
JSON	deps/plug/lib/plug/parsers/json.ex	/^defmodule Plug.Parsers.JSON do$/;"	m
JSONHeaderPlug	deps/plug/lib/plug.ex	/^      defmodule JSONHeaderPlug do$/;"	m
KERL	deps/cowboy/erlang.mk	/^KERL ?= $(CURDIR)\/kerl$/;"	m
KERL_URL	deps/cowboy/erlang.mk	/^KERL_URL ?= https:\/\/raw.githubusercontent.com\/yrashk\/kerl\/master\/kerl$/;"	m
KeyGenerator	deps/plug/lib/plug/crypto/key_generator.ex	/^defmodule Plug.Crypto.KeyGenerator do$/;"	m
LDFLAGS	deps/cowboy/erlang.mk	/^	LDFLAGS ?= -arch x86_64 -flat_namespace -undefined suppress$/;"	m
LeanpokerMaru	lib/leanpoker_maru.ex	/^defmodule LeanpokerMaru do$/;"	m
LeanpokerMaruTest	test/leanpoker_maru_test.exs	/^defmodule LeanpokerMaruTest do$/;"	m
List	deps/maru/lib/maru/param_type.ex	/^  defmodule List do$/;"	m
Logger	deps/plug/lib/plug/logger.ex	/^defmodule Plug.Logger do$/;"	m
MAN_INSTALL_PATH	deps/cowboy/Makefile	/^MAN_INSTALL_PATH ?= \/usr\/local\/share\/man$/;"	m
MAN_INSTALL_PATH	deps/cowboy/erlang.mk	/^MAN_INSTALL_PATH ?= \/usr\/local\/share\/man$/;"	m
MAN_SECTIONS	deps/cowboy/erlang.mk	/^MAN_SECTIONS ?= 3 7$/;"	m
MIME	deps/plug/lib/plug/mime.ex	/^defmodule Plug.MIME do$/;"	m
MULTIPART	deps/plug/lib/plug/parsers/multipart.ex	/^defmodule Plug.Parsers.MULTIPART do$/;"	m
Map	deps/maru/lib/maru/param_type.ex	/^  defmodule Map do$/;"	m
Maru	deps/maru/lib/maru.ex	/^defmodule Maru do$/;"	m
MessageEncryptor	deps/plug/lib/plug/crypto/message_encryptor.ex	/^defmodule Plug.Crypto.MessageEncryptor do$/;"	m
MessageVerifier	deps/plug/lib/plug/crypto/message_verifier.ex	/^defmodule Plug.Crypto.MessageVerifier do$/;"	m
MethodNotAllow	deps/maru/lib/maru/exceptions.ex	/^  defmodule MethodNotAllow do$/;"	m
MethodOverride	deps/plug/lib/plug/method_override.ex	/^defmodule Plug.MethodOverride do$/;"	m
Methods	deps/maru/lib/maru/builder/methods.ex	/^defmodule Maru.Builder.Methods do$/;"	m
Middleware	deps/maru/lib/maru/middleware.ex	/^defmodule Maru.Middleware do$/;"	m
Mixfile	deps/maru/mix.exs	/^defmodule Maru.Mixfile do$/;"	m
Mixfile	deps/plug/mix.exs	/^defmodule Plug.Mixfile do$/;"	m
Mixfile	deps/poison/mix.exs	/^defmodule Poison.Mixfile do$/;"	m
Mixfile	mix.exs	/^defmodule LeanpokerMaru.Mixfile do$/;"	m
MutuallyExclusive	deps/maru/lib/maru/validations.ex	/^  defmodule MutuallyExclusive do$/;"	m
MyApp	deps/plug/lib/plug/builder.ex	/^      defmodule MyApp do$/;"	m
MyApp	deps/plug/lib/plug/debugger.ex	/^      defmodule MyApp do$/;"	m
MyPlug	deps/plug/lib/plug/static.ex	/^      defmodule MyPlug do$/;"	m
Namespaces	deps/maru/lib/maru/builder/namespaces.ex	/^defmodule Maru.Builder.Namespaces do$/;"	m
NotFound	deps/maru/lib/maru/exceptions.ex	/^  defmodule NotFound do$/;"	m
NotFound	deps/maru/lib/maru/plugs/notfound.ex	/^defmodule Maru.Plugs.NotFound do$/;"	m
NotSentError	deps/plug/lib/plug/conn.ex	/^  defmodule NotSentError do$/;"	m
OBJECTS	deps/cowboy/erlang.mk	/^OBJECTS = $(addsuffix .o, $(basename $(SOURCES)))$/;"	m
OTP_GIT	deps/cowboy/erlang.mk	/^OTP_GIT ?= https:\/\/github.com\/erlang\/otp$/;"	m
PKG_FILE2	deps/cowlib/erlang.mk	/^PKG_FILE2 ?= $(CURDIR)\/.erlang.mk.packages.v2$/;"	m
PKG_FILE2	deps/ranch/erlang.mk	/^PKG_FILE2 ?= $(CURDIR)\/.erlang.mk.packages.v2$/;"	m
PKG_FILE_URL	deps/cowlib/erlang.mk	/^PKG_FILE_URL ?= https:\/\/raw.githubusercontent.com\/ninenines\/erlang.mk\/master\/packages.v2.tsv$/;"	m
PKG_FILE_URL	deps/ranch/erlang.mk	/^PKG_FILE_URL ?= https:\/\/raw.githubusercontent.com\/ninenines\/erlang.mk\/master\/packages.v2.tsv$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = darwin$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = freebsd$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = gnu$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = linux$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = netbsd$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = openbsd$/;"	m
PLATFORM	deps/cowboy/erlang.mk	/^PLATFORM = solaris$/;"	m
PLT_APPS	deps/cowboy/Makefile	/^PLT_APPS = crypto public_key ssl$/;"	m
PLT_APPS	deps/cowboy/erlang.mk	/^PLT_APPS ?=$/;"	m
PLT_APPS	deps/cowlib/Makefile	/^PLT_APPS = crypto$/;"	m
PLT_APPS	deps/cowlib/erlang.mk	/^PLT_APPS ?=$/;"	m
PLT_APPS	deps/ranch/Makefile	/^PLT_APPS = crypto public_key ssl$/;"	m
PLT_APPS	deps/ranch/erlang.mk	/^PLT_APPS ?=$/;"	m
PROJECT	deps/cowboy/Makefile	/^PROJECT = cowboy$/;"	m
PROJECT	deps/cowboy/erlang.mk	/^PROJECT := $(strip $(PROJECT))$/;"	m
PROJECT	deps/cowboy/erlang.mk	/^PROJECT ?= $(notdir $(CURDIR))$/;"	m
PROJECT	deps/cowlib/Makefile	/^PROJECT = cowlib$/;"	m
PROJECT	deps/cowlib/erlang.mk	/^PROJECT := $(strip $(PROJECT))$/;"	m
PROJECT	deps/cowlib/erlang.mk	/^PROJECT ?= $(notdir $(CURDIR))$/;"	m
PROJECT	deps/ranch/Makefile	/^PROJECT = ranch$/;"	m
PROJECT	deps/ranch/erlang.mk	/^PROJECT := $(strip $(PROJECT))$/;"	m
PROJECT	deps/ranch/erlang.mk	/^PROJECT ?= $(notdir $(CURDIR))$/;"	m
PROJECT_VERSION	deps/cowboy/erlang.mk	/^PROJECT_VERSION ?= rolling$/;"	m
Param	deps/maru/lib/maru/router.ex	/^  defmodule Param do$/;"	m
ParamType	deps/maru/lib/maru/param_type.ex	/^defmodule Maru.ParamType do$/;"	m
Params	deps/maru/lib/maru/builder/params.ex	/^defmodule Maru.Builder.Params do$/;"	m
Params	deps/maru/lib/maru/helpers/params.ex	/^defmodule Maru.Helpers.Params do$/;"	m
ParseError	deps/plug/lib/plug/parsers.ex	/^  defmodule ParseError do$/;"	m
Parser	deps/poison/lib/poison/parser.ex	/^defmodule Poison.Parser do$/;"	m
Parsers	deps/plug/lib/plug/parsers.ex	/^defmodule Plug.Parsers do$/;"	m
Path	deps/maru/lib/maru/router/path.ex	/^defmodule Maru.Router.Path do$/;"	m
Plug	deps/plug/lib/plug.ex	/^defmodule Plug do$/;"	m
PlugUsingHalt	deps/plug/lib/plug/builder.ex	/^      defmodule PlugUsingHalt do$/;"	m
PlugWithCustomCall	deps/plug/lib/plug/builder.ex	/^      defmodule PlugWithCustomCall do$/;"	m
PlugWithCustomOptions	deps/plug/lib/plug/builder.ex	/^      defmodule PlugWithCustomOptions do$/;"	m
Poison	deps/poison/lib/poison.ex	/^defmodule Poison do$/;"	m
Prepare	deps/maru/lib/maru/plugs/prepare.ex	/^defmodule Maru.Plugs.Prepare do$/;"	m
Pretty	deps/poison/lib/poison/encoder.ex	/^defmodule Poison.Pretty do$/;"	m
QS_LONG	deps/cowlib/src/cow_qs.erl	/^-define(QS_LONG, [$/;"	d
QS_LONGER	deps/cowlib/src/cow_qs.erl	/^-define(QS_LONGER, [$/;"	d
QS_SHORT	deps/cowlib/src/cow_qs.erl	/^-define(QS_SHORT, [$/;"	d
QS_SHORTER	deps/cowlib/src/cow_qs.erl	/^-define(QS_SHORTER, [$/;"	d
Query	deps/plug/lib/plug/conn/query.ex	/^defmodule Plug.Conn.Query do$/;"	m
REBAR_DEPS_DIR	deps/cowboy/erlang.mk	/^REBAR_DEPS_DIR = $(DEPS_DIR)$/;"	m
REBAR_DEPS_DIR	deps/cowlib/erlang.mk	/^REBAR_DEPS_DIR = $(DEPS_DIR)$/;"	m
REBAR_DEPS_DIR	deps/ranch/erlang.mk	/^REBAR_DEPS_DIR = $(DEPS_DIR)$/;"	m
RELX	deps/cowboy/erlang.mk	/^RELX ?= $(CURDIR)\/relx$/;"	m
RELX	deps/ranch/erlang.mk	/^RELX ?= $(CURDIR)\/relx$/;"	m
RELX_CONFIG	deps/cowboy/erlang.mk	/^RELX_CONFIG ?= $(CURDIR)\/relx.config$/;"	m
RELX_CONFIG	deps/ranch/erlang.mk	/^RELX_CONFIG ?= $(CURDIR)\/relx.config$/;"	m
RELX_OPTS	deps/cowboy/erlang.mk	/^RELX_OPTS ?=$/;"	m
RELX_OPTS	deps/ranch/erlang.mk	/^RELX_OPTS ?=$/;"	m
RELX_OUTPUT_DIR	deps/cowboy/erlang.mk	/^	RELX_OUTPUT_DIR = $(word 2,$(RELX_OPTS))$/;"	m
RELX_OUTPUT_DIR	deps/cowboy/erlang.mk	/^RELX_OUTPUT_DIR ?= _rel$/;"	m
RELX_OUTPUT_DIR	deps/ranch/erlang.mk	/^	RELX_OUTPUT_DIR = $(word 2,$(RELX_OPTS))$/;"	m
RELX_OUTPUT_DIR	deps/ranch/erlang.mk	/^RELX_OUTPUT_DIR ?= _rel$/;"	m
RELX_RELEASE	deps/cowboy/erlang.mk	/^RELX_RELEASE = `$(call erlang,$(get_relx_release.erl))`$/;"	m
RELX_URL	deps/cowboy/erlang.mk	/^RELX_URL ?= https:\/\/github.com\/erlware\/relx\/releases\/download\/v2.0.0\/relx$/;"	m
RELX_URL	deps/ranch/erlang.mk	/^RELX_URL ?= https:\/\/github.com\/erlware\/relx\/releases\/download\/v1.0.2\/relx$/;"	m
Regexp	deps/maru/lib/maru/validations.ex	/^  defmodule Regexp do$/;"	m
RequestId	deps/plug/lib/plug/request_id.ex	/^defmodule Plug.RequestId do$/;"	m
RequestTooLargeError	deps/plug/lib/plug/parsers.ex	/^  defmodule RequestTooLargeError do$/;"	m
Resource	deps/maru/lib/maru/router.ex	/^  defmodule Resource do$/;"	m
Response	deps/maru/lib/maru/helpers/response.ex	/^defmodule Maru.Helpers.Response do$/;"	m
Response	deps/maru/lib/maru/response.ex	/^defimpl Maru.Response, for: Any do$/;"	i
Response	deps/maru/lib/maru/response.ex	/^defimpl Maru.Response, for: BitString do$/;"	i
Response	deps/maru/lib/maru/response.ex	/^defprotocol Maru.Response do$/;"	p
Router	deps/maru/lib/maru/plugs/router.ex	/^defmodule Maru.Plugs.Router do$/;"	m
Router	deps/maru/lib/maru/router.ex	/^defmodule Maru.Router do$/;"	m
Router	deps/plug/lib/plug/router.ex	/^defmodule Plug.Router do$/;"	m
Routers	deps/maru/lib/maru/builder/routers.ex	/^defmodule Maru.Builder.Routers do$/;"	m
Routers	deps/maru/lib/mix/tasks/routers.ex	/^defmodule Mix.Tasks.Maru.Routers do$/;"	m
SHELL_OPTS	deps/cowboy/erlang.mk	/^SHELL_OPTS ?=$/;"	m
SHELL_OPTS	deps/cowlib/erlang.mk	/^SHELL_OPTS ?=$/;"	m
SHELL_OPTS	deps/ranch/erlang.mk	/^SHELL_OPTS ?=$/;"	m
SHELL_PATH	deps/cowboy/erlang.mk	/^SHELL_PATH ?= -pa $(CURDIR)\/ebin $(DEPS_DIR)\/*\/ebin$/;"	m
SHELL_PATH	deps/cowlib/erlang.mk	/^SHELL_PATH ?= -pa ..\/$(PROJECT)\/ebin $(DEPS_DIR)\/*\/ebin$/;"	m
SHELL_PATH	deps/ranch/erlang.mk	/^SHELL_PATH ?= -pa ..\/$(PROJECT)\/ebin $(DEPS_DIR)\/*\/ebin$/;"	m
SOURCES	deps/cowboy/erlang.mk	/^SOURCES := $(sort $(call core_find,$(C_SRC_DIR)\/,*.c *.C *.cc *.cpp))$/;"	m
SSL	deps/plug/lib/plug/ssl.ex	/^defmodule Plug.SSL do$/;"	m
Session	deps/plug/lib/plug/session.ex	/^defmodule Plug.Session do$/;"	m
SharedParams	deps/maru/lib/maru/helper.ex	/^      defmodule SharedParams do$/;"	m
Static	deps/plug/lib/plug/static.ex	/^defmodule Plug.Static do$/;"	m
Status	deps/plug/lib/plug/conn/status.ex	/^defmodule Plug.Conn.Status do$/;"	m
Store	deps/plug/lib/plug/session/store.ex	/^defmodule Plug.Session.Store do$/;"	m
String	deps/maru/lib/maru/param_type.ex	/^  defmodule String do$/;"	m
Supervisor	deps/plug/lib/plug/supervisor.ex	/^defmodule Plug.Supervisor do$/;"	m
SyntaxError	deps/poison/lib/poison/parser.ex	/^defmodule Poison.SyntaxError do$/;"	m
TAB	deps/ranch/src/ranch_server.erl	/^-define(TAB, ?MODULE).$/;"	d
TEST1_BOUNDARY	deps/cowlib/src/cow_multipart.erl	/^-define(TEST1_BOUNDARY, <<"frontier">>).$/;"	d
TEST1_MIME	deps/cowlib/src/cow_multipart.erl	/^-define(TEST1_MIME, <<$/;"	d
TEST2_BOUNDARY	deps/cowlib/src/cow_multipart.erl	/^-define(TEST2_BOUNDARY, <<"AaB03x">>).$/;"	d
TEST2_MIME	deps/cowlib/src/cow_multipart.erl	/^-define(TEST2_MIME, <<$/;"	d
TEST3_BOUNDARY	deps/cowlib/src/cow_multipart.erl	/^-define(TEST3_BOUNDARY, <<"boundary">>).$/;"	d
TEST3_MIME	deps/cowlib/src/cow_multipart.erl	/^-define(TEST3_MIME, <<$/;"	d
TEST4_BOUNDARY	deps/cowlib/src/cow_multipart.erl	/^-define(TEST4_BOUNDARY, <<"boundary">>).$/;"	d
TEST4_MIME	deps/cowlib/src/cow_multipart.erl	/^-define(TEST4_MIME, <<$/;"	d
TEST_DEPS	deps/cowboy/Makefile	/^TEST_DEPS = ct_helper gun$/;"	m
TEST_DEPS	deps/ranch/Makefile	/^TEST_DEPS = ct_helper$/;"	m
TEST_DIR	deps/cowboy/erlang.mk	/^TEST_DIR ?= $(CURDIR)\/test$/;"	m
TEST_ERLC_OPTS	deps/cowboy/erlang.mk	/^TEST_ERLC_OPTS ?= +debug_info +warn_export_vars +warn_shadow_vars +warn_obsolete_guard$/;"	m
TEST_ERLC_OPTS	deps/cowlib/erlang.mk	/^TEST_ERLC_OPTS ?= +debug_info +warn_export_vars +warn_shadow_vars +warn_obsolete_guard$/;"	m
TEST_ERLC_OPTS	deps/ranch/erlang.mk	/^TEST_ERLC_OPTS ?= +debug_info +warn_export_vars +warn_shadow_vars +warn_obsolete_guard$/;"	m
Term	deps/maru/lib/maru/param_type.ex	/^  defmodule Term do$/;"	m
Test	deps/maru/lib/maru/test.ex	/^defmodule Maru.Test do$/;"	m
Test	deps/plug/lib/plug/test.ex	/^defmodule Plug.Test do$/;"	m
Translator	deps/plug/lib/plug/adapters/translator.ex	/^defmodule Plug.Adapters.Translator do$/;"	m
UNAME_S	deps/cowboy/erlang.mk	/^UNAME_S := $(shell uname -s)$/;"	m
URLENCODED	deps/plug/lib/plug/parsers/urlencoded.ex	/^defmodule Plug.Parsers.URLENCODED do$/;"	m
UndefinedValidator	deps/maru/lib/maru/exceptions.ex	/^  defmodule UndefinedValidator do$/;"	m
Unfetched	deps/plug/lib/plug/conn/unfetched.ex	/^defmodule Plug.Conn.Unfetched do$/;"	m
UnsupportedMediaTypeError	deps/plug/lib/plug/parsers.ex	/^  defmodule UnsupportedMediaTypeError do$/;"	m
Upload	deps/plug/lib/plug/upload.ex	/^defmodule Plug.Upload do$/;"	m
Utils	deps/maru/lib/maru/utils.ex	/^defmodule Maru.Utils do$/;"	m
Utils	deps/plug/lib/plug/conn/utils.ex	/^defmodule Plug.Conn.Utils do$/;"	m
Utils	deps/plug/lib/plug/router/utils.ex	/^defmodule Plug.Router.Utils do$/;"	m
V	deps/cowboy/erlang.mk	/^V ?= 0$/;"	m
V	deps/cowlib/erlang.mk	/^V ?= 0$/;"	m
V	deps/ranch/erlang.mk	/^V ?= 0$/;"	m
Validation	deps/maru/lib/maru/exceptions.ex	/^  defmodule Validation do$/;"	m
Validations	deps/maru/lib/maru/validations.ex	/^defmodule Maru.Validations do$/;"	m
Validator	deps/maru/lib/maru/router.ex	/^  defmodule Validator do$/;"	m
Values	deps/maru/lib/maru/validations.ex	/^  defmodule Values do$/;"	m
Version	deps/maru/lib/maru/plugs/version.ex	/^defmodule Maru.Plugs.Version do$/;"	m
WS	deps/cowboy/erlang.mk	/^WS = $(subst a,,a $(wordlist 1,$(SP),a a a a a a a a a a a a a a a a a a a a))$/;"	m
WS	deps/cowboy/erlang.mk	/^WS = $(tab)$/;"	m
WrapperError	deps/plug/lib/plug/conn/wrapper_error.ex	/^defmodule Plug.Conn.WrapperError do$/;"	m
XREFR	deps/cowboy/erlang.mk	/^XREFR ?= $(CURDIR)\/xrefr$/;"	m
XREFR_URL	deps/cowboy/erlang.mk	/^XREFR_URL ?= https:\/\/github.com\/inaka\/xref_runner\/releases\/download\/0.2.2\/xrefr$/;"	m
XREF_ARGS	deps/cowboy/erlang.mk	/^	XREF_ARGS := -c $(XREF_CONFIG)$/;"	m
XREF_ARGS	deps/cowboy/erlang.mk	/^	XREF_ARGS :=$/;"	m
ZDICT	deps/cowlib/src/cow_spdy.hrl	/^-define(ZDICT, <<$/;"	d
__before_compile__	deps/maru/lib/maru/builder.ex	/^  defmacro __before_compile__(%Macro.Env{module: module}=env) do$/;"	a
__before_compile__	deps/maru/lib/maru/helper.ex	/^  defmacro __before_compile__(%Macro.Env{module: module}) do$/;"	a
__before_compile__	deps/plug/lib/plug/builder.ex	/^  defmacro __before_compile__(env) do$/;"	a
__before_compile__	deps/plug/lib/plug/debugger.ex	/^  defmacro __before_compile__(_) do$/;"	a
__before_compile__	deps/plug/lib/plug/error_handler.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__before_compile__	deps/plug/lib/plug/router.ex	/^  defmacro __before_compile__(_env) do$/;"	a
__catch__	deps/plug/lib/plug/debugger.ex	/^  def __catch__(_conn, :error, %Plug.Conn.WrapperError{} = wrapper, opts) do$/;"	f
__catch__	deps/plug/lib/plug/debugger.ex	/^  def __catch__(conn, kind, reason, opts) do$/;"	f
__catch__	deps/plug/lib/plug/debugger.ex	/^  defp __catch__(conn, kind, reason, stack, opts) do$/;"	f
__catch__	deps/plug/lib/plug/error_handler.ex	/^  def __catch__(_conn, :error, %Plug.Conn.WrapperError{} = wrapper, handle_errors) do$/;"	f
__catch__	deps/plug/lib/plug/error_handler.ex	/^  def __catch__(conn, kind, reason, handle_errors) do$/;"	f
__catch__	deps/plug/lib/plug/error_handler.ex	/^  defp __catch__(conn, kind, reason, stack, handle_errors) do$/;"	f
__deriving__	deps/poison/lib/poison/encoder.ex	/^  defmacro __deriving__(module, struct, options) do$/;"	a
__endpoints__	deps/maru/lib/maru/builder.ex	/^        def __endpoints__, do: @endpoints$/;"	f
__extend__	deps/maru/lib/maru/builder.ex	/^        def __extend__, do: @extend$/;"	f
__route__	deps/plug/lib/plug/router.ex	/^  def __route__(method, path, guards, options) do$/;"	f
__routers__	deps/maru/lib/maru/builder.ex	/^        def __routers__, do: @maru_router_plugs$/;"	f
__shared_params__	deps/maru/lib/maru/helper.ex	/^      def __shared_params__ do$/;"	f
__using__	deps/maru/lib/maru/builder.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/maru/lib/maru/helper.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/maru/lib/maru/helpers/response.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/maru/lib/maru/middleware.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/maru/lib/maru/router.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/maru/lib/maru/test.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/builder.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/debugger.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/error_handler.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/plug/lib/plug/router.ex	/^  defmacro __using__(opts) do$/;"	a
__using__	deps/plug/lib/plug/test.ex	/^  defmacro __using__(_) do$/;"	a
__using__	deps/poison/lib/poison/encoder.ex	/^  defmacro __using__(_) do$/;"	a
__version__	deps/maru/lib/maru/builder.ex	/^        def __version__, do: @version$/;"	f
absname	deps/cowboy/src/cowboy_static.erl	/^absname(Path) when is_binary(Path) ->$/;"	f	module:cowboy_static
absname	deps/cowboy/src/cowboy_static.erl	/^absname(Path) when is_list(Path) ->$/;"	f	module:cowboy_static
accept	deps/ranch/src/ranch_ssl.erl	/^accept(LSocket, Timeout) ->$/;"	f	module:ranch_ssl
accept	deps/ranch/src/ranch_tcp.erl	/^accept(LSocket, Timeout) ->$/;"	f	module:ranch_tcp
accept_ack	deps/ranch/src/ranch.erl	/^accept_ack(Ref) ->$/;"	f	module:ranch
accept_ack	deps/ranch/src/ranch_ssl.erl	/^accept_ack(CSocket, Timeout) ->$/;"	f	module:ranch_ssl
accept_ack	deps/ranch/src/ranch_tcp.erl	/^accept_ack(_, _) ->$/;"	f	module:ranch_tcp
accept_ext	deps/cowboy/src/cowboy_http.erl	/^accept_ext(Data, Fun, Type, SubType, Params, Quality, Acc) ->$/;"	f	module:cowboy_http
accept_ext_attr	deps/cowboy/src/cowboy_http.erl	/^accept_ext_attr(Data, Fun, Type, SubType, Params, Quality, Acc) ->$/;"	f	module:cowboy_http
accept_ext_value	deps/cowboy/src/cowboy_http.erl	/^accept_ext_value(Data, Fun, Type, SubType, Params, Quality, Acc, Attr) ->$/;"	f	module:cowboy_http
accept_resource	deps/cowboy/src/cowboy_rest.erl	/^accept_resource(Req, State) ->$/;"	f	module:cowboy_rest
active_connections	deps/ranch/src/ranch_conns_sup.erl	/^active_connections(SupPid) ->$/;"	f	module:ranch_conns_sup
add_seconds	deps/plug/lib/plug/conn/cookies.ex	/^  defp add_seconds(time, seconds_to_add) do$/;"	f
all	deps/cowlib/src/cow_mimetypes.erl	/^all(Path) ->$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"123">>) -> {<<"application">>, <<"vnd.lotus-1-2-3">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"3dml">>) -> {<<"text">>, <<"vnd.in3d.3dml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"3ds">>) -> {<<"image">>, <<"x-3ds">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"3g2">>) -> {<<"video">>, <<"3gpp2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"3gp">>) -> {<<"video">>, <<"3gpp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"7z">>) -> {<<"application">>, <<"x-7z-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aab">>) -> {<<"application">>, <<"x-authorware-bin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aac">>) -> {<<"audio">>, <<"x-aac">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aam">>) -> {<<"application">>, <<"x-authorware-map">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aas">>) -> {<<"application">>, <<"x-authorware-seg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"abw">>) -> {<<"application">>, <<"x-abiword">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ac">>) -> {<<"application">>, <<"pkix-attr-cert">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"acc">>) -> {<<"application">>, <<"vnd.americandynamics.acc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ace">>) -> {<<"application">>, <<"x-ace-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"acu">>) -> {<<"application">>, <<"vnd.acucobol">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"acutc">>) -> {<<"application">>, <<"vnd.acucorp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"adp">>) -> {<<"audio">>, <<"adpcm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aep">>) -> {<<"application">>, <<"vnd.audiograph">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"afm">>) -> {<<"application">>, <<"x-font-type1">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"afp">>) -> {<<"application">>, <<"vnd.ibm.modcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ahead">>) -> {<<"application">>, <<"vnd.ahead.space">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ai">>) -> {<<"application">>, <<"postscript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aif">>) -> {<<"audio">>, <<"x-aiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aifc">>) -> {<<"audio">>, <<"x-aiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aiff">>) -> {<<"audio">>, <<"x-aiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"air">>) -> {<<"application">>, <<"vnd.adobe.air-application-installer-package+zip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ait">>) -> {<<"application">>, <<"vnd.dvb.ait">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ami">>) -> {<<"application">>, <<"vnd.amiga.ami">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"apk">>) -> {<<"application">>, <<"vnd.android.package-archive">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"appcache">>) -> {<<"text">>, <<"cache-manifest">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"application">>) -> {<<"application">>, <<"x-ms-application">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"apr">>) -> {<<"application">>, <<"vnd.lotus-approach">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"arc">>) -> {<<"application">>, <<"x-freearc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"asc">>) -> {<<"application">>, <<"pgp-signature">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"asf">>) -> {<<"video">>, <<"x-ms-asf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"asm">>) -> {<<"text">>, <<"x-asm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aso">>) -> {<<"application">>, <<"vnd.accpac.simply.aso">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"asx">>) -> {<<"video">>, <<"x-ms-asf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"atc">>) -> {<<"application">>, <<"vnd.acucorp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"atom">>) -> {<<"application">>, <<"atom+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"atomcat">>) -> {<<"application">>, <<"atomcat+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"atomsvc">>) -> {<<"application">>, <<"atomsvc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"atx">>) -> {<<"application">>, <<"vnd.antix.game-component">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"au">>) -> {<<"audio">>, <<"basic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"avi">>) -> {<<"video">>, <<"x-msvideo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"aw">>) -> {<<"application">>, <<"applixware">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"azf">>) -> {<<"application">>, <<"vnd.airzip.filesecure.azf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"azs">>) -> {<<"application">>, <<"vnd.airzip.filesecure.azs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"azw">>) -> {<<"application">>, <<"vnd.amazon.ebook">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bat">>) -> {<<"application">>, <<"x-msdownload">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bcpio">>) -> {<<"application">>, <<"x-bcpio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bdf">>) -> {<<"application">>, <<"x-font-bdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bdm">>) -> {<<"application">>, <<"vnd.syncml.dm+wbxml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bed">>) -> {<<"application">>, <<"vnd.realvnc.bed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bh2">>) -> {<<"application">>, <<"vnd.fujitsu.oasysprs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bin">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"blb">>) -> {<<"application">>, <<"x-blorb">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"blorb">>) -> {<<"application">>, <<"x-blorb">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bmi">>) -> {<<"application">>, <<"vnd.bmi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bmp">>) -> {<<"image">>, <<"bmp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"book">>) -> {<<"application">>, <<"vnd.framemaker">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"box">>) -> {<<"application">>, <<"vnd.previewsystems.box">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"boz">>) -> {<<"application">>, <<"x-bzip2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bpk">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"btif">>) -> {<<"image">>, <<"prs.btif">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bz">>) -> {<<"application">>, <<"x-bzip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"bz2">>) -> {<<"application">>, <<"x-bzip2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c11amc">>) -> {<<"application">>, <<"vnd.cluetrust.cartomobile-config">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c11amz">>) -> {<<"application">>, <<"vnd.cluetrust.cartomobile-config-pkg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c4d">>) -> {<<"application">>, <<"vnd.clonk.c4group">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c4f">>) -> {<<"application">>, <<"vnd.clonk.c4group">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c4g">>) -> {<<"application">>, <<"vnd.clonk.c4group">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c4p">>) -> {<<"application">>, <<"vnd.clonk.c4group">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"c4u">>) -> {<<"application">>, <<"vnd.clonk.c4group">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cab">>) -> {<<"application">>, <<"vnd.ms-cab-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"caf">>) -> {<<"audio">>, <<"x-caf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cap">>) -> {<<"application">>, <<"vnd.tcpdump.pcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"car">>) -> {<<"application">>, <<"vnd.curl.car">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cat">>) -> {<<"application">>, <<"vnd.ms-pki.seccat">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cb7">>) -> {<<"application">>, <<"x-cbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cba">>) -> {<<"application">>, <<"x-cbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cbr">>) -> {<<"application">>, <<"x-cbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cbt">>) -> {<<"application">>, <<"x-cbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cbz">>) -> {<<"application">>, <<"x-cbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cc">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cct">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ccxml">>) -> {<<"application">>, <<"ccxml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdbcmsg">>) -> {<<"application">>, <<"vnd.contact.cmsg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdf">>) -> {<<"application">>, <<"x-netcdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdkey">>) -> {<<"application">>, <<"vnd.mediastation.cdkey">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdmia">>) -> {<<"application">>, <<"cdmi-capability">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdmic">>) -> {<<"application">>, <<"cdmi-container">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdmid">>) -> {<<"application">>, <<"cdmi-domain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdmio">>) -> {<<"application">>, <<"cdmi-object">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdmiq">>) -> {<<"application">>, <<"cdmi-queue">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdx">>) -> {<<"chemical">>, <<"x-cdx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdxml">>) -> {<<"application">>, <<"vnd.chemdraw+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cdy">>) -> {<<"application">>, <<"vnd.cinderella">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cer">>) -> {<<"application">>, <<"pkix-cert">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cfs">>) -> {<<"application">>, <<"x-cfs-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cgm">>) -> {<<"image">>, <<"cgm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"chat">>) -> {<<"application">>, <<"x-chat">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"chm">>) -> {<<"application">>, <<"vnd.ms-htmlhelp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"chrt">>) -> {<<"application">>, <<"vnd.kde.kchart">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cif">>) -> {<<"chemical">>, <<"x-cif">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cii">>) -> {<<"application">>, <<"vnd.anser-web-certificate-issue-initiation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cil">>) -> {<<"application">>, <<"vnd.ms-artgalry">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cla">>) -> {<<"application">>, <<"vnd.claymore">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"class">>) -> {<<"application">>, <<"java-vm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clkk">>) -> {<<"application">>, <<"vnd.crick.clicker.keyboard">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clkp">>) -> {<<"application">>, <<"vnd.crick.clicker.palette">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clkt">>) -> {<<"application">>, <<"vnd.crick.clicker.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clkw">>) -> {<<"application">>, <<"vnd.crick.clicker.wordbank">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clkx">>) -> {<<"application">>, <<"vnd.crick.clicker">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"clp">>) -> {<<"application">>, <<"x-msclip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cmc">>) -> {<<"application">>, <<"vnd.cosmocaller">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cmdf">>) -> {<<"chemical">>, <<"x-cmdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cml">>) -> {<<"chemical">>, <<"x-cml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cmp">>) -> {<<"application">>, <<"vnd.yellowriver-custom-menu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cmx">>) -> {<<"image">>, <<"x-cmx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cod">>) -> {<<"application">>, <<"vnd.rim.cod">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"com">>) -> {<<"application">>, <<"x-msdownload">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"conf">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cpio">>) -> {<<"application">>, <<"x-cpio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cpp">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cpt">>) -> {<<"application">>, <<"mac-compactpro">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"crd">>) -> {<<"application">>, <<"x-mscardfile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"crl">>) -> {<<"application">>, <<"pkix-crl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"crt">>) -> {<<"application">>, <<"x-x509-ca-cert">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cryptonote">>) -> {<<"application">>, <<"vnd.rig.cryptonote">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"csh">>) -> {<<"application">>, <<"x-csh">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"csml">>) -> {<<"chemical">>, <<"x-csml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"csp">>) -> {<<"application">>, <<"vnd.commonspace">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"css">>) -> {<<"text">>, <<"css">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cst">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"csv">>) -> {<<"text">>, <<"csv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cu">>) -> {<<"application">>, <<"cu-seeme">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"curl">>) -> {<<"text">>, <<"vnd.curl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cww">>) -> {<<"application">>, <<"prs.cww">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cxt">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"cxx">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dae">>) -> {<<"model">>, <<"vnd.collada+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"daf">>) -> {<<"application">>, <<"vnd.mobius.daf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dart">>) -> {<<"application">>, <<"vnd.dart">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dataless">>) -> {<<"application">>, <<"vnd.fdsn.seed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"davmount">>) -> {<<"application">>, <<"davmount+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dbk">>) -> {<<"application">>, <<"docbook+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dcr">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dcurl">>) -> {<<"text">>, <<"vnd.curl.dcurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dd2">>) -> {<<"application">>, <<"vnd.oma.dd2+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ddd">>) -> {<<"application">>, <<"vnd.fujixerox.ddd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"deb">>) -> {<<"application">>, <<"x-debian-package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"def">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"deploy">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"der">>) -> {<<"application">>, <<"x-x509-ca-cert">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dfac">>) -> {<<"application">>, <<"vnd.dreamfactory">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dgc">>) -> {<<"application">>, <<"x-dgc-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dic">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dir">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dis">>) -> {<<"application">>, <<"vnd.mobius.dis">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dist">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"distz">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"djv">>) -> {<<"image">>, <<"vnd.djvu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"djvu">>) -> {<<"image">>, <<"vnd.djvu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dll">>) -> {<<"application">>, <<"x-msdownload">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dmg">>) -> {<<"application">>, <<"x-apple-diskimage">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dmp">>) -> {<<"application">>, <<"vnd.tcpdump.pcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dms">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dna">>) -> {<<"application">>, <<"vnd.dna">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"doc">>) -> {<<"application">>, <<"msword">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"docm">>) -> {<<"application">>, <<"vnd.ms-word.document.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"docx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.wordprocessingml.document">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dot">>) -> {<<"application">>, <<"msword">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dotm">>) -> {<<"application">>, <<"vnd.ms-word.template.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dotx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.wordprocessingml.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dp">>) -> {<<"application">>, <<"vnd.osgi.dp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dpg">>) -> {<<"application">>, <<"vnd.dpgraph">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dra">>) -> {<<"audio">>, <<"vnd.dra">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dsc">>) -> {<<"text">>, <<"prs.lines.tag">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dssc">>) -> {<<"application">>, <<"dssc+der">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dtb">>) -> {<<"application">>, <<"x-dtbook+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dtd">>) -> {<<"application">>, <<"xml-dtd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dts">>) -> {<<"audio">>, <<"vnd.dts">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dtshd">>) -> {<<"audio">>, <<"vnd.dts.hd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dump">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dvb">>) -> {<<"video">>, <<"vnd.dvb.file">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dvi">>) -> {<<"application">>, <<"x-dvi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dwf">>) -> {<<"model">>, <<"vnd.dwf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dwg">>) -> {<<"image">>, <<"vnd.dwg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dxf">>) -> {<<"image">>, <<"vnd.dxf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dxp">>) -> {<<"application">>, <<"vnd.spotfire.dxp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"dxr">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ecelp4800">>) -> {<<"audio">>, <<"vnd.nuera.ecelp4800">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ecelp7470">>) -> {<<"audio">>, <<"vnd.nuera.ecelp7470">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ecelp9600">>) -> {<<"audio">>, <<"vnd.nuera.ecelp9600">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ecma">>) -> {<<"application">>, <<"ecmascript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"edm">>) -> {<<"application">>, <<"vnd.novadigm.edm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"edx">>) -> {<<"application">>, <<"vnd.novadigm.edx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"efif">>) -> {<<"application">>, <<"vnd.picsel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ei6">>) -> {<<"application">>, <<"vnd.pg.osasli">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"elc">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"emf">>) -> {<<"application">>, <<"x-msmetafile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"eml">>) -> {<<"message">>, <<"rfc822">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"emma">>) -> {<<"application">>, <<"emma+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"emz">>) -> {<<"application">>, <<"x-msmetafile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"eol">>) -> {<<"audio">>, <<"vnd.digital-winds">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"eot">>) -> {<<"application">>, <<"vnd.ms-fontobject">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"eps">>) -> {<<"application">>, <<"postscript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"epub">>) -> {<<"application">>, <<"epub+zip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"es3">>) -> {<<"application">>, <<"vnd.eszigno3+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"esa">>) -> {<<"application">>, <<"vnd.osgi.subsystem">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"esf">>) -> {<<"application">>, <<"vnd.epson.esf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"et3">>) -> {<<"application">>, <<"vnd.eszigno3+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"etx">>) -> {<<"text">>, <<"x-setext">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"eva">>) -> {<<"application">>, <<"x-eva">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"evy">>) -> {<<"application">>, <<"x-envoy">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"exe">>) -> {<<"application">>, <<"x-msdownload">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"exi">>) -> {<<"application">>, <<"exi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ext">>) -> {<<"application">>, <<"vnd.novadigm.ext">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ez">>) -> {<<"application">>, <<"andrew-inset">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ez2">>) -> {<<"application">>, <<"vnd.ezpix-album">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ez3">>) -> {<<"application">>, <<"vnd.ezpix-package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"f">>) -> {<<"text">>, <<"x-fortran">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"f4v">>) -> {<<"video">>, <<"x-f4v">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"f77">>) -> {<<"text">>, <<"x-fortran">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"f90">>) -> {<<"text">>, <<"x-fortran">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fbs">>) -> {<<"image">>, <<"vnd.fastbidsheet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fcdt">>) -> {<<"application">>, <<"vnd.adobe.formscentral.fcdt">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fcs">>) -> {<<"application">>, <<"vnd.isac.fcs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fdf">>) -> {<<"application">>, <<"vnd.fdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fe_launch">>) -> {<<"application">>, <<"vnd.denovo.fcselayout-link">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fg5">>) -> {<<"application">>, <<"vnd.fujitsu.oasysgp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fgd">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fh">>) -> {<<"image">>, <<"x-freehand">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fh4">>) -> {<<"image">>, <<"x-freehand">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fh5">>) -> {<<"image">>, <<"x-freehand">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fh7">>) -> {<<"image">>, <<"x-freehand">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fhc">>) -> {<<"image">>, <<"x-freehand">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fig">>) -> {<<"application">>, <<"x-xfig">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"flac">>) -> {<<"audio">>, <<"x-flac">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fli">>) -> {<<"video">>, <<"x-fli">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"flo">>) -> {<<"application">>, <<"vnd.micrografx.flo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"flv">>) -> {<<"video">>, <<"x-flv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"flw">>) -> {<<"application">>, <<"vnd.kde.kivio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"flx">>) -> {<<"text">>, <<"vnd.fmi.flexstor">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fly">>) -> {<<"text">>, <<"vnd.fly">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fm">>) -> {<<"application">>, <<"vnd.framemaker">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fnc">>) -> {<<"application">>, <<"vnd.frogans.fnc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"for">>) -> {<<"text">>, <<"x-fortran">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fpx">>) -> {<<"image">>, <<"vnd.fpx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"frame">>) -> {<<"application">>, <<"vnd.framemaker">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fsc">>) -> {<<"application">>, <<"vnd.fsc.weblaunch">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fst">>) -> {<<"image">>, <<"vnd.fst">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ftc">>) -> {<<"application">>, <<"vnd.fluxtime.clip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fti">>) -> {<<"application">>, <<"vnd.anser-web-funds-transfer-initiation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fvt">>) -> {<<"video">>, <<"vnd.fvt">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fxp">>) -> {<<"application">>, <<"vnd.adobe.fxp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fxpl">>) -> {<<"application">>, <<"vnd.adobe.fxp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"fzs">>) -> {<<"application">>, <<"vnd.fuzzysheet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"g2w">>) -> {<<"application">>, <<"vnd.geoplan">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"g3">>) -> {<<"image">>, <<"g3fax">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"g3w">>) -> {<<"application">>, <<"vnd.geospace">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gac">>) -> {<<"application">>, <<"vnd.groove-account">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gam">>) -> {<<"application">>, <<"x-tads">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gbr">>) -> {<<"application">>, <<"rpki-ghostbusters">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gca">>) -> {<<"application">>, <<"x-gca-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gdl">>) -> {<<"model">>, <<"vnd.gdl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"geo">>) -> {<<"application">>, <<"vnd.dynageo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gex">>) -> {<<"application">>, <<"vnd.geometry-explorer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ggb">>) -> {<<"application">>, <<"vnd.geogebra.file">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ggt">>) -> {<<"application">>, <<"vnd.geogebra.tool">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ghf">>) -> {<<"application">>, <<"vnd.groove-help">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gif">>) -> {<<"image">>, <<"gif">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gim">>) -> {<<"application">>, <<"vnd.groove-identity-message">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gml">>) -> {<<"application">>, <<"gml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gmx">>) -> {<<"application">>, <<"vnd.gmx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gnumeric">>) -> {<<"application">>, <<"x-gnumeric">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gph">>) -> {<<"application">>, <<"vnd.flographit">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gpx">>) -> {<<"application">>, <<"gpx+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gqf">>) -> {<<"application">>, <<"vnd.grafeq">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gqs">>) -> {<<"application">>, <<"vnd.grafeq">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gram">>) -> {<<"application">>, <<"srgs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gramps">>) -> {<<"application">>, <<"x-gramps-xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gre">>) -> {<<"application">>, <<"vnd.geometry-explorer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"grv">>) -> {<<"application">>, <<"vnd.groove-injector">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"grxml">>) -> {<<"application">>, <<"srgs+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gsf">>) -> {<<"application">>, <<"x-font-ghostscript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gtar">>) -> {<<"application">>, <<"x-gtar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gtm">>) -> {<<"application">>, <<"vnd.groove-tool-message">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gtw">>) -> {<<"model">>, <<"vnd.gtw">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gv">>) -> {<<"text">>, <<"vnd.graphviz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gxf">>) -> {<<"application">>, <<"gxf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"gxt">>) -> {<<"application">>, <<"vnd.geonext">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"h">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"h261">>) -> {<<"video">>, <<"h261">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"h263">>) -> {<<"video">>, <<"h263">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"h264">>) -> {<<"video">>, <<"h264">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hal">>) -> {<<"application">>, <<"vnd.hal+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hbci">>) -> {<<"application">>, <<"vnd.hbci">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hdf">>) -> {<<"application">>, <<"x-hdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hh">>) -> {<<"text">>, <<"x-c">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hlp">>) -> {<<"application">>, <<"winhlp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hpgl">>) -> {<<"application">>, <<"vnd.hp-hpgl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hpid">>) -> {<<"application">>, <<"vnd.hp-hpid">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hps">>) -> {<<"application">>, <<"vnd.hp-hps">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hqx">>) -> {<<"application">>, <<"mac-binhex40">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"htke">>) -> {<<"application">>, <<"vnd.kenameaapp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"htm">>) -> {<<"text">>, <<"html">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"html">>) -> {<<"text">>, <<"html">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hvd">>) -> {<<"application">>, <<"vnd.yamaha.hv-dic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hvp">>) -> {<<"application">>, <<"vnd.yamaha.hv-voice">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"hvs">>) -> {<<"application">>, <<"vnd.yamaha.hv-script">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"i2g">>) -> {<<"application">>, <<"vnd.intergeo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"icc">>) -> {<<"application">>, <<"vnd.iccprofile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ice">>) -> {<<"x-conference">>, <<"x-cooltalk">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"icm">>) -> {<<"application">>, <<"vnd.iccprofile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ico">>) -> {<<"image">>, <<"x-icon">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ics">>) -> {<<"text">>, <<"calendar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ief">>) -> {<<"image">>, <<"ief">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ifb">>) -> {<<"text">>, <<"calendar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ifm">>) -> {<<"application">>, <<"vnd.shana.informed.formdata">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"iges">>) -> {<<"model">>, <<"iges">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"igl">>) -> {<<"application">>, <<"vnd.igloader">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"igm">>) -> {<<"application">>, <<"vnd.insors.igm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"igs">>) -> {<<"model">>, <<"iges">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"igx">>) -> {<<"application">>, <<"vnd.micrografx.igx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"iif">>) -> {<<"application">>, <<"vnd.shana.informed.interchange">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"imp">>) -> {<<"application">>, <<"vnd.accpac.simply.imp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ims">>) -> {<<"application">>, <<"vnd.ms-ims">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"in">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ink">>) -> {<<"application">>, <<"inkml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"inkml">>) -> {<<"application">>, <<"inkml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"install">>) -> {<<"application">>, <<"x-install-instructions">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"iota">>) -> {<<"application">>, <<"vnd.astraea-software.iota">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ipfix">>) -> {<<"application">>, <<"ipfix">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ipk">>) -> {<<"application">>, <<"vnd.shana.informed.package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"irm">>) -> {<<"application">>, <<"vnd.ibm.rights-management">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"irp">>) -> {<<"application">>, <<"vnd.irepository.package+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"iso">>) -> {<<"application">>, <<"x-iso9660-image">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"itp">>) -> {<<"application">>, <<"vnd.shana.informed.formtemplate">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ivp">>) -> {<<"application">>, <<"vnd.immervision-ivp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ivu">>) -> {<<"application">>, <<"vnd.immervision-ivu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jad">>) -> {<<"text">>, <<"vnd.sun.j2me.app-descriptor">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jam">>) -> {<<"application">>, <<"vnd.jam">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jar">>) -> {<<"application">>, <<"java-archive">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"java">>) -> {<<"text">>, <<"x-java-source">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jisp">>) -> {<<"application">>, <<"vnd.jisp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jlt">>) -> {<<"application">>, <<"vnd.hp-jlyt">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jnlp">>) -> {<<"application">>, <<"x-java-jnlp-file">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"joda">>) -> {<<"application">>, <<"vnd.joost.joda-archive">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpe">>) -> {<<"image">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpeg">>) -> {<<"image">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpg">>) -> {<<"image">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpgm">>) -> {<<"video">>, <<"jpm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpgv">>) -> {<<"video">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jpm">>) -> {<<"video">>, <<"jpm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"js">>) -> {<<"application">>, <<"javascript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"json">>) -> {<<"application">>, <<"json">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"jsonml">>) -> {<<"application">>, <<"jsonml+json">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kar">>) -> {<<"audio">>, <<"midi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"karbon">>) -> {<<"application">>, <<"vnd.kde.karbon">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kfo">>) -> {<<"application">>, <<"vnd.kde.kformula">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kia">>) -> {<<"application">>, <<"vnd.kidspiration">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kml">>) -> {<<"application">>, <<"vnd.google-earth.kml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kmz">>) -> {<<"application">>, <<"vnd.google-earth.kmz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kne">>) -> {<<"application">>, <<"vnd.kinar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"knp">>) -> {<<"application">>, <<"vnd.kinar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kon">>) -> {<<"application">>, <<"vnd.kde.kontour">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kpr">>) -> {<<"application">>, <<"vnd.kde.kpresenter">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kpt">>) -> {<<"application">>, <<"vnd.kde.kpresenter">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kpxx">>) -> {<<"application">>, <<"vnd.ds-keypoint">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ksp">>) -> {<<"application">>, <<"vnd.kde.kspread">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ktr">>) -> {<<"application">>, <<"vnd.kahootz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ktx">>) -> {<<"image">>, <<"ktx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ktz">>) -> {<<"application">>, <<"vnd.kahootz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kwd">>) -> {<<"application">>, <<"vnd.kde.kword">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"kwt">>) -> {<<"application">>, <<"vnd.kde.kword">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lasxml">>) -> {<<"application">>, <<"vnd.las.las+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"latex">>) -> {<<"application">>, <<"x-latex">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lbd">>) -> {<<"application">>, <<"vnd.llamagraphics.life-balance.desktop">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lbe">>) -> {<<"application">>, <<"vnd.llamagraphics.life-balance.exchange+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"les">>) -> {<<"application">>, <<"vnd.hhe.lesson-player">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lha">>) -> {<<"application">>, <<"x-lzh-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"link66">>) -> {<<"application">>, <<"vnd.route66.link66+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"list">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"list3820">>) -> {<<"application">>, <<"vnd.ibm.modcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"listafp">>) -> {<<"application">>, <<"vnd.ibm.modcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lnk">>) -> {<<"application">>, <<"x-ms-shortcut">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"log">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lostxml">>) -> {<<"application">>, <<"lost+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lrf">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lrm">>) -> {<<"application">>, <<"vnd.ms-lrm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ltf">>) -> {<<"application">>, <<"vnd.frogans.ltf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lvp">>) -> {<<"audio">>, <<"vnd.lucent.voice">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lwp">>) -> {<<"application">>, <<"vnd.lotus-wordpro">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"lzh">>) -> {<<"application">>, <<"x-lzh-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m13">>) -> {<<"application">>, <<"x-msmediaview">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m14">>) -> {<<"application">>, <<"x-msmediaview">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m1v">>) -> {<<"video">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m21">>) -> {<<"application">>, <<"mp21">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m2a">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m2v">>) -> {<<"video">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m3a">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m3u">>) -> {<<"audio">>, <<"x-mpegurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m3u8">>) -> {<<"application">>, <<"vnd.apple.mpegurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m4u">>) -> {<<"video">>, <<"vnd.mpegurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"m4v">>) -> {<<"video">>, <<"x-m4v">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ma">>) -> {<<"application">>, <<"mathematica">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mads">>) -> {<<"application">>, <<"mads+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mag">>) -> {<<"application">>, <<"vnd.ecowin.chart">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"maker">>) -> {<<"application">>, <<"vnd.framemaker">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"man">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mar">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mathml">>) -> {<<"application">>, <<"mathml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mb">>) -> {<<"application">>, <<"mathematica">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mbk">>) -> {<<"application">>, <<"vnd.mobius.mbk">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mbox">>) -> {<<"application">>, <<"mbox">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mc1">>) -> {<<"application">>, <<"vnd.medcalcdata">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mcd">>) -> {<<"application">>, <<"vnd.mcd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mcurl">>) -> {<<"text">>, <<"vnd.curl.mcurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mdb">>) -> {<<"application">>, <<"x-msaccess">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mdi">>) -> {<<"image">>, <<"vnd.ms-modi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"me">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mesh">>) -> {<<"model">>, <<"mesh">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"meta4">>) -> {<<"application">>, <<"metalink4+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"metalink">>) -> {<<"application">>, <<"metalink+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mets">>) -> {<<"application">>, <<"mets+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mfm">>) -> {<<"application">>, <<"vnd.mfmp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mft">>) -> {<<"application">>, <<"rpki-manifest">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mgp">>) -> {<<"application">>, <<"vnd.osgeo.mapguide.package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mgz">>) -> {<<"application">>, <<"vnd.proteus.magazine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mid">>) -> {<<"audio">>, <<"midi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"midi">>) -> {<<"audio">>, <<"midi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mie">>) -> {<<"application">>, <<"x-mie">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mif">>) -> {<<"application">>, <<"vnd.mif">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mime">>) -> {<<"message">>, <<"rfc822">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mj2">>) -> {<<"video">>, <<"mj2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mjp2">>) -> {<<"video">>, <<"mj2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mk3d">>) -> {<<"video">>, <<"x-matroska">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mka">>) -> {<<"audio">>, <<"x-matroska">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mks">>) -> {<<"video">>, <<"x-matroska">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mkv">>) -> {<<"video">>, <<"x-matroska">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mlp">>) -> {<<"application">>, <<"vnd.dolby.mlp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mmd">>) -> {<<"application">>, <<"vnd.chipnuts.karaoke-mmd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mmf">>) -> {<<"application">>, <<"vnd.smaf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mmr">>) -> {<<"image">>, <<"vnd.fujixerox.edmics-mmr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mng">>) -> {<<"video">>, <<"x-mng">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mny">>) -> {<<"application">>, <<"x-msmoney">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mobi">>) -> {<<"application">>, <<"x-mobipocket-ebook">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mods">>) -> {<<"application">>, <<"mods+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mov">>) -> {<<"video">>, <<"quicktime">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"movie">>) -> {<<"video">>, <<"x-sgi-movie">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp2">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp21">>) -> {<<"application">>, <<"mp21">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp2a">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp3">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp4">>) -> {<<"video">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp4a">>) -> {<<"audio">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp4s">>) -> {<<"application">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mp4v">>) -> {<<"video">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpc">>) -> {<<"application">>, <<"vnd.mophun.certificate">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpe">>) -> {<<"video">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpeg">>) -> {<<"video">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpg">>) -> {<<"video">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpg4">>) -> {<<"video">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpga">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpkg">>) -> {<<"application">>, <<"vnd.apple.installer+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpm">>) -> {<<"application">>, <<"vnd.blueice.multipass">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpn">>) -> {<<"application">>, <<"vnd.mophun.application">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpp">>) -> {<<"application">>, <<"vnd.ms-project">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpt">>) -> {<<"application">>, <<"vnd.ms-project">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mpy">>) -> {<<"application">>, <<"vnd.ibm.minipay">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mqy">>) -> {<<"application">>, <<"vnd.mobius.mqy">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mrc">>) -> {<<"application">>, <<"marc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mrcx">>) -> {<<"application">>, <<"marcxml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ms">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mscml">>) -> {<<"application">>, <<"mediaservercontrol+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mseed">>) -> {<<"application">>, <<"vnd.fdsn.mseed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mseq">>) -> {<<"application">>, <<"vnd.mseq">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"msf">>) -> {<<"application">>, <<"vnd.epson.msf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"msh">>) -> {<<"model">>, <<"mesh">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"msi">>) -> {<<"application">>, <<"x-msdownload">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"msl">>) -> {<<"application">>, <<"vnd.mobius.msl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"msty">>) -> {<<"application">>, <<"vnd.muvee.style">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mts">>) -> {<<"model">>, <<"vnd.mts">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mus">>) -> {<<"application">>, <<"vnd.musician">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"musicxml">>) -> {<<"application">>, <<"vnd.recordare.musicxml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mvb">>) -> {<<"application">>, <<"x-msmediaview">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mwf">>) -> {<<"application">>, <<"vnd.mfer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mxf">>) -> {<<"application">>, <<"mxf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mxl">>) -> {<<"application">>, <<"vnd.recordare.musicxml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mxml">>) -> {<<"application">>, <<"xv+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mxs">>) -> {<<"application">>, <<"vnd.triscape.mxs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"mxu">>) -> {<<"video">>, <<"vnd.mpegurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"n-gage">>) -> {<<"application">>, <<"vnd.nokia.n-gage.symbian.install">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"n3">>) -> {<<"text">>, <<"n3">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nb">>) -> {<<"application">>, <<"mathematica">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nbp">>) -> {<<"application">>, <<"vnd.wolfram.player">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nc">>) -> {<<"application">>, <<"x-netcdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ncx">>) -> {<<"application">>, <<"x-dtbncx+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nfo">>) -> {<<"text">>, <<"x-nfo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ngdat">>) -> {<<"application">>, <<"vnd.nokia.n-gage.data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nitf">>) -> {<<"application">>, <<"vnd.nitf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nlu">>) -> {<<"application">>, <<"vnd.neurolanguage.nlu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nml">>) -> {<<"application">>, <<"vnd.enliven">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nnd">>) -> {<<"application">>, <<"vnd.noblenet-directory">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nns">>) -> {<<"application">>, <<"vnd.noblenet-sealer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nnw">>) -> {<<"application">>, <<"vnd.noblenet-web">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"npx">>) -> {<<"image">>, <<"vnd.net-fpx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nsc">>) -> {<<"application">>, <<"x-conference">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nsf">>) -> {<<"application">>, <<"vnd.lotus-notes">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ntf">>) -> {<<"application">>, <<"vnd.nitf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"nzb">>) -> {<<"application">>, <<"x-nzb">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oa2">>) -> {<<"application">>, <<"vnd.fujitsu.oasys2">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oa3">>) -> {<<"application">>, <<"vnd.fujitsu.oasys3">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oas">>) -> {<<"application">>, <<"vnd.fujitsu.oasys">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"obd">>) -> {<<"application">>, <<"x-msbinder">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"obj">>) -> {<<"application">>, <<"x-tgif">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oda">>) -> {<<"application">>, <<"oda">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odb">>) -> {<<"application">>, <<"vnd.oasis.opendocument.database">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odc">>) -> {<<"application">>, <<"vnd.oasis.opendocument.chart">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odf">>) -> {<<"application">>, <<"vnd.oasis.opendocument.formula">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odft">>) -> {<<"application">>, <<"vnd.oasis.opendocument.formula-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odg">>) -> {<<"application">>, <<"vnd.oasis.opendocument.graphics">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odi">>) -> {<<"application">>, <<"vnd.oasis.opendocument.image">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odm">>) -> {<<"application">>, <<"vnd.oasis.opendocument.text-master">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odp">>) -> {<<"application">>, <<"vnd.oasis.opendocument.presentation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ods">>) -> {<<"application">>, <<"vnd.oasis.opendocument.spreadsheet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"odt">>) -> {<<"application">>, <<"vnd.oasis.opendocument.text">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oga">>) -> {<<"audio">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ogg">>) -> {<<"audio">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ogv">>) -> {<<"video">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ogx">>) -> {<<"application">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"omdoc">>) -> {<<"application">>, <<"omdoc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"onepkg">>) -> {<<"application">>, <<"onenote">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"onetmp">>) -> {<<"application">>, <<"onenote">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"onetoc">>) -> {<<"application">>, <<"onenote">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"onetoc2">>) -> {<<"application">>, <<"onenote">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"opf">>) -> {<<"application">>, <<"oebps-package+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"opml">>) -> {<<"text">>, <<"x-opml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oprc">>) -> {<<"application">>, <<"vnd.palm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"org">>) -> {<<"application">>, <<"vnd.lotus-organizer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"osf">>) -> {<<"application">>, <<"vnd.yamaha.openscoreformat">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"osfpvg">>) -> {<<"application">>, <<"vnd.yamaha.openscoreformat.osfpvg+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"otc">>) -> {<<"application">>, <<"vnd.oasis.opendocument.chart-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"otf">>) -> {<<"application">>, <<"x-font-otf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"otg">>) -> {<<"application">>, <<"vnd.oasis.opendocument.graphics-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oth">>) -> {<<"application">>, <<"vnd.oasis.opendocument.text-web">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oti">>) -> {<<"application">>, <<"vnd.oasis.opendocument.image-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"otp">>) -> {<<"application">>, <<"vnd.oasis.opendocument.presentation-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ots">>) -> {<<"application">>, <<"vnd.oasis.opendocument.spreadsheet-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ott">>) -> {<<"application">>, <<"vnd.oasis.opendocument.text-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oxps">>) -> {<<"application">>, <<"oxps">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"oxt">>) -> {<<"application">>, <<"vnd.openofficeorg.extension">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p">>) -> {<<"text">>, <<"x-pascal">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p10">>) -> {<<"application">>, <<"pkcs10">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p12">>) -> {<<"application">>, <<"x-pkcs12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p7b">>) -> {<<"application">>, <<"x-pkcs7-certificates">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p7c">>) -> {<<"application">>, <<"pkcs7-mime">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p7m">>) -> {<<"application">>, <<"pkcs7-mime">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p7r">>) -> {<<"application">>, <<"x-pkcs7-certreqresp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p7s">>) -> {<<"application">>, <<"pkcs7-signature">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"p8">>) -> {<<"application">>, <<"pkcs8">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pas">>) -> {<<"text">>, <<"x-pascal">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"paw">>) -> {<<"application">>, <<"vnd.pawaafile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pbd">>) -> {<<"application">>, <<"vnd.powerbuilder6">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pbm">>) -> {<<"image">>, <<"x-portable-bitmap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pcap">>) -> {<<"application">>, <<"vnd.tcpdump.pcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pcf">>) -> {<<"application">>, <<"x-font-pcf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pcl">>) -> {<<"application">>, <<"vnd.hp-pcl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pclxl">>) -> {<<"application">>, <<"vnd.hp-pclxl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pct">>) -> {<<"image">>, <<"x-pict">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pcurl">>) -> {<<"application">>, <<"vnd.curl.pcurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pcx">>) -> {<<"image">>, <<"x-pcx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pdb">>) -> {<<"application">>, <<"vnd.palm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pdf">>) -> {<<"application">>, <<"pdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pfa">>) -> {<<"application">>, <<"x-font-type1">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pfb">>) -> {<<"application">>, <<"x-font-type1">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pfm">>) -> {<<"application">>, <<"x-font-type1">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pfr">>) -> {<<"application">>, <<"font-tdpfr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pfx">>) -> {<<"application">>, <<"x-pkcs12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pgm">>) -> {<<"image">>, <<"x-portable-graymap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pgn">>) -> {<<"application">>, <<"x-chess-pgn">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pgp">>) -> {<<"application">>, <<"pgp-encrypted">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pic">>) -> {<<"image">>, <<"x-pict">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pkg">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pki">>) -> {<<"application">>, <<"pkixcmp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pkipath">>) -> {<<"application">>, <<"pkix-pkipath">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"plb">>) -> {<<"application">>, <<"vnd.3gpp.pic-bw-large">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"plc">>) -> {<<"application">>, <<"vnd.mobius.plc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"plf">>) -> {<<"application">>, <<"vnd.pocketlearn">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pls">>) -> {<<"application">>, <<"pls+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pml">>) -> {<<"application">>, <<"vnd.ctc-posml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"png">>) -> {<<"image">>, <<"png">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pnm">>) -> {<<"image">>, <<"x-portable-anymap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"portpkg">>) -> {<<"application">>, <<"vnd.macports.portpkg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pot">>) -> {<<"application">>, <<"vnd.ms-powerpoint">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"potm">>) -> {<<"application">>, <<"vnd.ms-powerpoint.template.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"potx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.presentationml.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppam">>) -> {<<"application">>, <<"vnd.ms-powerpoint.addin.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppd">>) -> {<<"application">>, <<"vnd.cups-ppd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppm">>) -> {<<"image">>, <<"x-portable-pixmap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pps">>) -> {<<"application">>, <<"vnd.ms-powerpoint">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppsm">>) -> {<<"application">>, <<"vnd.ms-powerpoint.slideshow.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppsx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.presentationml.slideshow">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ppt">>) -> {<<"application">>, <<"vnd.ms-powerpoint">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pptm">>) -> {<<"application">>, <<"vnd.ms-powerpoint.presentation.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pptx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.presentationml.presentation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pqa">>) -> {<<"application">>, <<"vnd.palm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"prc">>) -> {<<"application">>, <<"x-mobipocket-ebook">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pre">>) -> {<<"application">>, <<"vnd.lotus-freelance">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"prf">>) -> {<<"application">>, <<"pics-rules">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ps">>) -> {<<"application">>, <<"postscript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"psb">>) -> {<<"application">>, <<"vnd.3gpp.pic-bw-small">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"psd">>) -> {<<"image">>, <<"vnd.adobe.photoshop">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"psf">>) -> {<<"application">>, <<"x-font-linux-psf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pskcxml">>) -> {<<"application">>, <<"pskc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ptid">>) -> {<<"application">>, <<"vnd.pvi.ptid1">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pub">>) -> {<<"application">>, <<"x-mspublisher">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pvb">>) -> {<<"application">>, <<"vnd.3gpp.pic-bw-var">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pwn">>) -> {<<"application">>, <<"vnd.3m.post-it-notes">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pya">>) -> {<<"audio">>, <<"vnd.ms-playready.media.pya">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"pyv">>) -> {<<"video">>, <<"vnd.ms-playready.media.pyv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qam">>) -> {<<"application">>, <<"vnd.epson.quickanime">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qbo">>) -> {<<"application">>, <<"vnd.intu.qbo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qfx">>) -> {<<"application">>, <<"vnd.intu.qfx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qps">>) -> {<<"application">>, <<"vnd.publishare-delta-tree">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qt">>) -> {<<"video">>, <<"quicktime">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qwd">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qwt">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qxb">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qxd">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qxl">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"qxt">>) -> {<<"application">>, <<"vnd.quark.quarkxpress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ra">>) -> {<<"audio">>, <<"x-pn-realaudio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ram">>) -> {<<"audio">>, <<"x-pn-realaudio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rar">>) -> {<<"application">>, <<"x-rar-compressed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ras">>) -> {<<"image">>, <<"x-cmu-raster">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rcprofile">>) -> {<<"application">>, <<"vnd.ipunplugged.rcprofile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rdf">>) -> {<<"application">>, <<"rdf+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rdz">>) -> {<<"application">>, <<"vnd.data-vision.rdz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rep">>) -> {<<"application">>, <<"vnd.businessobjects">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"res">>) -> {<<"application">>, <<"x-dtbresource+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rgb">>) -> {<<"image">>, <<"x-rgb">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rif">>) -> {<<"application">>, <<"reginfo+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rip">>) -> {<<"audio">>, <<"vnd.rip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ris">>) -> {<<"application">>, <<"x-research-info-systems">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rl">>) -> {<<"application">>, <<"resource-lists+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rlc">>) -> {<<"image">>, <<"vnd.fujixerox.edmics-rlc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rld">>) -> {<<"application">>, <<"resource-lists-diff+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rm">>) -> {<<"application">>, <<"vnd.rn-realmedia">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rmi">>) -> {<<"audio">>, <<"midi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rmp">>) -> {<<"audio">>, <<"x-pn-realaudio-plugin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rms">>) -> {<<"application">>, <<"vnd.jcp.javame.midlet-rms">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rmvb">>) -> {<<"application">>, <<"vnd.rn-realmedia-vbr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rnc">>) -> {<<"application">>, <<"relax-ng-compact-syntax">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"roa">>) -> {<<"application">>, <<"rpki-roa">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"roff">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rp9">>) -> {<<"application">>, <<"vnd.cloanto.rp9">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rpss">>) -> {<<"application">>, <<"vnd.nokia.radio-presets">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rpst">>) -> {<<"application">>, <<"vnd.nokia.radio-preset">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rq">>) -> {<<"application">>, <<"sparql-query">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rs">>) -> {<<"application">>, <<"rls-services+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rsd">>) -> {<<"application">>, <<"rsd+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rss">>) -> {<<"application">>, <<"rss+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rtf">>) -> {<<"application">>, <<"rtf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"rtx">>) -> {<<"text">>, <<"richtext">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"s">>) -> {<<"text">>, <<"x-asm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"s3m">>) -> {<<"audio">>, <<"s3m">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"saf">>) -> {<<"application">>, <<"vnd.yamaha.smaf-audio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sbml">>) -> {<<"application">>, <<"sbml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sc">>) -> {<<"application">>, <<"vnd.ibm.secure-container">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"scd">>) -> {<<"application">>, <<"x-msschedule">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"scm">>) -> {<<"application">>, <<"vnd.lotus-screencam">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"scq">>) -> {<<"application">>, <<"scvp-cv-request">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"scs">>) -> {<<"application">>, <<"scvp-cv-response">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"scurl">>) -> {<<"text">>, <<"vnd.curl.scurl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sda">>) -> {<<"application">>, <<"vnd.stardivision.draw">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdc">>) -> {<<"application">>, <<"vnd.stardivision.calc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdd">>) -> {<<"application">>, <<"vnd.stardivision.impress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdkd">>) -> {<<"application">>, <<"vnd.solent.sdkm+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdkm">>) -> {<<"application">>, <<"vnd.solent.sdkm+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdp">>) -> {<<"application">>, <<"sdp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sdw">>) -> {<<"application">>, <<"vnd.stardivision.writer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"see">>) -> {<<"application">>, <<"vnd.seemail">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"seed">>) -> {<<"application">>, <<"vnd.fdsn.seed">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sema">>) -> {<<"application">>, <<"vnd.sema">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"semd">>) -> {<<"application">>, <<"vnd.semd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"semf">>) -> {<<"application">>, <<"vnd.semf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ser">>) -> {<<"application">>, <<"java-serialized-object">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"setpay">>) -> {<<"application">>, <<"set-payment-initiation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"setreg">>) -> {<<"application">>, <<"set-registration-initiation">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sfd-hdstx">>) -> {<<"application">>, <<"vnd.hydrostatix.sof-data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sfs">>) -> {<<"application">>, <<"vnd.spotfire.sfs">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sfv">>) -> {<<"text">>, <<"x-sfv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sgi">>) -> {<<"image">>, <<"sgi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sgl">>) -> {<<"application">>, <<"vnd.stardivision.writer-global">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sgm">>) -> {<<"text">>, <<"sgml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sgml">>) -> {<<"text">>, <<"sgml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sh">>) -> {<<"application">>, <<"x-sh">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"shar">>) -> {<<"application">>, <<"x-shar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"shf">>) -> {<<"application">>, <<"shf+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sid">>) -> {<<"image">>, <<"x-mrsid-image">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sig">>) -> {<<"application">>, <<"pgp-signature">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sil">>) -> {<<"audio">>, <<"silk">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"silo">>) -> {<<"model">>, <<"mesh">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sis">>) -> {<<"application">>, <<"vnd.symbian.install">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sisx">>) -> {<<"application">>, <<"vnd.symbian.install">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sit">>) -> {<<"application">>, <<"x-stuffit">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sitx">>) -> {<<"application">>, <<"x-stuffitx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"skd">>) -> {<<"application">>, <<"vnd.koan">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"skm">>) -> {<<"application">>, <<"vnd.koan">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"skp">>) -> {<<"application">>, <<"vnd.koan">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"skt">>) -> {<<"application">>, <<"vnd.koan">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sldm">>) -> {<<"application">>, <<"vnd.ms-powerpoint.slide.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sldx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.presentationml.slide">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"slt">>) -> {<<"application">>, <<"vnd.epson.salt">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sm">>) -> {<<"application">>, <<"vnd.stepmania.stepchart">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"smf">>) -> {<<"application">>, <<"vnd.stardivision.math">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"smi">>) -> {<<"application">>, <<"smil+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"smil">>) -> {<<"application">>, <<"smil+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"smv">>) -> {<<"video">>, <<"x-smv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"smzip">>) -> {<<"application">>, <<"vnd.stepmania.package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"snd">>) -> {<<"audio">>, <<"basic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"snf">>) -> {<<"application">>, <<"x-font-snf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"so">>) -> {<<"application">>, <<"octet-stream">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spc">>) -> {<<"application">>, <<"x-pkcs7-certificates">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spf">>) -> {<<"application">>, <<"vnd.yamaha.smaf-phrase">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spl">>) -> {<<"application">>, <<"x-futuresplash">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spot">>) -> {<<"text">>, <<"vnd.in3d.spot">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spp">>) -> {<<"application">>, <<"scvp-vp-response">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spq">>) -> {<<"application">>, <<"scvp-vp-request">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"spx">>) -> {<<"audio">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sql">>) -> {<<"application">>, <<"x-sql">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"src">>) -> {<<"application">>, <<"x-wais-source">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"srt">>) -> {<<"application">>, <<"x-subrip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sru">>) -> {<<"application">>, <<"sru+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"srx">>) -> {<<"application">>, <<"sparql-results+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ssdl">>) -> {<<"application">>, <<"ssdl+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sse">>) -> {<<"application">>, <<"vnd.kodak-descriptor">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ssf">>) -> {<<"application">>, <<"vnd.epson.ssf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ssml">>) -> {<<"application">>, <<"ssml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"st">>) -> {<<"application">>, <<"vnd.sailingtracker.track">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"stc">>) -> {<<"application">>, <<"vnd.sun.xml.calc.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"std">>) -> {<<"application">>, <<"vnd.sun.xml.draw.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"stf">>) -> {<<"application">>, <<"vnd.wt.stf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sti">>) -> {<<"application">>, <<"vnd.sun.xml.impress.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"stk">>) -> {<<"application">>, <<"hyperstudio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"stl">>) -> {<<"application">>, <<"vnd.ms-pki.stl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"str">>) -> {<<"application">>, <<"vnd.pg.format">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"stw">>) -> {<<"application">>, <<"vnd.sun.xml.writer.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sub">>) -> {<<"image">>, <<"vnd.dvb.subtitle">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sus">>) -> {<<"application">>, <<"vnd.sus-calendar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"susp">>) -> {<<"application">>, <<"vnd.sus-calendar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sv4cpio">>) -> {<<"application">>, <<"x-sv4cpio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sv4crc">>) -> {<<"application">>, <<"x-sv4crc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"svc">>) -> {<<"application">>, <<"vnd.dvb.service">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"svd">>) -> {<<"application">>, <<"vnd.svd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"svg">>) -> {<<"image">>, <<"svg+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"svgz">>) -> {<<"image">>, <<"svg+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"swa">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"swf">>) -> {<<"application">>, <<"x-shockwave-flash">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"swi">>) -> {<<"application">>, <<"vnd.aristanetworks.swi">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxc">>) -> {<<"application">>, <<"vnd.sun.xml.calc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxd">>) -> {<<"application">>, <<"vnd.sun.xml.draw">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxg">>) -> {<<"application">>, <<"vnd.sun.xml.writer.global">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxi">>) -> {<<"application">>, <<"vnd.sun.xml.impress">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxm">>) -> {<<"application">>, <<"vnd.sun.xml.math">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"sxw">>) -> {<<"application">>, <<"vnd.sun.xml.writer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"t">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"t3">>) -> {<<"application">>, <<"x-t3vm-image">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"taglet">>) -> {<<"application">>, <<"vnd.mynfc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tao">>) -> {<<"application">>, <<"vnd.tao.intent-module-archive">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tar">>) -> {<<"application">>, <<"x-tar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tcap">>) -> {<<"application">>, <<"vnd.3gpp2.tcap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tcl">>) -> {<<"application">>, <<"x-tcl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"teacher">>) -> {<<"application">>, <<"vnd.smart.teacher">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tei">>) -> {<<"application">>, <<"tei+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"teicorpus">>) -> {<<"application">>, <<"tei+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tex">>) -> {<<"application">>, <<"x-tex">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"texi">>) -> {<<"application">>, <<"x-texinfo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"texinfo">>) -> {<<"application">>, <<"x-texinfo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"text">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tfi">>) -> {<<"application">>, <<"thraud+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tfm">>) -> {<<"application">>, <<"x-tex-tfm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tga">>) -> {<<"image">>, <<"x-tga">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"thmx">>) -> {<<"application">>, <<"vnd.ms-officetheme">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tif">>) -> {<<"image">>, <<"tiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tiff">>) -> {<<"image">>, <<"tiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tmo">>) -> {<<"application">>, <<"vnd.tmobile-livetv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"torrent">>) -> {<<"application">>, <<"x-bittorrent">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tpl">>) -> {<<"application">>, <<"vnd.groove-tool-template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tpt">>) -> {<<"application">>, <<"vnd.trid.tpt">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tr">>) -> {<<"text">>, <<"troff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tra">>) -> {<<"application">>, <<"vnd.trueapp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"trm">>) -> {<<"application">>, <<"x-msterminal">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tsd">>) -> {<<"application">>, <<"timestamped-data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"tsv">>) -> {<<"text">>, <<"tab-separated-values">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ttc">>) -> {<<"application">>, <<"x-font-ttf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ttf">>) -> {<<"application">>, <<"x-font-ttf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ttl">>) -> {<<"text">>, <<"turtle">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"twd">>) -> {<<"application">>, <<"vnd.simtech-mindmapper">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"twds">>) -> {<<"application">>, <<"vnd.simtech-mindmapper">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"txd">>) -> {<<"application">>, <<"vnd.genomatix.tuxedo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"txf">>) -> {<<"application">>, <<"vnd.mobius.txf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"txt">>) -> {<<"text">>, <<"plain">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"u32">>) -> {<<"application">>, <<"x-authorware-bin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"udeb">>) -> {<<"application">>, <<"x-debian-package">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ufd">>) -> {<<"application">>, <<"vnd.ufdl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ufdl">>) -> {<<"application">>, <<"vnd.ufdl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ulx">>) -> {<<"application">>, <<"x-glulx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"umj">>) -> {<<"application">>, <<"vnd.umajin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"unityweb">>) -> {<<"application">>, <<"vnd.unity">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uoml">>) -> {<<"application">>, <<"vnd.uoml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uri">>) -> {<<"text">>, <<"uri-list">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uris">>) -> {<<"text">>, <<"uri-list">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"urls">>) -> {<<"text">>, <<"uri-list">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"ustar">>) -> {<<"application">>, <<"x-ustar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"utz">>) -> {<<"application">>, <<"vnd.uiq.theme">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uu">>) -> {<<"text">>, <<"x-uuencode">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uva">>) -> {<<"audio">>, <<"vnd.dece.audio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvd">>) -> {<<"application">>, <<"vnd.dece.data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvf">>) -> {<<"application">>, <<"vnd.dece.data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvg">>) -> {<<"image">>, <<"vnd.dece.graphic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvh">>) -> {<<"video">>, <<"vnd.dece.hd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvi">>) -> {<<"image">>, <<"vnd.dece.graphic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvm">>) -> {<<"video">>, <<"vnd.dece.mobile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvp">>) -> {<<"video">>, <<"vnd.dece.pd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvs">>) -> {<<"video">>, <<"vnd.dece.sd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvt">>) -> {<<"application">>, <<"vnd.dece.ttml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvu">>) -> {<<"video">>, <<"vnd.uvvu.mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvv">>) -> {<<"video">>, <<"vnd.dece.video">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvva">>) -> {<<"audio">>, <<"vnd.dece.audio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvd">>) -> {<<"application">>, <<"vnd.dece.data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvf">>) -> {<<"application">>, <<"vnd.dece.data">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvg">>) -> {<<"image">>, <<"vnd.dece.graphic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvh">>) -> {<<"video">>, <<"vnd.dece.hd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvi">>) -> {<<"image">>, <<"vnd.dece.graphic">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvm">>) -> {<<"video">>, <<"vnd.dece.mobile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvp">>) -> {<<"video">>, <<"vnd.dece.pd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvs">>) -> {<<"video">>, <<"vnd.dece.sd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvt">>) -> {<<"application">>, <<"vnd.dece.ttml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvu">>) -> {<<"video">>, <<"vnd.uvvu.mp4">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvv">>) -> {<<"video">>, <<"vnd.dece.video">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvx">>) -> {<<"application">>, <<"vnd.dece.unspecified">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvvz">>) -> {<<"application">>, <<"vnd.dece.zip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvx">>) -> {<<"application">>, <<"vnd.dece.unspecified">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"uvz">>) -> {<<"application">>, <<"vnd.dece.zip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcard">>) -> {<<"text">>, <<"vcard">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcd">>) -> {<<"application">>, <<"x-cdlink">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcf">>) -> {<<"text">>, <<"x-vcard">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcg">>) -> {<<"application">>, <<"vnd.groove-vcard">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcs">>) -> {<<"text">>, <<"x-vcalendar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vcx">>) -> {<<"application">>, <<"vnd.vcx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vis">>) -> {<<"application">>, <<"vnd.visionary">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"viv">>) -> {<<"video">>, <<"vnd.vivo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vob">>) -> {<<"video">>, <<"x-ms-vob">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vor">>) -> {<<"application">>, <<"vnd.stardivision.writer">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vox">>) -> {<<"application">>, <<"x-authorware-bin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vrml">>) -> {<<"model">>, <<"vrml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vsd">>) -> {<<"application">>, <<"vnd.visio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vsf">>) -> {<<"application">>, <<"vnd.vsf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vss">>) -> {<<"application">>, <<"vnd.visio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vst">>) -> {<<"application">>, <<"vnd.visio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vsw">>) -> {<<"application">>, <<"vnd.visio">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vtu">>) -> {<<"model">>, <<"vnd.vtu">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"vxml">>) -> {<<"application">>, <<"voicexml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"w3d">>) -> {<<"application">>, <<"x-director">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wad">>) -> {<<"application">>, <<"x-doom">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wav">>) -> {<<"audio">>, <<"x-wav">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wax">>) -> {<<"audio">>, <<"x-ms-wax">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wbmp">>) -> {<<"image">>, <<"vnd.wap.wbmp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wbs">>) -> {<<"application">>, <<"vnd.criticaltools.wbs+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wbxml">>) -> {<<"application">>, <<"vnd.wap.wbxml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wcm">>) -> {<<"application">>, <<"vnd.ms-works">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wdb">>) -> {<<"application">>, <<"vnd.ms-works">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wdp">>) -> {<<"image">>, <<"vnd.ms-photo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"weba">>) -> {<<"audio">>, <<"webm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"webm">>) -> {<<"video">>, <<"webm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"webp">>) -> {<<"image">>, <<"webp">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wg">>) -> {<<"application">>, <<"vnd.pmi.widget">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wgt">>) -> {<<"application">>, <<"widget">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wks">>) -> {<<"application">>, <<"vnd.ms-works">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wm">>) -> {<<"video">>, <<"x-ms-wm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wma">>) -> {<<"audio">>, <<"x-ms-wma">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmd">>) -> {<<"application">>, <<"x-ms-wmd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmf">>) -> {<<"application">>, <<"x-msmetafile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wml">>) -> {<<"text">>, <<"vnd.wap.wml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmlc">>) -> {<<"application">>, <<"vnd.wap.wmlc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmls">>) -> {<<"text">>, <<"vnd.wap.wmlscript">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmlsc">>) -> {<<"application">>, <<"vnd.wap.wmlscriptc">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmv">>) -> {<<"video">>, <<"x-ms-wmv">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmx">>) -> {<<"video">>, <<"x-ms-wmx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wmz">>) -> {<<"application">>, <<"x-msmetafile">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"woff">>) -> {<<"application">>, <<"font-woff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wpd">>) -> {<<"application">>, <<"vnd.wordperfect">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wpl">>) -> {<<"application">>, <<"vnd.ms-wpl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wps">>) -> {<<"application">>, <<"vnd.ms-works">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wqd">>) -> {<<"application">>, <<"vnd.wqd">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wri">>) -> {<<"application">>, <<"x-mswrite">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wrl">>) -> {<<"model">>, <<"vrml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wsdl">>) -> {<<"application">>, <<"wsdl+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wspolicy">>) -> {<<"application">>, <<"wspolicy+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wtb">>) -> {<<"application">>, <<"vnd.webturbo">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"wvx">>) -> {<<"video">>, <<"x-ms-wvx">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x32">>) -> {<<"application">>, <<"x-authorware-bin">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3d">>) -> {<<"model">>, <<"x3d+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3db">>) -> {<<"model">>, <<"x3d+binary">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3dbz">>) -> {<<"model">>, <<"x3d+binary">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3dv">>) -> {<<"model">>, <<"x3d+vrml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3dvz">>) -> {<<"model">>, <<"x3d+vrml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"x3dz">>) -> {<<"model">>, <<"x3d+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xaml">>) -> {<<"application">>, <<"xaml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xap">>) -> {<<"application">>, <<"x-silverlight-app">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xar">>) -> {<<"application">>, <<"vnd.xara">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xbap">>) -> {<<"application">>, <<"x-ms-xbap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xbd">>) -> {<<"application">>, <<"vnd.fujixerox.docuworks.binder">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xbm">>) -> {<<"image">>, <<"x-xbitmap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xdf">>) -> {<<"application">>, <<"xcap-diff+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xdm">>) -> {<<"application">>, <<"vnd.syncml.dm+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xdp">>) -> {<<"application">>, <<"vnd.adobe.xdp+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xdssc">>) -> {<<"application">>, <<"dssc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xdw">>) -> {<<"application">>, <<"vnd.fujixerox.docuworks">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xenc">>) -> {<<"application">>, <<"xenc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xer">>) -> {<<"application">>, <<"patch-ops-error+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xfdf">>) -> {<<"application">>, <<"vnd.adobe.xfdf">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xfdl">>) -> {<<"application">>, <<"vnd.xfdl">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xht">>) -> {<<"application">>, <<"xhtml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xhtml">>) -> {<<"application">>, <<"xhtml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xhvml">>) -> {<<"application">>, <<"xv+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xif">>) -> {<<"image">>, <<"vnd.xiff">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xla">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlam">>) -> {<<"application">>, <<"vnd.ms-excel.addin.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlc">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlf">>) -> {<<"application">>, <<"x-xliff+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlm">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xls">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlsb">>) -> {<<"application">>, <<"vnd.ms-excel.sheet.binary.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlsm">>) -> {<<"application">>, <<"vnd.ms-excel.sheet.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlsx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.spreadsheetml.sheet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlt">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xltm">>) -> {<<"application">>, <<"vnd.ms-excel.template.macroenabled.12">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xltx">>) -> {<<"application">>, <<"vnd.openxmlformats-officedocument.spreadsheetml.template">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xlw">>) -> {<<"application">>, <<"vnd.ms-excel">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xm">>) -> {<<"audio">>, <<"xm">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xml">>) -> {<<"application">>, <<"xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xo">>) -> {<<"application">>, <<"vnd.olpc-sugar">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xop">>) -> {<<"application">>, <<"xop+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpi">>) -> {<<"application">>, <<"x-xpinstall">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpl">>) -> {<<"application">>, <<"xproc+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpm">>) -> {<<"image">>, <<"x-xpixmap">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpr">>) -> {<<"application">>, <<"vnd.is-xpr">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xps">>) -> {<<"application">>, <<"vnd.ms-xpsdocument">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpw">>) -> {<<"application">>, <<"vnd.intercon.formnet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xpx">>) -> {<<"application">>, <<"vnd.intercon.formnet">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xsl">>) -> {<<"application">>, <<"xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xslt">>) -> {<<"application">>, <<"xslt+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xsm">>) -> {<<"application">>, <<"vnd.syncml+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xspf">>) -> {<<"application">>, <<"xspf+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xul">>) -> {<<"application">>, <<"vnd.mozilla.xul+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xvm">>) -> {<<"application">>, <<"xv+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xvml">>) -> {<<"application">>, <<"xv+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xwd">>) -> {<<"image">>, <<"x-xwindowdump">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xyz">>) -> {<<"chemical">>, <<"x-xyz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"xz">>) -> {<<"application">>, <<"x-xz">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"yang">>) -> {<<"application">>, <<"yang">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"yin">>) -> {<<"application">>, <<"yin+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z1">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z2">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z3">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z4">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z5">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z6">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z7">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"z8">>) -> {<<"application">>, <<"x-zmachine">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"zaz">>) -> {<<"application">>, <<"vnd.zzazz.deck+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"zip">>) -> {<<"application">>, <<"zip">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"zir">>) -> {<<"application">>, <<"vnd.zul">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"zirz">>) -> {<<"application">>, <<"vnd.zul">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(<<"zmm">>) -> {<<"application">>, <<"vnd.handheld-entertainment+xml">>, []};$/;"	f	module:cow_mimetypes
all_ext	deps/cowlib/src/cow_mimetypes.erl	/^all_ext(_) -> {<<"application">>, <<"octet-stream">>, []}.$/;"	f	module:cow_mimetypes
allow_missing_post	deps/cowboy/src/cowboy_rest.erl	/^allow_missing_post(Req, State, OnFalse) ->$/;"	f	module:cowboy_rest
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?(_only, []),   do: false$/;"	f
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?(nil, _list),  do: true$/;"	f
allowed?	deps/plug/lib/plug/static.ex	/^  defp allowed?(only, [h|_]), do: h in only$/;"	f
allowed_methods	deps/cowboy/src/cowboy_rest.erl	/^allowed_methods(Req, State=#state{method=Method}) ->$/;"	f	module:cowboy_rest
alpha	deps/cowboy/src/cowboy_http.erl	/^alpha(<< C, Rest\/binary >>, Fun, Acc)$/;"	f	module:cowboy_http
alpha	deps/cowboy/src/cowboy_http.erl	/^alpha(<<>>, Fun, Acc) ->$/;"	f	module:cowboy_http
alpha	deps/cowboy/src/cowboy_http.erl	/^alpha(Data, Fun) ->$/;"	f	module:cowboy_http
alpha	deps/cowboy/src/cowboy_http.erl	/^alpha(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
alphanumeric	deps/cowboy/src/cowboy_http.erl	/^alphanumeric(<< C, Rest\/binary >>, Fun, Acc)$/;"	f	module:cowboy_http
alphanumeric	deps/cowboy/src/cowboy_http.erl	/^alphanumeric(<<>>, Fun, Acc) ->$/;"	f	module:cowboy_http
alphanumeric	deps/cowboy/src/cowboy_http.erl	/^alphanumeric(Data, Fun) ->$/;"	f	module:cowboy_http
alphanumeric	deps/cowboy/src/cowboy_http.erl	/^alphanumeric(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
app_file	deps/cowboy/erlang.mk	/^define app_file$/;"	m
app_verbose	deps/cowboy/erlang.mk	/^app_verbose = $(app_verbose_$(V))$/;"	m
app_verbose_0	deps/cowboy/erlang.mk	/^app_verbose_0 = @echo " APP   " $(PROJECT);$/;"	m
append_buffer	deps/cowboy/src/cowboy_req.erl	/^append_buffer(Suffix, Req=#http_req{buffer=Buffer}) ->$/;"	f	module:cowboy_req
application	deps/maru/mix.exs	/^  def application do$/;"	f
application	deps/plug/mix.exs	/^  def application do$/;"	f
application	deps/poison/mix.exs	/^  def application do$/;"	f
application	mix.exs	/^  def application do$/;"	f
appsrc_verbose	deps/cowboy/erlang.mk	/^appsrc_verbose = $(appsrc_verbose_$(V))$/;"	m
appsrc_verbose	deps/cowlib/erlang.mk	/^appsrc_verbose = $(appsrc_verbose_$(V))$/;"	m
appsrc_verbose	deps/ranch/erlang.mk	/^appsrc_verbose = $(appsrc_verbose_$(V))$/;"	m
appsrc_verbose_0	deps/cowboy/erlang.mk	/^appsrc_verbose_0 = @echo " APP   " $(PROJECT).app.src;$/;"	m
appsrc_verbose_0	deps/cowlib/erlang.mk	/^appsrc_verbose_0 = @echo " APP   " $(PROJECT).app.src;$/;"	m
appsrc_verbose_0	deps/ranch/erlang.mk	/^appsrc_verbose_0 = @echo " APP   " $(PROJECT).app.src;$/;"	m
args	deps/plug/lib/plug/adapters/cowboy.ex	/^  def args(scheme, plug, opts, cowboy_options) do$/;"	f
array_values	deps/poison/lib/poison/parser.ex	/^  defp array_values("]" <> rest, _, []) do$/;"	f
array_values	deps/poison/lib/poison/parser.ex	/^  defp array_values(string, keys, acc) do$/;"	f
asctime_date	deps/cowboy/src/cowboy_http.erl	/^asctime_date(Data) ->$/;"	f	module:cowboy_http
asctime_date_test_	deps/cowboy/src/cowboy_http.erl	/^asctime_date_test_() ->$/;"	f	module:cowboy_http
asctime_year	deps/cowboy/src/cowboy_http.erl	/^asctime_year(<< Y1, Y2, Y3, Y4, Rest\/binary >>, {Month, Day}, Time)$/;"	f	module:cowboy_http
asn1_verbose	deps/cowboy/erlang.mk	/^asn1_verbose = $(asn1_verbose_$(V))$/;"	m
asn1_verbose_0	deps/cowboy/erlang.mk	/^asn1_verbose_0 = @echo " ASN1  " $(filter %.asn1,$(?F));$/;"	m
assert_ssl_options	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp assert_ssl_options(cowboy_options) do$/;"	f
assign	deps/maru/lib/maru/helpers/response.ex	/^  defmacro assign(key, value) do$/;"	a
assign	deps/plug/lib/plug/conn.ex	/^  def assign(%Conn{assigns: assigns} = conn, key, value) when is_atom(key) do$/;"	f
assign_list	deps/plug/lib/plug/conn/query.ex	/^  defp assign_list([], value), do: value$/;"	f
assign_list	deps/plug/lib/plug/conn/query.ex	/^  defp assign_list(t, current, value) do$/;"	f
assign_list	deps/plug/lib/plug/conn/query.ex	/^  defp assign_list(t, value),  do: assign_parts(t, value, %{})$/;"	f
assign_parts	deps/plug/lib/plug/conn/query.ex	/^  defp assign_parts([key,""|t], value, acc) do$/;"	f
assign_parts	deps/plug/lib/plug/conn/query.ex	/^  defp assign_parts([key], value, acc) do$/;"	f
assign_parts	deps/plug/lib/plug/conn/query.ex	/^  defp assign_parts([key|t], value, acc) do$/;"	f
async_assign	deps/plug/lib/plug/conn.ex	/^  def async_assign(%Conn{} = conn, key, fun) when is_atom(key) and is_function(fun, 0) do$/;"	f
atom_to_connection	deps/cowboy/src/cowboy_req.erl	/^atom_to_connection(close) ->$/;"	f	module:cowboy_req
atom_to_connection	deps/cowboy/src/cowboy_req.erl	/^atom_to_connection(keepalive) ->$/;"	f	module:cowboy_req
authorization	deps/cowboy/src/cowboy_http.erl	/^authorization(String, Type) ->$/;"	f	module:cowboy_http
authorization	deps/cowboy/src/cowboy_http.erl	/^authorization(UserPass, Type = <<"basic">>) ->$/;"	f	module:cowboy_http
authorization_basic_password	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_password(<<>>, Fun, Acc) ->$/;"	f	module:cowboy_http
authorization_basic_password	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_password(<<C, Rest\/binary>>, Fun, Acc) ->$/;"	f	module:cowboy_http
authorization_basic_password	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_password(<<C, _Rest\/binary>>, _Fun, _Acc)$/;"	f	module:cowboy_http
authorization_basic_password	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_password(Data, Fun) ->$/;"	f	module:cowboy_http
authorization_basic_userid	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_userid(<<$:, Rest\/binary>>, Fun, Acc) ->$/;"	f	module:cowboy_http
authorization_basic_userid	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_userid(<<>>, _Fun, _Acc) ->$/;"	f	module:cowboy_http
authorization_basic_userid	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_userid(<<C, Rest\/binary>>, Fun, Acc) ->$/;"	f	module:cowboy_http
authorization_basic_userid	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_userid(<<C, _Rest\/binary>>, _Fun, Acc)$/;"	f	module:cowboy_http
authorization_basic_userid	deps/cowboy/src/cowboy_http.erl	/^authorization_basic_userid(Data, Fun) ->$/;"	f	module:cowboy_http
await_assign	deps/plug/lib/plug/conn.ex	/^  def await_assign(%Conn{} = conn, key, timeout \\\\ 5000) when is_atom(key) do$/;"	f
bad_path_check_test_	deps/cowboy/src/cowboy_static.erl	/^bad_path_check_test_() ->$/;"	f	module:cowboy_static
bad_path_win32_check_test_	deps/cowboy/src/cowboy_static.erl	/^bad_path_win32_check_test_() ->$/;"	f	module:cowboy_static
before_parse_headers	deps/cowlib/src/cow_multipart.erl	/^before_parse_headers(<< "\\r\\n", Stream\/bits >>) ->$/;"	f	module:cow_multipart
before_send	deps/plug/lib/plug/session.ex	/^  defp before_send(sid, config) do$/;"	f
binary_to_identifier	deps/plug/lib/plug/router/utils.ex	/^  defp binary_to_identifier(prefix, <<letter, _::binary>> = binary)$/;"	f
binary_to_identifier	deps/plug/lib/plug/router/utils.ex	/^  defp binary_to_identifier(prefix, _) do$/;"	f
binding	deps/cowboy/src/cowboy_req.erl	/^binding(Name, Req) when is_atom(Name) ->$/;"	f	module:cowboy_req
binding	deps/cowboy/src/cowboy_req.erl	/^binding(Name, Req, Default) when is_atom(Name) ->$/;"	f	module:cowboy_req
bindings	deps/cowboy/src/cowboy_req.erl	/^bindings(Req) ->$/;"	f	module:cowboy_req
body	deps/cowboy/src/cowboy_req.erl	/^body(Req) ->$/;"	f	module:cowboy_req
body	deps/cowboy/src/cowboy_req.erl	/^body(Req, Opts) ->$/;"	f	module:cowboy_req
body	deps/cowboy/src/cowboy_req.erl	/^body(Req=#http_req{body_state=done}, _) ->$/;"	f	module:cowboy_req
body	deps/cowboy/src/cowboy_req.erl	/^body(Req=#http_req{body_state=waiting}, Opts) ->$/;"	f	module:cowboy_req
body_decode	deps/cowboy/src/cowboy_req.erl	/^body_decode(Req=#http_req{buffer=Data, body_state={stream, _,$/;"	f	module:cowboy_req
body_decode_end	deps/cowboy/src/cowboy_req.erl	/^body_decode_end(Req=#http_req{headers=Headers, p_headers=PHeaders},$/;"	f	module:cowboy_req
body_length	deps/cowboy/src/cowboy_req.erl	/^body_length(Req) ->$/;"	f	module:cowboy_req
body_loop	deps/cowboy/src/cowboy_req.erl	/^body_loop(Req=#http_req{buffer=Buffer, body_state={stream, Length, _, _, _}},$/;"	f	module:cowboy_req
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(body, _query, headers) when is_binary(body) do$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(nil, _query, headers),$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(params, query, headers) when is_list(params) do$/;"	f
body_or_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp body_or_params(params, query, headers) when is_map(params) do$/;"	f
body_qs	deps/cowboy/src/cowboy_req.erl	/^body_qs(Req) ->$/;"	f	module:cowboy_req
body_qs	deps/cowboy/src/cowboy_req.erl	/^body_qs(Req, Opts) ->$/;"	f	module:cowboy_req
body_recv	deps/cowboy/src/cowboy_req.erl	/^body_recv(Req=#http_req{transport=Transport, socket=Socket, buffer=Buffer},$/;"	f	module:cowboy_req
boom	deps/plug/lib/plug/debugger.ex	/^        def boom(conn, _) do$/;"	f
boundary	deps/cowlib/src/cow_multipart.erl	/^boundary() ->$/;"	f	module:cow_multipart
bs_Makefile	deps/cowboy/erlang.mk	/^define bs_Makefile$/;"	m
bs_Makefile	deps/cowlib/erlang.mk	/^bs_Makefile = "PROJECT = $(PROJECT)" \\$/;"	m
bs_Makefile	deps/ranch/erlang.mk	/^bs_Makefile = "PROJECT = $(PROJECT)" \\$/;"	m
bs_app	deps/cowboy/erlang.mk	/^define bs_app$/;"	m
bs_app	deps/cowlib/erlang.mk	/^bs_app = "-module($(PROJECT)_app)." \\$/;"	m
bs_app	deps/ranch/erlang.mk	/^bs_app = "-module($(PROJECT)_app)." \\$/;"	m
bs_appsrc	deps/cowboy/erlang.mk	/^define bs_appsrc$/;"	m
bs_appsrc	deps/cowlib/erlang.mk	/^bs_appsrc = "{application, $(PROJECT), [" \\$/;"	m
bs_appsrc	deps/ranch/erlang.mk	/^bs_appsrc = "{application, $(PROJECT), [" \\$/;"	m
bs_appsrc_lib	deps/cowboy/erlang.mk	/^define bs_appsrc_lib$/;"	m
bs_appsrc_lib	deps/cowlib/erlang.mk	/^bs_appsrc_lib = "{application, $(PROJECT), [" \\$/;"	m
bs_appsrc_lib	deps/ranch/erlang.mk	/^bs_appsrc_lib = "{application, $(PROJECT), [" \\$/;"	m
bs_relx_config	deps/cowboy/erlang.mk	/^define bs_relx_config$/;"	m
bs_relx_config	deps/cowlib/erlang.mk	/^bs_relx_config = "{release, {$(PROJECT)_release, \\"1\\"}, [$(PROJECT)]}." \\$/;"	m
bs_relx_config	deps/ranch/erlang.mk	/^bs_relx_config = "{release, {$(PROJECT)_release, \\"1\\"}, [$(PROJECT)]}." \\$/;"	m
bs_sys_config	deps/cowboy/erlang.mk	/^define bs_sys_config$/;"	m
bs_sys_config	deps/cowlib/erlang.mk	/^bs_sys_config = "[" \\$/;"	m
bs_sys_config	deps/ranch/erlang.mk	/^bs_sys_config = "[" \\$/;"	m
bs_vm_args	deps/cowboy/erlang.mk	/^define bs_vm_args$/;"	m
bs_vm_args	deps/cowlib/erlang.mk	/^bs_vm_args = "-name $(PROJECT)@127.0.0.1" \\$/;"	m
bs_vm_args	deps/ranch/erlang.mk	/^bs_vm_args = "-name $(PROJECT)@127.0.0.1" \\$/;"	m
build_headers	deps/cowlib/src/cow_spdy.erl	/^build_headers(Zdef, Headers) ->$/;"	f	module:cow_spdy
build_host_match	deps/plug/lib/plug/router/utils.ex	/^  def build_host_match(host) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods([], guards) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods([method], guards) do$/;"	f
build_methods	deps/plug/lib/plug/router.ex	/^  defp build_methods(methods, guards) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  def build_path_match(spec, context \\\\ nil) when is_binary(spec) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  defp build_path_match([], _context, vars, acc) do$/;"	f
build_path_match	deps/plug/lib/plug/router/utils.ex	/^  defp build_path_match([h|t], context, vars, acc) do$/;"	f
build_ref	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp build_ref(plug, scheme) do$/;"	f
build_test	deps/cowlib/src/cow_multipart.erl	/^build_test() ->$/;"	f	module:cow_multipart
c_verbose	deps/cowboy/erlang.mk	/^c_verbose = $(c_verbose_$(V))$/;"	m
c_verbose_0	deps/cowboy/erlang.mk	/^c_verbose_0 = @echo " C     " $(?F);$/;"	m
call	deps/cowboy/src/cowboy_rest.erl	/^call(Req, State=#state{handler=Handler, handler_state=HandlerState},$/;"	f	module:cowboy_rest
call	deps/maru/lib/maru/builder.ex	/^        def call(var!(conn), opts) do$/;"	f
call	deps/maru/lib/maru/builder.ex	/^      def call(unquote(conn), _) do$/;"	f
call	deps/maru/lib/maru/middleware.ex	/^      def call(conn, _opts), do: conn$/;"	f
call	deps/maru/lib/maru/plugs/extend.ex	/^  def call(%Conn{method: method, private: %{maru_resource_path: path}}=conn, {router, _version, extend, nil, except}) do$/;"	f
call	deps/maru/lib/maru/plugs/extend.ex	/^  def call(%Conn{method: method, private: %{maru_resource_path: path}}=conn, {router, _version, extend, only, nil}) do$/;"	f
call	deps/maru/lib/maru/plugs/extend.ex	/^  def call(%Conn{private: %{maru_version: v1}}=conn, {_router, v2, _extend, _only, _except}) when v1 != v2 do$/;"	f
call	deps/maru/lib/maru/plugs/extend.ex	/^  def call(conn, {router, _version, extend, nil, nil}) do$/;"	f
call	deps/maru/lib/maru/plugs/notfound.ex	/^  def call(conn, _) do$/;"	f
call	deps/maru/lib/maru/plugs/prepare.ex	/^  def call(conn, []) do$/;"	f
call	deps/maru/lib/maru/plugs/router.ex	/^  def call(%Conn{private: %{maru_version: v1}}=conn_orig, {router, path, v2, param_context})$/;"	f
call	deps/maru/lib/maru/plugs/router.ex	/^  def call(conn, _) do$/;"	f
call	deps/maru/lib/maru/plugs/version.ex	/^  def call(conn, _) do$/;"	f
call	deps/maru/lib/maru/plugs/version.ex	/^  def call(conn, {:accept_version_header, _opts}) do$/;"	f
call	deps/maru/lib/maru/plugs/version.ex	/^  def call(conn, {:param, opts}) do$/;"	f
call	deps/maru/lib/maru/plugs/version.ex	/^  def call(conn, {:path, _opts}) do$/;"	f
call	deps/plug/lib/plug.ex	/^        def call(conn, _opts) do$/;"	f
call	deps/plug/lib/plug.ex	/^  defcallback call(Plug.Conn.t, opts) :: Plug.Conn.t$/;"	c
call	deps/plug/lib/plug/builder.ex	/^        def call(conn, _opts) do$/;"	f
call	deps/plug/lib/plug/builder.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/csrf_protection.ex	/^  def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/debugger.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/error_handler.ex	/^      def call(conn, opts) do$/;"	f
call	deps/plug/lib/plug/head.ex	/^  def call(%Conn{method: "HEAD"} = conn, []), do: %{conn | method: "GET"}$/;"	f
call	deps/plug/lib/plug/head.ex	/^  def call(conn, []), do: conn$/;"	f
call	deps/plug/lib/plug/logger.ex	/^  def call(conn, level) do$/;"	f
call	deps/plug/lib/plug/method_override.ex	/^  def call(%Plug.Conn{method: "POST", body_params: body_params} = conn, []),$/;"	f
call	deps/plug/lib/plug/method_override.ex	/^  def call(%Plug.Conn{} = conn, []),$/;"	f
call	deps/plug/lib/plug/parsers.ex	/^  def call(%Conn{body_params: %Plug.Conn.Unfetched{}} = conn, _opts) do$/;"	f
call	deps/plug/lib/plug/parsers.ex	/^  def call(%Conn{req_headers: req_headers, method: method,$/;"	f
call	deps/plug/lib/plug/parsers.ex	/^  def call(%Conn{} = conn, _opts) do$/;"	f
call	deps/plug/lib/plug/request_id.ex	/^  def call(conn, req_id_header) do$/;"	f
call	deps/plug/lib/plug/session.ex	/^  def call(conn, config) do$/;"	f
call	deps/plug/lib/plug/ssl.ex	/^  def call(conn, {hsts, host, rewrites}) do$/;"	f
call	deps/plug/lib/plug/static.ex	/^  def call(conn = %Conn{method: meth}, {at, from, gzip, qs_cache, et_cache, only, headers})$/;"	f
call	deps/plug/lib/plug/static.ex	/^  def call(conn, _opts) do$/;"	f
cancel_recv_timeout	deps/cowboy/src/cowboy_spdy.erl	/^cancel_recv_timeout(StreamID, TRef) ->$/;"	f	module:cowboy_spdy
capitalize_token	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token(<< $-, Rest\/bits >>, _, Acc) ->$/;"	f	module:cowboy_bstr
capitalize_token	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token(<< C, Rest\/bits >>, false, Acc) ->$/;"	f	module:cowboy_bstr
capitalize_token	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token(<< C, Rest\/bits >>, true, Acc) ->$/;"	f	module:cowboy_bstr
capitalize_token	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token(<<>>, _, Acc) ->$/;"	f	module:cowboy_bstr
capitalize_token	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token(B) ->$/;"	f	module:cowboy_bstr
capitalize_token_test_	deps/cowboy/src/cowboy_bstr.erl	/^capitalize_token_test_() ->$/;"	f	module:cowboy_bstr
ce_identity	deps/cowboy/src/cowboy_http.erl	/^ce_identity(Data) ->$/;"	f	module:cowboy_http
change_version	deps/maru/lib/maru/builder/routers.ex	/^  defp change_version(endpoint, version) do$/;"	f
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($A) -> $a;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($B) -> $b;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($C) -> $c;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($D) -> $d;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($E) -> $e;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($F) -> $f;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($G) -> $g;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($H) -> $h;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($I) -> $i;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($J) -> $j;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($K) -> $k;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($L) -> $l;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($M) -> $m;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($N) -> $n;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($O) -> $o;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($P) -> $p;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($Q) -> $q;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($R) -> $r;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($S) -> $s;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($T) -> $t;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($U) -> $u;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($V) -> $v;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($W) -> $w;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($X) -> $x;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($Y) -> $y;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower($Z) -> $z;$/;"	f	module:cowboy_bstr
char_to_lower	deps/cowboy/src/cowboy_bstr.erl	/^char_to_lower(Ch) -> Ch.$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($a) -> $A;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($b) -> $B;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($c) -> $C;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($d) -> $D;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($e) -> $E;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($f) -> $F;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($g) -> $G;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($h) -> $H;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($i) -> $I;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($j) -> $J;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($k) -> $K;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($l) -> $L;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($m) -> $M;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($n) -> $N;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($o) -> $O;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($p) -> $P;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($q) -> $Q;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($r) -> $R;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($s) -> $S;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($t) -> $T;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($u) -> $U;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($v) -> $V;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($w) -> $W;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($x) -> $X;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($y) -> $Y;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper($z) -> $Z;$/;"	f	module:cowboy_bstr
char_to_upper	deps/cowboy/src/cowboy_bstr.erl	/^char_to_upper(Ch) -> Ch.$/;"	f	module:cowboy_bstr
charsets_provided	deps/cowboy/src/cowboy_rest.erl	/^charsets_provided(Req, State) ->$/;"	f	module:cowboy_rest
check_constraint	deps/cowboy/src/cowboy_router.erl	/^check_constraint({_, function, Fun}, Value) ->$/;"	f	module:cowboy_router
check_constraint	deps/cowboy/src/cowboy_router.erl	/^check_constraint({_, int}, Value) ->$/;"	f	module:cowboy_router
check_constraints	deps/cowboy/src/cowboy_router.erl	/^check_constraints([Constraint|Tail], Bindings) ->$/;"	f	module:cowboy_router
check_constraints	deps/cowboy/src/cowboy_router.erl	/^check_constraints([], Bindings) ->$/;"	f	module:cowboy_router
check_param	deps/maru/lib/maru/router/endpoint.ex	/^  defp check_param(attr_name, value, param_context) do$/;"	f
check_param_context	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_param_context(%Conn{private: %{maru_param_context: _}}=conn), do: conn$/;"	f
check_param_context	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_param_context(conn), do: Conn.put_private(conn, :maru_param_context, [])$/;"	f
check_path	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_path(%Conn{private: %{maru_resource_path: _}}=conn), do: conn$/;"	f
check_path	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_path(conn), do: Conn.put_private(conn, :maru_resource_path, conn.path_info)$/;"	f
check_route_path	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_route_path(%Conn{private: %{maru_route_path: _}}=conn), do: conn$/;"	f
check_route_path	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_route_path(conn), do: Conn.put_private(conn, :maru_route_path, [])$/;"	f
check_serializer	deps/plug/lib/plug/session/cookie.ex	/^  defp check_serializer(_), do:$/;"	f
check_serializer	deps/plug/lib/plug/session/cookie.ex	/^  defp check_serializer(serializer) when is_atom(serializer), do: serializer$/;"	f
check_signing_salt	deps/plug/lib/plug/session/cookie.ex	/^  defp check_signing_salt(opts) do$/;"	f
check_version	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_version(%Conn{private: %{maru_version: _}}=conn), do: conn$/;"	f
check_version	deps/maru/lib/maru/plugs/prepare.ex	/^  defp check_version(conn), do: Conn.put_private(conn, :maru_version, nil)$/;"	f
child	deps/cowboy/src/cowboy_spdy.erl	/^-record(child, {$/;"	r
child_spec	deps/plug/lib/plug/adapters/cowboy.ex	/^  def child_spec(scheme, plug, opts, cowboy_options \\\\ []) do$/;"	f
child_spec	deps/ranch/src/ranch.erl	/^child_spec(Ref, NbAcceptors, Transport, TransOpts, Protocol, ProtoOpts)$/;"	f	module:ranch
choose_charset	deps/cowboy/src/cowboy_rest.erl	/^choose_charset(Req, State, []) ->$/;"	f	module:cowboy_rest
choose_charset	deps/cowboy/src/cowboy_rest.erl	/^choose_charset(Req, State=#state{charsets_p=CP}, [Charset|Tail]) ->$/;"	f	module:cowboy_rest
choose_content_type	deps/cowboy/src/cowboy_rest.erl	/^choose_content_type(Req, State, ContentType, [_Any|Tail]) ->$/;"	f	module:cowboy_rest
choose_content_type	deps/cowboy/src/cowboy_rest.erl	/^choose_content_type(Req, State, ContentType, [{Accepted, Fun}|_Tail])$/;"	f	module:cowboy_rest
choose_content_type	deps/cowboy/src/cowboy_rest.erl	/^choose_content_type(Req, State, _ContentType, []) ->$/;"	f	module:cowboy_rest
choose_content_type	deps/cowboy/src/cowboy_rest.erl	/^choose_content_type(Req, State, {Type, SubType, Param},$/;"	f	module:cowboy_rest
choose_language	deps/cowboy/src/cowboy_rest.erl	/^choose_language(Req, State, []) ->$/;"	f	module:cowboy_rest
choose_language	deps/cowboy/src/cowboy_rest.erl	/^choose_language(Req, State=#state{languages_p=LP}, [Language|Tail]) ->$/;"	f	module:cowboy_rest
choose_media_type	deps/cowboy/src/cowboy_rest.erl	/^choose_media_type(Req, State, []) ->$/;"	f	module:cowboy_rest
choose_media_type	deps/cowboy/src/cowboy_rest.erl	/^choose_media_type(Req, State=#state{content_types_p=CTP},$/;"	f	module:cowboy_rest
chunk	deps/cowboy/src/cowboy_req.erl	/^chunk(Data, #http_req{socket=Socket, transport=Transport,$/;"	f	module:cowboy_req
chunk	deps/cowboy/src/cowboy_req.erl	/^chunk(Data, #http_req{socket=Socket, transport=cowboy_spdy,$/;"	f	module:cowboy_req
chunk	deps/cowboy/src/cowboy_req.erl	/^chunk(_Data, #http_req{method= <<"HEAD">>}) ->$/;"	f	module:cowboy_req
chunk	deps/cowlib/src/cow_http_te.erl	/^chunk(Data) ->$/;"	f	module:cow_http_te
chunk	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def chunk(req, body) do$/;"	f
chunk	deps/plug/lib/plug/adapters/test/conn.ex	/^  def chunk(%{chunks: chunks} = state, body) do$/;"	f
chunk	deps/plug/lib/plug/adapters/test/conn.ex	/^  def chunk(%{method: "HEAD"} = state, _body),$/;"	f
chunk	deps/plug/lib/plug/conn.ex	/^  def chunk(%Conn{adapter: {adapter, payload}, state: :chunked} = conn, chunk) do$/;"	f
chunk	deps/plug/lib/plug/conn.ex	/^  def chunk(%Conn{}, chunk) when is_binary(chunk) or is_list(chunk) do$/;"	f
chunk	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback chunk(payload, Conn.status) ::$/;"	c
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size("", _, acc), do: acc$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<_ :: utf8>> <> _, :unicode, acc) do$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<char :: utf8>> <> _, :javascript, acc) when char in [0x2028, 0x2029] do$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<char>> <> _, _mode, acc) when char < 0x1F or char in '"\\\\' do$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<char>> <> rest, mode, acc) when char < 0x80 do$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<char>>, _, _) do$/;"	f
chunk_size	deps/poison/lib/poison/encoder.ex	/^  defp chunk_size(<<codepoint :: utf8>> <> rest, mode, acc) do$/;"	f
chunk_size	deps/ranch/src/ranch_transport.erl	/^chunk_size(Opts) ->$/;"	f	module:ranch_transport
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< "\\r\\n", R\/bits >>, S, A, Len) -> {next, R, {Len + 2, S}, A};$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< "\\r\\n\\r\\n", R\/bits >>, S, <<>>, 0) -> {done, S, R};$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< "\\r\\n\\r\\n", R\/bits >>, S, A, 0) -> {done, A, S, R};$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $0, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $1, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 1);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $2, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 2);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $3, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 3);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $4, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 4);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $5, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 5);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $6, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 6);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $7, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 7);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $8, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 8);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $9, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 9);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $A, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 10);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $B, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 11);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $C, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 12);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $D, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 13);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $E, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 14);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $F, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 15);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $a, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 10);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $b, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 11);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $c, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 12);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $d, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 13);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $e, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 14);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<< $f, R\/bits >>, S, A, Len) -> chunked_len(R, S, A, Len * 16 + 15);$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<<"\\r">>, S, A, _) -> {more, {0, S}, A};$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<<"\\r">>, _, <<>>, _) -> more;$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<<>>, S, A, _) -> {more, {0, S}, A}.$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(<<>>, _, <<>>, _) -> more;$/;"	f	module:cow_http_te
chunked_len	deps/cowlib/src/cow_http_te.erl	/^chunked_len(_, _, _, 0) -> more;$/;"	f	module:cow_http_te
chunked_reply	deps/cowboy/src/cowboy_req.erl	/^chunked_reply(Status, Headers, Req) ->$/;"	f	module:cowboy_req
chunked_reply	deps/cowboy/src/cowboy_req.erl	/^chunked_reply(Status, Req) ->$/;"	f	module:cowboy_req
chunked_response	deps/cowboy/src/cowboy_req.erl	/^chunked_response(Status, Headers, Req=#http_req{$/;"	f	module:cowboy_req
ci_otp_target	deps/cowboy/erlang.mk	/^define ci_otp_target$/;"	m
ci_target	deps/cowboy/erlang.mk	/^define ci_target$/;"	m
ci_verbose	deps/cowboy/erlang.mk	/^ci_verbose = $(ci_verbose_$(V))$/;"	m
ci_verbose_0	deps/cowboy/erlang.mk	/^ci_verbose_0 = @echo " CI    " $(1);$/;"	m
cleanup_listener_opts	deps/ranch/src/ranch_server.erl	/^cleanup_listener_opts(Ref) ->$/;"	f	module:ranch_server
clear_session	deps/plug/lib/plug/conn.ex	/^  def clear_session(conn) do$/;"	f
close	deps/cowlib/src/cow_multipart.erl	/^close(Boundary) ->$/;"	f	module:cow_multipart
close	deps/ranch/src/ranch_ssl.erl	/^close(Socket) ->$/;"	f	module:ranch_ssl
close	deps/ranch/src/ranch_tcp.erl	/^close(Socket) ->$/;"	f	module:ranch_tcp
code	deps/plug/lib/plug/conn/status.ex	/^    def code(unquote(atom)), do: unquote(code)$/;"	f
code	deps/plug/lib/plug/conn/status.ex	/^  def code(integer) when integer in 100..999 do$/;"	f
code	deps/plug/lib/plug/conn/status.ex	/^  def code(integer_or_atom)$/;"	f
code_change	deps/cowboy/src/cowboy_clock.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:cowboy_clock
code_change	deps/ranch/src/ranch_server.erl	/^code_change(_OldVsn, State, _Extra) ->$/;"	f	module:ranch_server
comma	deps/cowboy/erlang.mk	/^comma := ,$/;"	m
comma_list	deps/cowboy/erlang.mk	/^define comma_list$/;"	m
compact	deps/cowboy/src/cowboy_req.erl	/^compact(Req) ->$/;"	f	module:cowboy_req
compile	deps/cowboy/src/cowboy_router.erl	/^compile(Routes) ->$/;"	f	module:cowboy_router
compile	deps/cowboy/src/cowboy_router.erl	/^compile([], Acc) ->$/;"	f	module:cowboy_router
compile	deps/cowboy/src/cowboy_router.erl	/^compile([{Host, Paths}|Tail], Acc) ->$/;"	f	module:cowboy_router
compile	deps/cowboy/src/cowboy_router.erl	/^compile([{HostMatch, Constraints, Paths}|Tail], Acc) ->$/;"	f	module:cowboy_router
compile	deps/plug/lib/plug/builder.ex	/^  def compile(env, pipeline, builder_opts) do$/;"	f
compile	deps/plug/lib/plug/router.ex	/^  defp compile(method, expr, options, contents) do$/;"	f
compile_asn1	deps/cowboy/erlang.mk	/^define compile_asn1$/;"	m
compile_binding	deps/cowboy/src/cowboy_router.erl	/^compile_binding(<< C, Rest\/binary >>, S, Acc) ->$/;"	f	module:cowboy_router
compile_binding	deps/cowboy/src/cowboy_router.erl	/^compile_binding(<<>>, _, <<>>) ->$/;"	f	module:cowboy_router
compile_binding	deps/cowboy/src/cowboy_router.erl	/^compile_binding(Rest = << C, _\/binary >>, S, Acc)$/;"	f	module:cowboy_router
compile_binding	deps/cowboy/src/cowboy_router.erl	/^compile_binding(Rest = <<>>, _, Acc) ->$/;"	f	module:cowboy_router
compile_brackets	deps/cowboy/src/cowboy_router.erl	/^compile_brackets(Rest, S, Segments, Rules) ->$/;"	f	module:cowboy_router
compile_brackets_split	deps/cowboy/src/cowboy_router.erl	/^compile_brackets_split(<< $], Rest\/binary >>, Acc, 0) ->$/;"	f	module:cowboy_router
compile_brackets_split	deps/cowboy/src/cowboy_router.erl	/^compile_brackets_split(<< C, Rest\/binary >>, Acc, N) ->$/;"	f	module:cowboy_router
compile_brackets_split	deps/cowboy/src/cowboy_router.erl	/^compile_brackets_split(<< C, Rest\/binary >>, Acc, N) when C =:= $[ ->$/;"	f	module:cowboy_router
compile_brackets_split	deps/cowboy/src/cowboy_router.erl	/^compile_brackets_split(<< C, Rest\/binary >>, Acc, N) when C =:= $], N > 0 ->$/;"	f	module:cowboy_router
compile_brackets_split	deps/cowboy/src/cowboy_router.erl	/^compile_brackets_split(<<>>, _, _) ->$/;"	f	module:cowboy_router
compile_erl	deps/cowboy/erlang.mk	/^define compile_erl$/;"	m
compile_erl	deps/cowlib/erlang.mk	/^define compile_erl$/;"	m
compile_erl	deps/ranch/erlang.mk	/^define compile_erl$/;"	m
compile_erlydtl	deps/cowboy/erlang.mk	/^define compile_erlydtl$/;"	m
compile_guards	deps/plug/lib/plug/builder.ex	/^  defp compile_guards(call, guards) do$/;"	f
compile_guards	deps/plug/lib/plug/builder.ex	/^  defp compile_guards(call, true) do$/;"	f
compile_host	deps/cowboy/src/cowboy_router.erl	/^compile_host(HostMatch) when is_binary(HostMatch) ->$/;"	f	module:cowboy_router
compile_host	deps/cowboy/src/cowboy_router.erl	/^compile_host(HostMatch) when is_list(HostMatch) ->$/;"	f	module:cowboy_router
compile_mib	deps/cowboy/erlang.mk	/^define compile_mib$/;"	m
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([], Acc) ->$/;"	f	module:cowboy_router
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([{'_', Constraints, Handler, Opts}|Tail], Acc) ->$/;"	f	module:cowboy_router
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([{<< $\/, PathMatch\/binary >>, Constraints, Handler, Opts}|Tail],$/;"	f	module:cowboy_router
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([{PathMatch, Constraints, Handler, Opts}|Tail], Acc)$/;"	f	module:cowboy_router
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([{PathMatch, Handler, Opts}|Tail], Acc) ->$/;"	f	module:cowboy_router
compile_paths	deps/cowboy/src/cowboy_router.erl	/^compile_paths([{PathMatch, _, _, _}|_], _) ->$/;"	f	module:cowboy_router
compile_proto	deps/cowboy/erlang.mk	/^define compile_proto$/;"	m
compile_proto.erl	deps/cowboy/erlang.mk	/^define compile_proto.erl$/;"	m
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $:, Rest\/binary >>, S, Segments, Rules, <<>>) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $:, _\/binary >>, _, _, _, _) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $[, $., $., $., $], Rest\/binary >>, S, Segments, Rules, Acc) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $[, $., $., $., $], Rest\/binary >>, S, Segments, Rules, Acc)$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $[, Rest\/binary >>, S, Segments, Rules, <<>>) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $[, S, Rest\/binary >>, S, Segments, Rules, Acc) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $[, _\/binary >>, _, _, _, _) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< $], _\/binary >>, _, _, _, _) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< C, Rest\/binary >>, S, Segments, Rules, Acc) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< S, Rest\/binary >>, S, Segments, Rules, <<>>) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<< S, Rest\/binary >>, S, Segments, Rules, Acc) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<<>>, _, Segments, Rules, <<>>) ->$/;"	f	module:cowboy_router
compile_rules	deps/cowboy/src/cowboy_router.erl	/^compile_rules(<<>>, _, Segments, Rules, Acc) ->$/;"	f	module:cowboy_router
compile_test_	deps/cowboy/src/cowboy_router.erl	/^compile_test_() ->$/;"	f	module:cowboy_router
compile_xyrl	deps/cowboy/erlang.mk	/^define compile_xyrl$/;"	m
compile_xyrl	deps/cowlib/erlang.mk	/^define compile_xyrl$/;"	m
compile_xyrl	deps/ranch/erlang.mk	/^define compile_xyrl$/;"	m
configure_session	deps/plug/lib/plug/conn.ex	/^  def configure_session(%Conn{state: state}, _opts) when not state in @unsent,$/;"	f
configure_session	deps/plug/lib/plug/conn.ex	/^  def configure_session(conn, opts) do$/;"	f
conn	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def conn(req, transport) do$/;"	f
conn	deps/plug/lib/plug/adapters/test/conn.ex	/^  def conn(conn, method, uri, body_or_params) do$/;"	f
conn	deps/plug/lib/plug/test.ex	/^  def conn(method, path, params_or_body \\\\ nil) do$/;"	f
conn_info	deps/plug/lib/plug/adapters/translator.ex	/^  defp conn_info(_min_level, conn) do$/;"	f
connect	deps/ranch/src/ranch_ssl.erl	/^connect(Host, Port, Opts) when is_integer(Port) ->$/;"	f	module:ranch_ssl
connect	deps/ranch/src/ranch_ssl.erl	/^connect(Host, Port, Opts, Timeout) when is_integer(Port) ->$/;"	f	module:ranch_ssl
connect	deps/ranch/src/ranch_tcp.erl	/^connect(Host, Port, Opts) when is_integer(Port) ->$/;"	f	module:ranch_tcp
connect	deps/ranch/src/ranch_tcp.erl	/^connect(Host, Port, Opts, Timeout) when is_integer(Port) ->$/;"	f	module:ranch_tcp
connection_to_atom	deps/cowboy/src/cowboy_req.erl	/^connection_to_atom([<<"close">>|_]) ->$/;"	f	module:cowboy_req
connection_to_atom	deps/cowboy/src/cowboy_req.erl	/^connection_to_atom([]) ->$/;"	f	module:cowboy_req
connection_to_atom	deps/cowboy/src/cowboy_req.erl	/^connection_to_atom([_|Tail]) ->$/;"	f	module:cowboy_req
connection_to_atom_test_	deps/cowboy/src/cowboy_req.erl	/^connection_to_atom_test_() ->$/;"	f	module:cowboy_req
connection_type	deps/plug/lib/plug/logger.ex	/^  defp connection_type(%{state: :chunked}), do: "Chunked"$/;"	f
connection_type	deps/plug/lib/plug/logger.ex	/^  defp connection_type(_), do: "Sent"$/;"	f
conneg	deps/cowboy/src/cowboy_http.erl	/^conneg(Data, Fun) ->$/;"	f	module:cowboy_http
consider_profiling	deps/ranch/src/ranch_app.erl	/^consider_profiling() ->$/;"	f	module:ranch_app
content_type	deps/cowboy/src/cowboy_http.erl	/^content_type(Data) ->$/;"	f	module:cowboy_http
content_type	deps/maru/lib/maru/helpers/response.ex	/^  defmacro content_type(value) do$/;"	a
content_type	deps/maru/lib/maru/response.ex	/^  def content_type(_) do$/;"	f
content_type	deps/maru/lib/maru/response.ex	/^  def content_type(resp)$/;"	f
content_type	deps/plug/lib/plug/conn/utils.ex	/^  def content_type(binary) do$/;"	f
content_type_test_	deps/cowboy/src/cowboy_http.erl	/^content_type_test_() ->$/;"	f	module:cowboy_http
content_types_provided	deps/cowboy/src/cowboy_rest.erl	/^content_types_provided(Req, State) ->$/;"	f	module:cowboy_rest
content_types_provided	deps/cowboy/src/cowboy_static.erl	/^content_types_provided(Req, State={Path, _, Extra}) ->$/;"	f	module:cowboy_static
continue	deps/cowboy/src/cowboy_req.erl	/^continue(#http_req{socket=Socket, transport=Transport,$/;"	f	module:cowboy_req
controlling_process	deps/ranch/src/ranch_ssl.erl	/^controlling_process(Socket, Pid) ->$/;"	f	module:ranch_ssl
controlling_process	deps/ranch/src/ranch_tcp.erl	/^controlling_process(Socket, Pid) ->$/;"	f	module:ranch_tcp
convert_parsers	deps/plug/lib/plug/parsers.ex	/^  defp convert_parsers(parsers) do$/;"	f
convert_store	deps/plug/lib/plug/session.ex	/^  defp convert_store(store) do$/;"	f
cookie	deps/cowboy/src/cowboy_req.erl	/^cookie(Name, Req) when is_binary(Name) ->$/;"	f	module:cowboy_req
cookie	deps/cowboy/src/cowboy_req.erl	/^cookie(Name, Req, Default) ->$/;"	f	module:cowboy_req
cookie	deps/cowboy/src/cowboy_req.erl	/^cookie(Name, Req=#http_req{cookies=undefined}, Default) when is_binary(Name) ->$/;"	f	module:cowboy_req
cookies	deps/cowboy/src/cowboy_req.erl	/^cookies(Req=#http_req{cookies=Cookies}) ->$/;"	f	module:cowboy_req
cookies	deps/cowboy/src/cowboy_req.erl	/^cookies(Req=#http_req{cookies=undefined}) ->$/;"	f	module:cowboy_req
core_eq	deps/cowboy/erlang.mk	/^core_eq = $(and $(findstring $(1),$(2)),$(findstring $(2),$(1)))$/;"	m
core_find	deps/cowboy/erlang.mk	/^core_find = $(foreach d,$(call core_ls,$1*),$(call core_find,$d\/,$2) $(filter $(subst *,%,$2),$d))$/;"	m
core_http_get	deps/cowboy/erlang.mk	/^define core_http_get$/;"	m
core_http_get	deps/cowlib/erlang.mk	/^define core_http_get$/;"	m
core_http_get	deps/ranch/erlang.mk	/^define core_http_get$/;"	m
core_http_get.erl	deps/cowboy/erlang.mk	/^define core_http_get.erl$/;"	m
core_lc	deps/cowboy/erlang.mk	/^core_lc = $(subst A,a,$(subst B,b,$(subst C,c,$(subst D,d,$(subst E,e,$(subst F,f,$(subst G,g,$(subst H,h,$(subst I,i,$(subst J,j,$(subst K,k,$(subst L,l,$(subst M,m,$(subst N,n,$(subst O,o,$(subst P,p,$(subst Q,q,$(subst R,r,$(subst S,s,$(subst T,t,$(subst U,u,$(subst V,v,$(subst W,w,$(subst X,x,$(subst Y,y,$(subst Z,z,$(1)))))))))))))))))))))))))))$/;"	m
core_ls	deps/cowboy/erlang.mk	/^core_ls = $(filter-out $(1),$(shell echo $(1)))$/;"	m
count_connections	deps/ranch/src/ranch_server.erl	/^count_connections(Ref) ->$/;"	f	module:ranch_server
cover_report.erl	deps/cowboy/erlang.mk	/^define cover_report.erl$/;"	m
cow_cookie	deps/cowlib/src/cow_cookie.erl	/^-module(cow_cookie).$/;"	m
cow_date	deps/cowlib/src/cow_date.erl	/^-module(cow_date).$/;"	m
cow_http	deps/cowlib/src/cow_http.erl	/^-module(cow_http).$/;"	m
cow_http_hd	deps/cowlib/src/cow_http_hd.erl	/^-module(cow_http_hd).$/;"	m
cow_http_te	deps/cowlib/src/cow_http_te.erl	/^-module(cow_http_te).$/;"	m
cow_mimetypes	deps/cowlib/src/cow_mimetypes.erl	/^-module(cow_mimetypes).$/;"	m
cow_multipart	deps/cowlib/src/cow_multipart.erl	/^-module(cow_multipart).$/;"	m
cow_qs	deps/cowlib/src/cow_qs.erl	/^-module(cow_qs).$/;"	m
cow_spdy	deps/cowlib/src/cow_spdy.erl	/^-module(cow_spdy).$/;"	m
cowboy	deps/cowboy/src/cowboy.erl	/^-module(cowboy).$/;"	m
cowboy_app	deps/cowboy/src/cowboy_app.erl	/^-module(cowboy_app).$/;"	m
cowboy_bstr	deps/cowboy/src/cowboy_bstr.erl	/^-module(cowboy_bstr).$/;"	m
cowboy_clock	deps/cowboy/src/cowboy_clock.erl	/^-module(cowboy_clock).$/;"	m
cowboy_handler	deps/cowboy/src/cowboy_handler.erl	/^-module(cowboy_handler).$/;"	m
cowboy_http	deps/cowboy/src/cowboy_http.erl	/^-module(cowboy_http).$/;"	m
cowboy_http_handler	deps/cowboy/src/cowboy_http_handler.erl	/^-module(cowboy_http_handler).$/;"	m
cowboy_loop_handler	deps/cowboy/src/cowboy_loop_handler.erl	/^-module(cowboy_loop_handler).$/;"	m
cowboy_middleware	deps/cowboy/src/cowboy_middleware.erl	/^-module(cowboy_middleware).$/;"	m
cowboy_protocol	deps/cowboy/src/cowboy_protocol.erl	/^-module(cowboy_protocol).$/;"	m
cowboy_req	deps/cowboy/src/cowboy_req.erl	/^-module(cowboy_req).$/;"	m
cowboy_rest	deps/cowboy/src/cowboy_rest.erl	/^-module(cowboy_rest).$/;"	m
cowboy_router	deps/cowboy/src/cowboy_router.erl	/^-module(cowboy_router).$/;"	m
cowboy_spdy	deps/cowboy/src/cowboy_spdy.erl	/^-module(cowboy_spdy).$/;"	m
cowboy_static	deps/cowboy/src/cowboy_static.erl	/^-module(cowboy_static).$/;"	m
cowboy_sub_protocol	deps/cowboy/src/cowboy_sub_protocol.erl	/^-module(cowboy_sub_protocol).$/;"	m
cowboy_sup	deps/cowboy/src/cowboy_sup.erl	/^-module(cowboy_sup).$/;"	m
cowboy_websocket	deps/cowboy/src/cowboy_websocket.erl	/^-module(cowboy_websocket).$/;"	m
cowboy_websocket_handler	deps/cowboy/src/cowboy_websocket_handler.erl	/^-module(cowboy_websocket_handler).$/;"	m
cpp_verbose	deps/cowboy/erlang.mk	/^cpp_verbose = $(cpp_verbose_$(V))$/;"	m
cpp_verbose_0	deps/cowboy/erlang.mk	/^cpp_verbose_0 = @echo " CPP   " $(?F);$/;"	m
cross_origin_js?	deps/plug/lib/plug/csrf_protection.ex	/^  defp cross_origin_js?(%Plug.Conn{method: "GET"} = conn),$/;"	f
cross_origin_js?	deps/plug/lib/plug/csrf_protection.ex	/^  defp cross_origin_js?(%Plug.Conn{}),$/;"	f
ct_suite_target	deps/cowboy/erlang.mk	/^define ct_suite_target$/;"	m
ct_suite_target	deps/cowlib/erlang.mk	/^define ct_suite_target$/;"	m
ct_suite_target	deps/ranch/erlang.mk	/^define ct_suite_target$/;"	m
data	deps/cowboy/src/cowboy_spdy.erl	/^data(#state{socket=Socket, transport=Transport}, StreamID, IsFin, Data) ->$/;"	f	module:cowboy_spdy
data	deps/cowlib/src/cow_spdy.erl	/^data(StreamID, IsFin, Data) ->$/;"	f	module:cow_spdy
data_from_file	deps/cowboy/src/cowboy_spdy.erl	/^data_from_file(#state{socket=Socket, transport=Transport},$/;"	f	module:cowboy_spdy
data_from_file	deps/cowboy/src/cowboy_spdy.erl	/^data_from_file(Socket, Transport, StreamID, IoDevice) ->$/;"	f	module:cowboy_spdy
date1	deps/cowboy/src/cowboy_http.erl	/^date1(<< D1, D2, " ", M:3\/binary, " ", Y1, Y2, Y3, Y4, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
date1	deps/cowboy/src/cowboy_http.erl	/^date1(_Data, _Fun) ->$/;"	f	module:cowboy_http
date2	deps/cowboy/src/cowboy_http.erl	/^date2(<< D1, D2, "-", M:3\/binary, "-", Y1, Y2, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
date2	deps/cowboy/src/cowboy_http.erl	/^date2(_Data, _Fun) ->$/;"	f	module:cowboy_http
date3	deps/cowboy/src/cowboy_http.erl	/^date3(<< M:3\/binary, " ", D1, D2, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
date3	deps/cowboy/src/cowboy_http.erl	/^date3(_Data, _Fun) ->$/;"	f	module:cowboy_http
decode	deps/plug/lib/plug/conn/cookies.ex	/^  def decode(cookie) do$/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode("", initial) do$/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode(query, initial \\\\ %{})$/;"	f
decode	deps/plug/lib/plug/conn/query.ex	/^  def decode(query, initial) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:more, _, conn}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:ok, "", conn}, _decoder) do$/;"	f
decode	deps/plug/lib/plug/parsers/json.ex	/^  defp decode({:ok, body, conn}, decoder) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode(:error, _serializer) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode({:ok, binary}, :external_term_format) do$/;"	f
decode	deps/plug/lib/plug/session/cookie.ex	/^  defp decode({:ok, binary}, serializer) do$/;"	f
decode	deps/poison/lib/poison.ex	/^  def decode(iodata, options \\\\ []) do$/;"	f
decode	deps/poison/lib/poison/decoder.ex	/^  def decode(value, _options) do$/;"	f
decode	deps/poison/lib/poison/decoder.ex	/^  def decode(value, options) when is_map(value) or is_list(value) do$/;"	f
decode	deps/poison/lib/poison/decoder.ex	/^  def decode(value, options)$/;"	f
decode!	deps/poison/lib/poison.ex	/^  def decode!(iodata, options \\\\ []) do$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key("", _key),$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<< ?=, _ :: binary >>, ""),$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<< ?=, t :: binary >>, key),$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<< h, _ :: binary >>, _key) when h in [?\\s, ?\\t, ?\\r, ?\\n, ?\\v, ?\\f],$/;"	f
decode_key	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_key(<< h, t :: binary >>, key),$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(""),$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(<< ?$, _ :: binary >>),$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(<< h, t :: binary >>) when h in [?\\s, ?\\t],$/;"	f
decode_kv	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_kv(kv),$/;"	f
decode_pair	deps/plug/lib/plug/conn/query.ex	/^  def decode_pair({key, value}, acc) do$/;"	f
decode_string_pair	deps/plug/lib/plug/conn/query.ex	/^  defp decode_string_pair(binary, acc) do$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value("", _spaces, key, value),$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<< ?\\s, t :: binary >>, spaces, key, value),$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<< h, _ :: binary >>, _spaces, _key, _value) when h in [?\\t, ?\\r, ?\\n, ?\\v, ?\\f],$/;"	f
decode_value	deps/plug/lib/plug/conn/cookies.ex	/^  defp decode_value(<< h, t :: binary >>, spaces, key, value),$/;"	f
decrypt	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  defp decrypt(encrypted, cipher, secret, iv) do$/;"	f
default_port	deps/cowboy/src/cowboy_protocol.erl	/^default_port(_) -> 80.$/;"	f	module:cowboy_protocol
default_port	deps/cowboy/src/cowboy_protocol.erl	/^default_port(ssl) -> 443;$/;"	f	module:cowboy_protocol
deflate_init	deps/cowlib/src/cow_spdy.erl	/^deflate_init() ->$/;"	f	module:cow_spdy
delete	deps/plug/lib/plug/router.ex	/^  defmacro delete(path, options, contents \\\\ []) do$/;"	a
delete	deps/plug/lib/plug/session/cookie.ex	/^  def delete(_conn, _sid, _opts) do$/;"	f
delete	deps/plug/lib/plug/session/ets.ex	/^  def delete(_conn, sid, table) do$/;"	f
delete	deps/plug/lib/plug/session/store.ex	/^  defcallback delete(Plug.Conn.t, sid, Plug.opts) :: :ok$/;"	c
delete_child	deps/cowboy/src/cowboy_spdy.erl	/^delete_child(Pid, State=#state{children=Children}) ->$/;"	f	module:cowboy_spdy
delete_completed	deps/cowboy/src/cowboy_rest.erl	/^delete_completed(Req, State) ->$/;"	f	module:cowboy_rest
delete_cookie	deps/plug/lib/plug/session.ex	/^  defp delete_cookie(conn, %{cookie_opts: cookie_opts, key: key}),$/;"	f
delete_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  def delete_csrf_token do$/;"	f
delete_req_cookie	deps/plug/lib/plug/test.ex	/^  def delete_req_cookie(%Conn{req_cookies: %Plug.Conn.Unfetched{}} = conn, key)$/;"	f
delete_req_cookie	deps/plug/lib/plug/test.ex	/^  def delete_req_cookie(_conn, key) when is_binary(key) do$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(%Conn{req_headers: headers} = conn, key) when$/;"	f
delete_req_header	deps/plug/lib/plug/conn.ex	/^  def delete_req_header(%Conn{state: :sent}, _key) do$/;"	f
delete_resource	deps/cowboy/src/cowboy_rest.erl	/^delete_resource(Req, State) ->$/;"	f	module:cowboy_rest
delete_resp_cookie	deps/plug/lib/plug/conn.ex	/^  def delete_resp_cookie(%Conn{resp_cookies: resp_cookies} = conn, key, opts \\\\ []) when$/;"	f
delete_resp_header	deps/cowboy/src/cowboy_req.erl	/^delete_resp_header(Name, Req=#http_req{resp_headers=RespHeaders}) ->$/;"	f	module:cowboy_req
delete_resp_header	deps/plug/lib/plug/conn.ex	/^  def delete_resp_header(%Conn{resp_headers: headers} = conn, key) when$/;"	f
delete_resp_header	deps/plug/lib/plug/conn.ex	/^  def delete_resp_header(%Conn{state: :sent}, _key) do$/;"	f
delete_session	deps/plug/lib/plug/conn.ex	/^  def delete_session(%Conn{state: state}, _key) when not state in @unsent,$/;"	f
delete_session	deps/plug/lib/plug/conn.ex	/^  def delete_session(conn, key) do$/;"	f
delete_session	deps/plug/lib/plug/session.ex	/^  defp delete_session(sid, conn, %{store: store, store_config: store_config}),$/;"	f
dep_autopatch	deps/cowboy/erlang.mk	/^define dep_autopatch$/;"	m
dep_autopatch2	deps/cowboy/erlang.mk	/^define dep_autopatch2$/;"	m
dep_autopatch_app.erl	deps/cowboy/erlang.mk	/^define dep_autopatch_app.erl$/;"	m
dep_autopatch_appsrc.erl	deps/cowboy/erlang.mk	/^define dep_autopatch_appsrc.erl$/;"	m
dep_autopatch_erlang_mk	deps/cowboy/erlang.mk	/^define dep_autopatch_erlang_mk$/;"	m
dep_autopatch_fetch_rebar	deps/cowboy/erlang.mk	/^define dep_autopatch_fetch_rebar$/;"	m
dep_autopatch_gen	deps/cowboy/erlang.mk	/^define dep_autopatch_gen$/;"	m
dep_autopatch_noop	deps/cowboy/erlang.mk	/^define dep_autopatch_noop$/;"	m
dep_autopatch_rebar	deps/cowboy/erlang.mk	/^define dep_autopatch_rebar$/;"	m
dep_autopatch_rebar.erl	deps/cowboy/erlang.mk	/^define dep_autopatch_rebar.erl$/;"	m
dep_ct_helper	deps/cowboy/Makefile	/^dep_ct_helper = git https:\/\/github.com\/extend\/ct_helper.git master$/;"	m
dep_ct_helper	deps/ranch/Makefile	/^dep_ct_helper = git https:\/\/github.com\/extend\/ct_helper.git master$/;"	m
dep_ezdoc	deps/cowboy/Makefile	/^dep_ezdoc = git https:\/\/github.com\/ninenines\/ezdoc master$/;"	m
dep_fetch	deps/cowboy/erlang.mk	/^define dep_fetch$/;"	m
dep_fetch	deps/cowlib/erlang.mk	/^define dep_fetch$/;"	m
dep_fetch	deps/ranch/erlang.mk	/^define dep_fetch$/;"	m
dep_gun	deps/cowboy/Makefile	/^dep_gun = git https:\/\/github.com\/ninenines\/gun b85c1f726ca49ac0e3abdcf717317cb95b06207d$/;"	m
dep_target	deps/cowboy/erlang.mk	/^define dep_target$/;"	m
dep_target	deps/cowlib/erlang.mk	/^define dep_target$/;"	m
dep_target	deps/ranch/erlang.mk	/^define dep_target$/;"	m
dep_verbose	deps/cowboy/erlang.mk	/^dep_verbose = $(dep_verbose_$(V))$/;"	m
dep_verbose_0	deps/cowboy/erlang.mk	/^dep_verbose_0 = @echo " DEP   " $(1);$/;"	m
deps	deps/maru/mix.exs	/^  defp deps do$/;"	f
deps	deps/plug/mix.exs	/^  def deps do$/;"	f
deps	deps/poison/mix.exs	/^  defp deps do$/;"	f
deps	mix.exs	/^  defp deps do$/;"	f
derive	deps/plug/lib/plug/session/cookie.ex	/^  defp derive(conn, key, key_opts) do$/;"	f
deriving	deps/poison/lib/poison/encoder.ex	/^  def deriving(module, _struct, options) do$/;"	f
desc	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro desc(desc) do$/;"	a
digest	deps/plug/lib/plug/crypto/message_verifier.ex	/^  defp digest(secret, data) do$/;"	f
digits	deps/cowboy/src/cowboy_http.erl	/^digits(<< C, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
digits	deps/cowboy/src/cowboy_http.erl	/^digits(<< C, Rest\/binary >>, Fun, Acc)$/;"	f	module:cowboy_http
digits	deps/cowboy/src/cowboy_http.erl	/^digits(Data) ->$/;"	f	module:cowboy_http
digits	deps/cowboy/src/cowboy_http.erl	/^digits(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
digits	deps/cowboy/src/cowboy_http.erl	/^digits(_Data, _Fun) ->$/;"	f	module:cowboy_http
digits_test_	deps/cowboy/src/cowboy_http.erl	/^digits_test_() ->$/;"	f	module:cowboy_http
dispatch	deps/maru/lib/maru/router/endpoint.ex	/^  def dispatch(ep) do$/;"	f
dispatch	deps/plug/lib/plug/router.ex	/^      defp dispatch(%Plug.Conn{assigns: assigns} = conn, _opts) do$/;"	f
dispatch_405	deps/maru/lib/maru/router/endpoint.ex	/^  def dispatch_405(version, path) do$/;"	f
dispatch_for	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp dispatch_for(plug, opts) do$/;"	f
do_body_to_chunks	deps/cowlib/src/cow_http_te.erl	/^do_body_to_chunks(ChunkSize, Body, Acc) ->$/;"	f	module:cow_http_te
do_body_to_chunks	deps/cowlib/src/cow_http_te.erl	/^do_body_to_chunks(_, <<>>, Acc) ->$/;"	f	module:cow_http_te
do_check_param	deps/maru/lib/maru/router/endpoint.ex	/^  defp do_check_param([], _attr_name, value), do: value$/;"	f
do_check_param	deps/maru/lib/maru/router/endpoint.ex	/^  defp do_check_param([{validator, option}|t], attr_name, value) do$/;"	f
do_decode	deps/plug/lib/plug/conn/cookies.ex	/^  defp do_decode([], acc),$/;"	f
do_decode	deps/plug/lib/plug/conn/cookies.ex	/^  defp do_decode([h|t], acc) do$/;"	f
do_match	deps/plug/lib/plug/router.ex	/^      defp do_match(unquote(conn), unquote(method), unquote(match), unquote(host)) when unquote(guards) do$/;"	f
do_maybe_reply	deps/cowboy/src/cowboy_req.erl	/^do_maybe_reply([$/;"	f	module:cowboy_req
do_maybe_reply	deps/cowboy/src/cowboy_req.erl	/^do_maybe_reply(_, Req) ->$/;"	f	module:cowboy_req
do_parse_params	deps/maru/lib/maru/router/path.ex	/^  defp do_parse_params([], [], result), do: result$/;"	f
do_parse_params	deps/maru/lib/maru/router/path.ex	/^  defp do_parse_params([h1|t1], [h2|t2], result) when is_atom(h2) do$/;"	f
do_parse_params	deps/maru/lib/maru/router/path.ex	/^  defp do_parse_params([h|t1], [h|t2], result) do$/;"	f
do_send	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp do_send(%{owner: owner, ref: ref} = state, status, headers, body) do$/;"	f
downcase_char	deps/plug/lib/plug/conn/utils.ex	/^  defp downcase_char(char) when char in @upper, do: char + 32$/;"	f
downcase_char	deps/plug/lib/plug/conn/utils.ex	/^  defp downcase_char(char), do: char$/;"	f
dripfeed	deps/cowlib/src/cow_http_te.erl	/^dripfeed(<< C, Rest\/bits >>, Acc, State, F) ->$/;"	f	module:cow_http_te
dtl_verbose	deps/cowboy/erlang.mk	/^dtl_verbose = $(dtl_verbose_$(V))$/;"	m
dtl_verbose_0	deps/cowboy/erlang.mk	/^dtl_verbose_0 = @echo " DTL   " $(filter %.dtl,$(?F));$/;"	m
each_frame	deps/plug/lib/plug/debugger.ex	/^  defp each_frame(entry, index, root, editor) do$/;"	f
empty	deps/cowboy/erlang.mk	/^empty :=$/;"	m
encode	deps/plug/lib/plug/conn/cookies.ex	/^  def encode(key, opts \\\\ %{}) when is_map(opts) do$/;"	f
encode	deps/plug/lib/plug/conn/query.ex	/^  def encode(dict, encoder \\\\ &to_string\/1) do$/;"	f
encode	deps/plug/lib/plug/session/cookie.ex	/^  defp encode(term, :external_term_format) do$/;"	f
encode	deps/plug/lib/plug/session/cookie.ex	/^  defp encode(term, serializer) do$/;"	f
encode	deps/poison/lib/poison.ex	/^  def encode(value, options \\\\ []) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^        def encode(struct, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode("", _), do: "\\"\\""$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(%{__struct__: _} = struct, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode([], _), do: "[]"$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(atom, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(collection, false, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(collection, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(collection, true, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(dict, false, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(dict, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(dict, true, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(false, _), do: "false"$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(float, _options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(integer, _options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(list, false, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(list, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(list, true, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(map, _) when map_size(map) < 1, do: "{}"$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(map, _, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(map, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(map, true, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(nil, _),   do: "null"$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(string, options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(true, _),  do: "true"$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(value, _options) do$/;"	f
encode	deps/poison/lib/poison/encoder.ex	/^  def encode(value, options)$/;"	f
encode!	deps/poison/lib/poison.ex	/^  def encode!(value, options \\\\ []) do$/;"	f
encode_dict	deps/plug/lib/plug/conn/query.ex	/^  defp encode_dict(dict, parent_field, encoder) do$/;"	f
encode_etag	deps/cowboy/src/cowboy_rest.erl	/^encode_etag({strong, Etag}) -> [$",Etag,$"];$/;"	f	module:cowboy_rest
encode_etag	deps/cowboy/src/cowboy_rest.erl	/^encode_etag({weak, Etag}) -> ["W\/\\"",Etag,$"].$/;"	f	module:cowboy_rest
encode_key	deps/plug/lib/plug/conn/query.ex	/^  defp encode_key(item) do$/;"	f
encode_name	deps/poison/lib/poison/encoder.ex	/^      defp encode_name(value) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, %{__struct__: struct} = map, encoder) when is_atom(struct) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, nil, _encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(field, value, encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, %{} = map, encoder) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, list, encoder) when is_list(list) and is_tuple(hd(list)) do$/;"	f
encode_pair	deps/plug/lib/plug/conn/query.ex	/^  defp encode_pair(parent_field, list, encoder) when is_list(list) do$/;"	f
encode_to_iodata	deps/poison/lib/poison.ex	/^  def encode_to_iodata(value, options \\\\ []) do$/;"	f
encode_to_iodata!	deps/poison/lib/poison.ex	/^  def encode_to_iodata!(value, options \\\\ []) do$/;"	f
encode_value	deps/plug/lib/plug/conn/query.ex	/^  defp encode_value(item, encoder) do$/;"	f
encodings_provided	deps/cowboy/src/cowboy_rest.erl	/^encodings_provided(Req, State) ->$/;"	f	module:cowboy_rest
encrypt	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  defp encrypt(message, cipher, secret, iv) do$/;"	f
encrypt_and_sign	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  def encrypt_and_sign(message, secret, sign_secret, cipher \\\\ :aes_cbc256)$/;"	f
endpoint	deps/maru/lib/maru/builder.ex	/^      defp endpoint(conn, _), do: conn$/;"	f
endpoint	deps/maru/lib/maru/builder/methods.ex	/^  defp endpoint(ep) do$/;"	f
endpoint	deps/maru/lib/maru/router/endpoint.ex	/^      defp endpoint(%Plug.Conn{$/;"	f
ensure_accepted_mimes	deps/plug/lib/plug/parsers.ex	/^  defp ensure_accepted_mimes(conn, _type, _subtype, ["*\/*"]), do: conn$/;"	f
ensure_accepted_mimes	deps/plug/lib/plug/parsers.ex	/^  defp ensure_accepted_mimes(conn, type, subtype, pass) do$/;"	f
ensure_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp ensure_csrf_token(conn, csrf_token) do$/;"	f
ensure_response	deps/cowboy/src/cowboy_req.erl	/^ensure_response(#http_req{method= <<"HEAD">>}, _) ->$/;"	f	module:cowboy_req
ensure_response	deps/cowboy/src/cowboy_req.erl	/^ensure_response(#http_req{resp_state=done}, _) ->$/;"	f	module:cowboy_req
ensure_response	deps/cowboy/src/cowboy_req.erl	/^ensure_response(#http_req{}, _) ->$/;"	f	module:cowboy_req
ensure_response	deps/cowboy/src/cowboy_req.erl	/^ensure_response(Req=#http_req{resp_state=RespState}, Status)$/;"	f	module:cowboy_req
ensure_response	deps/cowboy/src/cowboy_req.erl	/^ensure_response(Req=#http_req{resp_state=chunks}, _) ->$/;"	f	module:cowboy_req
ensure_same_origin_and_csrf_token!	deps/plug/lib/plug/csrf_protection.ex	/^  defp ensure_same_origin_and_csrf_token!(conn, csrf_token) do$/;"	f
ensure_tmp_dir	deps/plug/lib/plug/upload.ex	/^  defp ensure_tmp_dir(tmps) do$/;"	f
entity_tag	deps/cowboy/src/cowboy_http.erl	/^entity_tag(<< "W\/", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
entity_tag	deps/cowboy/src/cowboy_http.erl	/^entity_tag(Data, Fun) ->$/;"	f	module:cowboy_http
entity_tag_match	deps/cowboy/src/cowboy_http.erl	/^entity_tag_match(<< $*, Rest\/binary >>) ->$/;"	f	module:cowboy_http
entity_tag_match	deps/cowboy/src/cowboy_http.erl	/^entity_tag_match(Data) ->$/;"	f	module:cowboy_http
entity_tag_match_test_	deps/cowboy/src/cowboy_http.erl	/^entity_tag_match_test_() ->$/;"	f	module:cowboy_http
entry	deps/plug/lib/plug/mime.ex	/^    defp entry(unquote(type)), do: unquote(exts)$/;"	f
entry	deps/plug/lib/plug/mime.ex	/^  defp entry(_type), do: nil$/;"	f
erlang	deps/cowboy/erlang.mk	/^define erlang$/;"	m
erlc_verbose	deps/cowboy/erlang.mk	/^erlc_verbose = $(erlc_verbose_$(V))$/;"	m
erlc_verbose	deps/cowlib/erlang.mk	/^erlc_verbose = $(erlc_verbose_$(V))$/;"	m
erlc_verbose	deps/ranch/erlang.mk	/^erlc_verbose = $(erlc_verbose_$(V))$/;"	m
erlc_verbose_0	deps/cowboy/erlang.mk	/^erlc_verbose_0 = @echo " ERLC  " $(filter-out $(patsubst %,%.erl,$(ERLC_EXCLUDE)),\\$/;"	m
erlc_verbose_0	deps/cowlib/erlang.mk	/^erlc_verbose_0 = @echo " ERLC  " $(filter %.erl %.core,$(?F));$/;"	m
erlc_verbose_0	deps/ranch/erlang.mk	/^erlc_verbose_0 = @echo " ERLC  " $(filter %.erl %.core,$(?F));$/;"	m
error_terminate	deps/cowboy/src/cowboy_protocol.erl	/^error_terminate(Status, Req, State) ->$/;"	f	module:cowboy_protocol
error_terminate	deps/cowboy/src/cowboy_protocol.erl	/^error_terminate(Status, State=#state{socket=Socket, transport=Transport,$/;"	f	module:cowboy_protocol
error_terminate	deps/cowboy/src/cowboy_rest.erl	/^error_terminate(Req, State=#state{handler=Handler, handler_state=HandlerState},$/;"	f	module:cowboy_rest
escape	deps/poison/lib/poison/encoder.ex	/^    defp escape(<<unquote(char)>> <> rest, mode) do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape("", _), do: []$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(<<char :: utf8>> <> rest, :javascript) when char in [0x2028, 0x2029] do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(<<char :: utf8>> <> rest, :unicode) when char > 0xFFFF do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(<<char :: utf8>> <> rest, :unicode) when char in 0xA0..0xFFFF do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(<<char :: utf8>> <> rest, mode) when char in 0x80..0x9F do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(<<char>> <> rest, mode) when char < 0x1F or char == 0x7F do$/;"	f
escape	deps/poison/lib/poison/encoder.ex	/^  defp escape(string, mode) do$/;"	f
escape_char	deps/plug/lib/plug/html.ex	/^    defp escape_char(unquote(match)), do: unquote(insert)$/;"	f
escape_char	deps/plug/lib/plug/html.ex	/^  defp escape_char(char), do: char$/;"	f
etag_for_path	deps/plug/lib/plug/static.ex	/^  defp etag_for_path(file_info) do$/;"	f
eunit.erl	deps/cowboy/erlang.mk	/^define eunit.erl$/;"	m
exception	deps/poison/lib/poison/parser.ex	/^  def exception(opts) do$/;"	f
execute	deps/cowboy/src/cowboy_handler.erl	/^execute(Req, Env) ->$/;"	f	module:cowboy_handler
execute	deps/cowboy/src/cowboy_protocol.erl	/^execute(Req, State, Env, [Middleware|Tail]) ->$/;"	f	module:cowboy_protocol
execute	deps/cowboy/src/cowboy_protocol.erl	/^execute(Req, State, Env, []) ->$/;"	f	module:cowboy_protocol
execute	deps/cowboy/src/cowboy_protocol.erl	/^execute(Req, State=#state{middlewares=Middlewares, env=Env}) ->$/;"	f	module:cowboy_protocol
execute	deps/cowboy/src/cowboy_router.erl	/^execute(Req, Env) ->$/;"	f	module:cowboy_router
execute	deps/cowboy/src/cowboy_spdy.erl	/^execute(Req, Env, [Middleware|Tail]) ->$/;"	f	module:cowboy_spdy
execute	deps/cowboy/src/cowboy_spdy.erl	/^execute(Req, _, []) ->$/;"	f	module:cowboy_spdy
expect	deps/cowboy/src/cowboy_rest.erl	/^expect(Req, State, Callback, Expected, OnTrue, OnFalse) ->$/;"	f	module:cowboy_rest
expectation	deps/cowboy/src/cowboy_http.erl	/^expectation(Data, Fun) ->$/;"	f	module:cowboy_http
expires	deps/cowboy/src/cowboy_rest.erl	/^expires(Req, State=#state{expires=Expires}) ->$/;"	f	module:cowboy_rest
expires	deps/cowboy/src/cowboy_rest.erl	/^expires(Req, State=#state{expires=no_call}) ->$/;"	f	module:cowboy_rest
expires	deps/cowboy/src/cowboy_rest.erl	/^expires(Req, State=#state{expires=undefined}) ->$/;"	f	module:cowboy_rest
extensions	deps/plug/lib/plug/mime.ex	/^  def extensions(type) do$/;"	f
extract_path	deps/plug/lib/plug/router.ex	/^  defp extract_path(path), do: path$/;"	f
extract_path	deps/plug/lib/plug/router.ex	/^  defp extract_path({:_, _, var}) when is_atom(var), do: "\/*_path"$/;"	f
extract_path_and_guards	deps/plug/lib/plug/router.ex	/^  defp extract_path_and_guards(path), do: {extract_path(path), true}$/;"	f
extract_path_and_guards	deps/plug/lib/plug/router.ex	/^  defp extract_path_and_guards({:when, _, [path, guards]}), do: {extract_path(path), guards}$/;"	f
extract_private_merger	deps/plug/lib/plug/router.ex	/^  defp extract_private_merger(options) when is_list(options) do$/;"	f
ezdoc_script	deps/cowboy/Makefile	/^define ezdoc_script$/;"	m
fail	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp fail(message) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(%Conn{req_cookies: %Unfetched{},$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(%Conn{} = conn, _opts) do$/;"	f
fetch_cookies	deps/plug/lib/plug/conn.ex	/^  def fetch_cookies(conn, opts \\\\ [])$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(%Conn{query_params: %Unfetched{}, params: params,$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(%Conn{} = conn, _opts) do$/;"	f
fetch_query_params	deps/plug/lib/plug/conn.ex	/^  def fetch_query_params(conn, opts \\\\ [])$/;"	f
fetch_session	deps/plug/lib/plug/conn.ex	/^  def fetch_session(%Conn{private: private} = conn, _opts) do$/;"	f
fetch_session	deps/plug/lib/plug/conn.ex	/^  def fetch_session(conn, opts \\\\ [])$/;"	f
fetch_session	deps/plug/lib/plug/session.ex	/^  defp fetch_session(config) do$/;"	f
file_encoding	deps/plug/lib/plug/static.ex	/^  defp file_encoding(conn, path, gzip) do$/;"	f
filter_except	deps/maru/lib/maru/plugs/extend.ex	/^  def filter_except(_, nil), do: true$/;"	f
filter_except	deps/maru/lib/maru/plugs/extend.ex	/^  def filter_except(endpoint, except) do$/;"	f
filter_only	deps/maru/lib/maru/plugs/extend.ex	/^  def filter_only(_, nil), do: true$/;"	f
filter_only	deps/maru/lib/maru/plugs/extend.ex	/^  def filter_only(endpoint, only) do$/;"	f
filter_options	deps/ranch/src/ranch.erl	/^filter_options(UserOptions, AllowedKeys, DefaultOptions) ->$/;"	f	module:ranch
filter_origin	deps/maru/lib/maru/plugs/extend.ex	/^  def filter_origin(endpoint, origin_endpoints) do$/;"	f
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([Opt = {Key, _}|Tail], AllowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([Opt = {raw, _, _, _}|Tail], AllowedKeys) ->$/;"	f	module:ranch
filter_user_options	deps/ranch/src/ranch.erl	/^filter_user_options([], _) ->$/;"	f	module:ranch
find_tmp_dir	deps/plug/lib/plug/upload.ex	/^  defp find_tmp_dir(pid, tmps, ets) do$/;"	f
first_part	deps/cowlib/src/cow_multipart.erl	/^first_part(Boundary, Headers) ->$/;"	f	module:cow_multipart
flush	deps/ranch/src/ranch_acceptor.erl	/^flush() ->$/;"	f	module:ranch_acceptor
flush_timeouts	deps/cowboy/src/cowboy_handler.erl	/^flush_timeouts() ->$/;"	f	module:cowboy_handler
forbidden	deps/cowboy/src/cowboy_rest.erl	/^forbidden(Req, State) ->$/;"	f	module:cowboy_rest
forbidden	deps/cowboy/src/cowboy_static.erl	/^forbidden(Req, State) ->$/;"	f	module:cowboy_static
forbidden	deps/cowboy/src/cowboy_static.erl	/^forbidden(Req, State={_, {error, eacces}, _}) ->$/;"	f	module:cowboy_static
forbidden	deps/cowboy/src/cowboy_static.erl	/^forbidden(Req, State={_, {ok, #file_info{access=Access}}, _})$/;"	f	module:cowboy_static
forbidden	deps/cowboy/src/cowboy_static.erl	/^forbidden(Req, State={_, {ok, #file_info{type=directory}}, _}) ->$/;"	f	module:cowboy_static
form_data	deps/cowlib/src/cow_multipart.erl	/^form_data(Headers) ->$/;"	f	module:cow_multipart
form_data_test_	deps/cowlib/src/cow_multipart.erl	/^form_data_test_() ->$/;"	f	module:cow_multipart
format_method	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_method(method) do$/;"	f
format_method	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_method({:_, [], nil}), do: ":match" |> format_method$/;"	f
format_path	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_path([]), do: "\/"$/;"	f
format_path	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_path(p) do$/;"	f
format_version	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_version(nil), do: "nil" |> format_version$/;"	f
format_version	deps/maru/lib/mix/tasks/routers.ex	/^  defp format_version(version) do$/;"	f
formatted_diff	deps/plug/lib/plug/logger.ex	/^  defp formatted_diff(diff) when diff > 1000, do: [diff |> div(1000) |> Integer.to_string, "ms"]$/;"	f
formatted_diff	deps/plug/lib/plug/logger.ex	/^  defp formatted_diff(diff), do: [diff |> Integer.to_string, "µs"]$/;"	f
forward	deps/plug/lib/plug/router.ex	/^  defmacro forward(path, options) when is_binary(path) do$/;"	a
forward	deps/plug/lib/plug/router/utils.ex	/^  def forward(%Plug.Conn{path_info: path, script_name: script} = conn, new_path, target, opts) do$/;"	f
frames	deps/plug/lib/plug/debugger.ex	/^  defp frames(stacktrace, opts) do$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from("false"), do: false$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from("true"), do: true$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(%Plug.Upload{}=f), do: f$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(any), do: any$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(list) when is_list(list), do: list$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(map) when is_map(map), do: map$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(nil), do: false$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s) do$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s) when is_atom(s), do: s$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s) when is_boolean(s), do: s$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s) when is_float(s), do: s$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s) when is_integer(s), do: :erlang.float(s)$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s), do: s |> to_char_list$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s), do: s |> to_string |> Elixir.String.to_existing_atom$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s), do: s |> to_string |> Elixir.String.to_integer$/;"	f
from	deps/maru/lib/maru/param_type.ex	/^    def from(s), do: s |> to_string$/;"	f
from_flag	deps/cowlib/src/cow_spdy.erl	/^from_flag(0) -> false;$/;"	f	module:cow_spdy
from_flag	deps/cowlib/src/cow_spdy.erl	/^from_flag(1) -> true.$/;"	f	module:cow_spdy
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath(Path) ->$/;"	f	module:cowboy_static
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath([<<".">>|Tail], Acc) ->$/;"	f	module:cowboy_static
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath([<<"..">>|Tail], Acc=[_]) ->$/;"	f	module:cowboy_static
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath([<<"..">>|Tail], [_|Acc]) ->$/;"	f	module:cowboy_static
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath([Segment|Tail], Acc) ->$/;"	f	module:cowboy_static
fullpath	deps/cowboy/src/cowboy_static.erl	/^fullpath([], Acc) ->$/;"	f	module:cowboy_static
fullpath_test_	deps/cowboy/src/cowboy_static.erl	/^fullpath_test_() ->$/;"	f	module:cowboy_static
g	deps/cowboy/src/cowboy_req.erl	/^g(bindings, #http_req{bindings=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(body_state, #http_req{body_state=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(buffer, #http_req{buffer=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(connection, #http_req{connection=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(cookies, #http_req{cookies=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(headers, #http_req{headers=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(host, #http_req{host=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(host_info, #http_req{host_info=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(meta, #http_req{meta=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(method, #http_req{method=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(multipart, #http_req{multipart=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(onresponse, #http_req{onresponse=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(p_headers, #http_req{p_headers=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(path, #http_req{path=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(path_info, #http_req{path_info=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(peer, #http_req{peer=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(pid, #http_req{pid=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(port, #http_req{port=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(qs, #http_req{qs=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(qs_vals, #http_req{qs_vals=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(resp_body, #http_req{resp_body=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(resp_compress, #http_req{resp_compress=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(resp_headers, #http_req{resp_headers=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(resp_state, #http_req{resp_state=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(socket, #http_req{socket=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(transport, #http_req{transport=Ret}) -> Ret;$/;"	f	module:cowboy_req
g	deps/cowboy/src/cowboy_req.erl	/^g(version, #http_req{version=Ret}) -> Ret.$/;"	f	module:cowboy_req
gen_verbose	deps/cowboy/erlang.mk	/^gen_verbose = $(gen_verbose_$(V))$/;"	m
gen_verbose	deps/cowlib/erlang.mk	/^gen_verbose = $(gen_verbose_$(V))$/;"	m
gen_verbose	deps/ranch/erlang.mk	/^gen_verbose = $(gen_verbose_$(V))$/;"	m
gen_verbose_0	deps/cowboy/erlang.mk	/^gen_verbose_0 = @echo " GEN   " $@;$/;"	m
gen_verbose_0	deps/cowlib/erlang.mk	/^gen_verbose_0 = @echo " GEN   " $@;$/;"	m
gen_verbose_0	deps/ranch/erlang.mk	/^gen_verbose_0 = @echo " GEN   " $@;$/;"	m
generate	deps/maru/lib/maru/builder/routers.ex	/^  def generate(module) do$/;"	f
generate	deps/plug/lib/plug/crypto/key_generator.ex	/^  def generate(secret, salt, opts \\\\ []) do$/;"	f
generate	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp generate(_fun, _salt, _iterations, max_length, _block_index, acc, length)$/;"	f
generate	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp generate(fun, salt, iterations, max_length, block_index, acc, length) do$/;"	f
generate_default_etag	deps/cowboy/src/cowboy_static.erl	/^generate_default_etag(Size, Mtime) ->$/;"	f	module:cowboy_static
generate_detail	deps/maru/lib/maru/builder/routers.ex	/^  defp generate_detail(module, mount_path, mount_version, all_modules) do$/;"	f
generate_endpoint	deps/maru/lib/mix/tasks/routers.ex	/^  defp generate_endpoint(ep) do$/;"	f
generate_etag	deps/cowboy/src/cowboy_rest.erl	/^generate_etag(Req, State=#state{etag=Etag}) ->$/;"	f	module:cowboy_rest
generate_etag	deps/cowboy/src/cowboy_rest.erl	/^generate_etag(Req, State=#state{etag=no_call}) ->$/;"	f	module:cowboy_rest
generate_etag	deps/cowboy/src/cowboy_rest.erl	/^generate_etag(Req, State=#state{etag=undefined}) ->$/;"	f	module:cowboy_rest
generate_etag	deps/cowboy/src/cowboy_static.erl	/^generate_etag(Req, State={Path, {ok, #file_info{size=Size, mtime=Mtime}},$/;"	f	module:cowboy_static
generate_module	deps/maru/lib/maru/builder/routers.ex	/^  defp generate_module(module, options, generated) do$/;"	f
generate_request_id	deps/plug/lib/plug/request_id.ex	/^  defp generate_request_id do$/;"	f
generate_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp generate_token do$/;"	f
get	deps/cowboy/src/cowboy_req.erl	/^get(Atom, Req) when is_atom(Atom) ->$/;"	f	module:cowboy_req
get	deps/cowboy/src/cowboy_req.erl	/^get(List, Req) when is_list(List) ->$/;"	f	module:cowboy_req
get	deps/plug/lib/plug/conn/unfetched.ex	/^  def get(%{aspect: aspect}, key, _value) do$/;"	f
get	deps/plug/lib/plug/router.ex	/^  defmacro get(path, options, contents \\\\ []) do$/;"	a
get	deps/plug/lib/plug/session/cookie.ex	/^  def get(conn, cookie, opts) do$/;"	f
get	deps/plug/lib/plug/session/ets.ex	/^  def get(_conn, sid, table) do$/;"	f
get	deps/plug/lib/plug/session/store.ex	/^  defcallback get(Plug.Conn.t, cookie, Plug.opts) :: {sid, session}$/;"	c
get_and_update	deps/plug/lib/plug/conn/unfetched.ex	/^  def get_and_update(%{aspect: aspect}, key, _fun) do$/;"	f
get_app	deps/plug/lib/plug/debugger.ex	/^  defp get_app(module) do$/;"	f
get_child	deps/cowboy/src/cowboy_spdy.erl	/^get_child(StreamID, #state{children=Children}) ->$/;"	f	module:cowboy_spdy
get_connections_sup	deps/ranch/src/ranch_server.erl	/^get_connections_sup(Ref) ->$/;"	f	module:ranch_server
get_context	deps/plug/lib/plug/debugger.ex	/^  defp get_context(_app1, _app2),             do: :all$/;"	f
get_context	deps/plug/lib/plug/debugger.ex	/^  defp get_context(app, app) when app != nil, do: :app$/;"	f
get_csrf_from_session	deps/plug/lib/plug/csrf_protection.ex	/^  defp get_csrf_from_session(conn) do$/;"	f
get_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  def get_csrf_token do$/;"	f
get_editor	deps/plug/lib/plug/debugger.ex	/^  defp get_editor(file, line, editor) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({_module, :__FILE__, 1, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({_module, :__MODULE__, 1, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({fun, arity, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, :__MODULE__, 0, location}) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, fun, args, location}) when is_list(args) do$/;"	f
get_entry	deps/plug/lib/plug/debugger.ex	/^  defp get_entry({module, fun, arity, location}) do$/;"	f
get_extend_opts	deps/maru/lib/maru/builder/routers.ex	/^  defp get_extend_opts(nil),         do: nil$/;"	f
get_extend_opts	deps/maru/lib/maru/builder/routers.ex	/^  defp get_extend_opts({_, opts, _}), do: opts$/;"	f
get_file	deps/cowboy/src/cowboy_static.erl	/^get_file(Req, State={Path, {ok, #file_info{size=Size}}, _}) ->$/;"	f	module:cowboy_static
get_header	deps/plug/lib/plug/parsers/multipart.ex	/^  defp get_header(headers, key) do$/;"	f
get_max_connections	deps/ranch/src/ranch.erl	/^get_max_connections(Ref) ->$/;"	f	module:ranch
get_max_connections	deps/ranch/src/ranch_server.erl	/^get_max_connections(Ref) ->$/;"	f	module:ranch_server
get_port	deps/ranch/src/ranch.erl	/^get_port(Ref) ->$/;"	f	module:ranch
get_port	deps/ranch/src/ranch_server.erl	/^get_port(Ref) ->$/;"	f	module:ranch_server
get_present_value	deps/maru/lib/maru/helpers/response.ex	/^  defp get_present_value(payload, opts) do$/;"	f
get_protocol_options	deps/ranch/src/ranch.erl	/^get_protocol_options(Ref) ->$/;"	f	module:ranch
get_protocol_options	deps/ranch/src/ranch_server.erl	/^get_protocol_options(Ref) ->$/;"	f	module:ranch_server
get_relx_release.erl	deps/cowboy/erlang.mk	/^define get_relx_release.erl$/;"	m
get_req_header	deps/plug/lib/plug/conn.ex	/^  def get_req_header(%Conn{req_headers: headers}, key) when is_binary(key) do$/;"	f
get_request_id	deps/plug/lib/plug/request_id.ex	/^  defp get_request_id(conn, header) do$/;"	f
get_resp_header	deps/plug/lib/plug/conn.ex	/^  def get_resp_header(%Conn{resp_headers: headers}, key) when is_binary(key) do$/;"	f
get_session	deps/plug/lib/plug/conn.ex	/^  def get_session(conn, key) do$/;"	f
get_session	deps/plug/lib/plug/conn.ex	/^  defp get_session(%Conn{private: private}) do$/;"	f
get_snippet	deps/plug/lib/plug/debugger.ex	/^  defp get_snippet(file, line) do$/;"	f
get_source	deps/plug/lib/plug/debugger.ex	/^  defp get_source(module, file) do$/;"	f
get_value	deps/cowboy/src/cowboy_protocol.erl	/^get_value(Key, Opts, Default) ->$/;"	f	module:cowboy_protocol
get_value	deps/cowboy/src/cowboy_spdy.erl	/^get_value(Key, Opts, Default) ->$/;"	f	module:cowboy_spdy
goaway	deps/cowboy/src/cowboy_spdy.erl	/^goaway(#state{socket=Socket, transport=Transport, last_streamid=LastStreamID},$/;"	f	module:cowboy_spdy
goaway	deps/cowlib/src/cow_spdy.erl	/^goaway(LastGoodStreamID, Status) ->$/;"	f	module:cow_spdy
good_path_check_test_	deps/cowboy/src/cowboy_static.erl	/^good_path_check_test_() ->$/;"	f	module:cowboy_static
good_path_win32_check_test_	deps/cowboy/src/cowboy_static.erl	/^good_path_win32_check_test_() ->$/;"	f	module:cowboy_static
group	deps/maru/lib/maru/builder/params.ex	/^  defmacro group(group_name, options \\\\ [], [do: block]) do$/;"	a
gzip?	deps/plug/lib/plug/static.ex	/^  defp gzip?(conn) do$/;"	f
h	deps/plug/lib/plug/debugger.ex	/^  defp h(string) do$/;"	f
halt	deps/plug/lib/plug/conn.ex	/^  def halt(%Conn{} = conn) do$/;"	f
handle_call	deps/cowboy/src/cowboy_clock.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:cowboy_clock
handle_call	deps/cowboy/src/cowboy_clock.erl	/^handle_call(stop, _From, State) ->$/;"	f	module:cowboy_clock
handle_call	deps/plug/lib/plug/upload.ex	/^  def handle_call(msg, from, state) do$/;"	f
handle_call	deps/plug/lib/plug/upload.ex	/^  def handle_call({:random, prefix}, {pid, _ref}, {tmps, ets} = state) do$/;"	f
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call(_Request, _From, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_connections_sup, Ref, Pid}, _,$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_max_conns, Ref, MaxConns}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_new_listener_opts, Ref, MaxConns, Opts}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_opts, Ref, Opts}, _, State) ->$/;"	f	module:ranch_server
handle_call	deps/ranch/src/ranch_server.erl	/^handle_call({set_port, Ref, Port}, _, State) ->$/;"	f	module:ranch_server
handle_cast	deps/cowboy/src/cowboy_clock.erl	/^handle_cast(_Msg, State) ->$/;"	f	module:cowboy_clock
handle_cast	deps/ranch/src/ranch_server.erl	/^handle_cast(_Request, State) ->$/;"	f	module:ranch_server
handle_disposition	deps/plug/lib/plug/parsers/multipart.ex	/^  defp handle_disposition(disposition, headers) do$/;"	f
handle_disposition_params	deps/plug/lib/plug/parsers/multipart.ex	/^  defp handle_disposition_params(name, params, headers) do$/;"	f
handle_errors	deps/plug/lib/plug/error_handler.ex	/^        defp handle_errors(conn, %{kind: _kind, reason: _reason, stack: _stack}) do$/;"	f
handle_errors	deps/plug/lib/plug/error_handler.ex	/^      defp handle_errors(conn, assigns) do$/;"	f
handle_errors	deps/plug/lib/plug/router.ex	/^        defp handle_errors(conn, %{kind: _kind, reason: _reason, stack: _stack}) do$/;"	f
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, Frame) ->$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {data, StreamID, IsFin, Data}) ->$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {error, badprotocol}) ->$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {ping, PingID}) when PingID rem 2 =:= 0 ->$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {rst_stream, StreamID, Status}) ->$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {syn_stream, StreamID, AssocToStreamID,$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State, {syn_stream, StreamID, _, _, true,$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State=#state{middlewares=Middlewares, env=Env,$/;"	f	module:cowboy_spdy
handle_frame	deps/cowboy/src/cowboy_spdy.erl	/^handle_frame(State=#state{socket=Socket, transport=Transport},$/;"	f	module:cowboy_spdy
handle_headers	deps/plug/lib/plug/parsers/multipart.ex	/^  defp handle_headers(headers) do$/;"	f
handle_info	deps/cowboy/src/cowboy_clock.erl	/^handle_info(_Info, State) ->$/;"	f	module:cowboy_clock
handle_info	deps/cowboy/src/cowboy_clock.erl	/^handle_info(update, #state{universaltime=Prev, rfc1123=B1, tref=TRef0}) ->$/;"	f	module:cowboy_clock
handle_info	deps/plug/lib/plug/upload.ex	/^  def handle_info(msg, state) do$/;"	f
handle_info	deps/plug/lib/plug/upload.ex	/^  def handle_info({:DOWN, _ref, :process, pid, _reason}, {_, ets} = state) do$/;"	f
handle_info	deps/ranch/src/ranch_server.erl	/^handle_info(_Info, State) ->$/;"	f	module:ranch_server
handle_info	deps/ranch/src/ranch_server.erl	/^handle_info({'DOWN', MonitorRef, process, Pid, _},$/;"	f	module:ranch_server
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, _identifier, _expr}, t, _context, _vars, _acc) when t != [] do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, identifier, expr}, _t, context, vars, [hs|ts]) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:glob, identifier, expr}, _t, context, vars, _) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:identifier, identifier, expr}, t, context, vars, acc) do$/;"	f
handle_segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp handle_segment_match({:literal, literal}, t, context, vars, acc) do$/;"	f
handler_after_callback	deps/cowboy/src/cowboy_handler.erl	/^handler_after_callback(Req, State, Handler, HandlerState) ->$/;"	f	module:cowboy_handler
handler_after_callback	deps/cowboy/src/cowboy_handler.erl	/^handler_after_callback(Req, State=#state{resp_sent=false}, Handler,$/;"	f	module:cowboy_handler
handler_after_loop	deps/cowboy/src/cowboy_handler.erl	/^handler_after_loop(Req, State, Handler, HandlerState, Reason) ->$/;"	f	module:cowboy_handler
handler_before_loop	deps/cowboy/src/cowboy_handler.erl	/^handler_before_loop(Req, State, Handler, HandlerState) ->$/;"	f	module:cowboy_handler
handler_before_loop	deps/cowboy/src/cowboy_handler.erl	/^handler_before_loop(Req, State=#state{hibernate=true}, Handler, HandlerState) ->$/;"	f	module:cowboy_handler
handler_before_loop	deps/cowboy/src/cowboy_websocket.erl	/^handler_before_loop(State=#state{$/;"	f	module:cowboy_websocket
handler_before_loop	deps/cowboy/src/cowboy_websocket.erl	/^handler_before_loop(State=#state{socket=Socket, transport=Transport},$/;"	f	module:cowboy_websocket
handler_call	deps/cowboy/src/cowboy_handler.erl	/^handler_call(Req, State=#state{resp_sent=RespSent},$/;"	f	module:cowboy_handler
handler_call	deps/cowboy/src/cowboy_websocket.erl	/^handler_call(State=#state{handler=Handler}, Req, HandlerState,$/;"	f	module:cowboy_websocket
handler_handle	deps/cowboy/src/cowboy_handler.erl	/^handler_handle(Req, State, Handler, HandlerState) ->$/;"	f	module:cowboy_handler
handler_init	deps/cowboy/src/cowboy_handler.erl	/^handler_init(Req, State, Handler, HandlerOpts) ->$/;"	f	module:cowboy_handler
handler_init	deps/cowboy/src/cowboy_websocket.erl	/^handler_init(State=#state{env=Env, transport=Transport,$/;"	f	module:cowboy_websocket
handler_loop	deps/cowboy/src/cowboy_handler.erl	/^handler_loop(Req, State=#state{loop_buffer_size=NbBytes,$/;"	f	module:cowboy_handler
handler_loop	deps/cowboy/src/cowboy_websocket.erl	/^handler_loop(State=#state{socket=Socket, messages={OK, Closed, Error},$/;"	f	module:cowboy_websocket
handler_loop_timeout	deps/cowboy/src/cowboy_handler.erl	/^handler_loop_timeout(State=#state{loop_timeout=Timeout,$/;"	f	module:cowboy_handler
handler_loop_timeout	deps/cowboy/src/cowboy_handler.erl	/^handler_loop_timeout(State=#state{loop_timeout=infinity}) ->$/;"	f	module:cowboy_handler
handler_loop_timeout	deps/cowboy/src/cowboy_websocket.erl	/^handler_loop_timeout(State=#state{timeout=Timeout, timeout_ref=PrevRef}) ->$/;"	f	module:cowboy_websocket
handler_loop_timeout	deps/cowboy/src/cowboy_websocket.erl	/^handler_loop_timeout(State=#state{timeout=infinity}) ->$/;"	f	module:cowboy_websocket
handler_terminate	deps/cowboy/src/cowboy_handler.erl	/^handler_terminate(Req, Handler, HandlerState, Reason) ->$/;"	f	module:cowboy_handler
handler_terminate	deps/cowboy/src/cowboy_websocket.erl	/^handler_terminate(#state{env=Env, handler=Handler},$/;"	f	module:cowboy_websocket
has_body	deps/cowboy/src/cowboy_req.erl	/^has_body(Req) ->$/;"	f	module:cowboy_req
has_resp_body	deps/cowboy/src/cowboy_req.erl	/^has_resp_body(#http_req{resp_body=RespBody}) ->$/;"	f	module:cowboy_req
has_resp_body	deps/cowboy/src/cowboy_req.erl	/^has_resp_body(#http_req{resp_body=RespBody}) when is_function(RespBody) ->$/;"	f	module:cowboy_req
has_resp_body	deps/cowboy/src/cowboy_req.erl	/^has_resp_body(#http_req{resp_body={Length, _}}) ->$/;"	f	module:cowboy_req
has_resp_body	deps/cowboy/src/cowboy_req.erl	/^has_resp_body(#http_req{resp_body={chunked, _}}) ->$/;"	f	module:cowboy_req
has_resp_body	deps/cowboy/src/cowboy_rest.erl	/^has_resp_body(Req, State) ->$/;"	f	module:cowboy_rest
has_resp_header	deps/cowboy/src/cowboy_req.erl	/^has_resp_header(Name, #http_req{resp_headers=RespHeaders}) ->$/;"	f	module:cowboy_req
header	deps/cowboy/src/cowboy_req.erl	/^header(Name, Req) ->$/;"	f	module:cowboy_req
header	deps/cowboy/src/cowboy_req.erl	/^header(Name, Req, Default) ->$/;"	f	module:cowboy_req
header	deps/maru/lib/maru/helpers/response.ex	/^  defmacro header(key, nil) do$/;"	a
header	deps/maru/lib/maru/helpers/response.ex	/^  defmacro header(key, value) do$/;"	a
headers	deps/cowboy/src/cowboy_req.erl	/^headers(Req) ->$/;"	f	module:cowboy_req
headers_to_iolist	deps/cowlib/src/cow_multipart.erl	/^headers_to_iolist([], Acc) ->$/;"	f	module:cow_multipart
headers_to_iolist	deps/cowlib/src/cow_multipart.erl	/^headers_to_iolist([{N, V}|Tail], Acc) ->$/;"	f	module:cow_multipart
hello	deps/plug/lib/plug/builder.ex	/^        def hello(conn, opts) do$/;"	f
helpers	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro helpers([do: block]) do$/;"	a
helpers	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro helpers({_, _, mod}) do$/;"	a
hex	deps/cowlib/src/cow_qs.erl	/^hex( 0) -> $0;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 1) -> $1;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 2) -> $2;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 3) -> $3;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 4) -> $4;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 5) -> $5;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 6) -> $6;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 7) -> $7;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 8) -> $8;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex( 9) -> $9;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(10) -> $A;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(11) -> $B;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(12) -> $C;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(13) -> $D;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(14) -> $E;$/;"	f	module:cow_qs
hex	deps/cowlib/src/cow_qs.erl	/^hex(15) -> $F.$/;"	f	module:cow_qs
hex_fetch.erl	deps/cowboy/erlang.mk	/^define hex_fetch.erl$/;"	m
horse_build	deps/cowlib/src/cow_multipart.erl	/^horse_build() ->$/;"	f	module:cow_multipart
horse_parse	deps/cowlib/src/cow_multipart.erl	/^horse_parse() ->$/;"	f	module:cow_multipart
horse_parse_connection_close	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_connection_close() ->$/;"	f	module:cow_http_hd
horse_parse_connection_keepalive	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_connection_keepalive() ->$/;"	f	module:cow_http_hd
horse_parse_connection_keepalive_upgrade	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_connection_keepalive_upgrade() ->$/;"	f	module:cow_http_hd
horse_parse_content_disposition_attachment	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_disposition_attachment() ->$/;"	f	module:cow_multipart
horse_parse_content_disposition_form_data	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_disposition_form_data() ->$/;"	f	module:cow_multipart
horse_parse_content_disposition_inline	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_disposition_inline() ->$/;"	f	module:cow_multipart
horse_parse_content_length_giga	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_content_length_giga() ->$/;"	f	module:cow_http_hd
horse_parse_content_length_zero	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_content_length_zero() ->$/;"	f	module:cow_http_hd
horse_parse_content_transfer_encoding	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_transfer_encoding() ->$/;"	f	module:cow_multipart
horse_parse_content_type_five	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_type_five() ->$/;"	f	module:cow_multipart
horse_parse_content_type_one	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_type_one() ->$/;"	f	module:cow_multipart
horse_parse_content_type_zero	deps/cowlib/src/cow_multipart.erl	/^horse_parse_content_type_zero() ->$/;"	f	module:cow_multipart
horse_parse_headers	deps/cowlib/src/cow_http.erl	/^horse_parse_headers() ->$/;"	f	module:cow_http
horse_parse_qs_long	deps/cowlib/src/cow_qs.erl	/^horse_parse_qs_long() ->$/;"	f	module:cow_qs
horse_parse_qs_longer	deps/cowlib/src/cow_qs.erl	/^horse_parse_qs_longer() ->$/;"	f	module:cow_qs
horse_parse_qs_short	deps/cowlib/src/cow_qs.erl	/^horse_parse_qs_short() ->$/;"	f	module:cow_qs
horse_parse_qs_shorter	deps/cowlib/src/cow_qs.erl	/^horse_parse_qs_shorter() ->$/;"	f	module:cow_qs
horse_parse_status_line_200	deps/cowlib/src/cow_http.erl	/^horse_parse_status_line_200() ->$/;"	f	module:cow_http
horse_parse_status_line_404	deps/cowlib/src/cow_http.erl	/^horse_parse_status_line_404() ->$/;"	f	module:cow_http
horse_parse_status_line_500	deps/cowlib/src/cow_http.erl	/^horse_parse_status_line_500() ->$/;"	f	module:cow_http
horse_parse_status_line_other	deps/cowlib/src/cow_http.erl	/^horse_parse_status_line_other() ->$/;"	f	module:cow_http
horse_parse_transfer_encoding_chunked	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_transfer_encoding_chunked() ->$/;"	f	module:cow_http_hd
horse_parse_transfer_encoding_custom	deps/cowlib/src/cow_http_hd.erl	/^horse_parse_transfer_encoding_custom() ->$/;"	f	module:cow_http_hd
horse_qs_long	deps/cowlib/src/cow_qs.erl	/^horse_qs_long() ->$/;"	f	module:cow_qs
horse_qs_longer	deps/cowlib/src/cow_qs.erl	/^horse_qs_longer() ->$/;"	f	module:cow_qs
horse_qs_short	deps/cowlib/src/cow_qs.erl	/^horse_qs_short() ->$/;"	f	module:cow_qs
horse_qs_shorter	deps/cowlib/src/cow_qs.erl	/^horse_qs_shorter() ->$/;"	f	module:cow_qs
horse_rfc2019_12340506_070809	deps/cowlib/src/cow_date.erl	/^horse_rfc2019_12340506_070809() ->$/;"	f	module:cow_date
horse_rfc2019_20130101_000000	deps/cowlib/src/cow_date.erl	/^horse_rfc2019_20130101_000000() ->$/;"	f	module:cow_date
horse_rfc2019_20131231_235959	deps/cowlib/src/cow_date.erl	/^horse_rfc2019_20131231_235959() ->$/;"	f	module:cow_date
horse_stream_chunked	deps/cowlib/src/cow_http_te.erl	/^horse_stream_chunked() ->$/;"	f	module:cow_http_te
horse_stream_chunked_dripfeed	deps/cowlib/src/cow_http_te.erl	/^horse_stream_chunked_dripfeed() ->$/;"	f	module:cow_http_te
horse_stream_identity	deps/cowlib/src/cow_http_te.erl	/^horse_stream_identity() ->$/;"	f	module:cow_http_te
horse_stream_identity_dripfeed	deps/cowlib/src/cow_http_te.erl	/^horse_stream_identity_dripfeed() ->$/;"	f	module:cow_http_te
horse_urldecode	deps/cowlib/src/cow_qs.erl	/^horse_urldecode() ->$/;"	f	module:cow_qs
horse_urldecode_hex	deps/cowlib/src/cow_qs.erl	/^horse_urldecode_hex() ->$/;"	f	module:cow_qs
horse_urldecode_jp_hex	deps/cowlib/src/cow_qs.erl	/^horse_urldecode_jp_hex() ->$/;"	f	module:cow_qs
horse_urldecode_mix	deps/cowlib/src/cow_qs.erl	/^horse_urldecode_mix() ->$/;"	f	module:cow_qs
horse_urldecode_plus	deps/cowlib/src/cow_qs.erl	/^horse_urldecode_plus() ->$/;"	f	module:cow_qs
horse_urlencode	deps/cowlib/src/cow_qs.erl	/^horse_urlencode() ->$/;"	f	module:cow_qs
horse_urlencode_jp	deps/cowlib/src/cow_qs.erl	/^horse_urlencode_jp() ->$/;"	f	module:cow_qs
horse_urlencode_mix	deps/cowlib/src/cow_qs.erl	/^horse_urlencode_mix() ->$/;"	f	module:cow_qs
horse_urlencode_plus	deps/cowlib/src/cow_qs.erl	/^horse_urlencode_plus() ->$/;"	f	module:cow_qs
host	deps/cowboy/src/cowboy_req.erl	/^host(Req) ->$/;"	f	module:cowboy_req
host_info	deps/cowboy/src/cowboy_req.erl	/^host_info(Req) ->$/;"	f	module:cowboy_req
host_url	deps/cowboy/src/cowboy_req.erl	/^host_url(Req=#http_req{port=undefined}) ->$/;"	f	module:cowboy_req
host_url	deps/cowboy/src/cowboy_req.erl	/^host_url(Req=#http_req{transport=Transport, host=Host, port=Port}) ->$/;"	f	module:cowboy_req
hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp hsts_header(opts) do$/;"	f
html_escape	deps/plug/lib/plug/html.ex	/^  def html_escape(data) when is_binary(data) do$/;"	f
http	deps/plug/lib/plug/adapters/cowboy.ex	/^  def http(plug, opts, cowboy_options \\\\ []) do$/;"	f
http_authorization_test_	deps/cowboy/src/cowboy_http.erl	/^http_authorization_test_() ->$/;"	f	module:cowboy_http
http_date	deps/cowboy/src/cowboy_http.erl	/^http_date(Data) ->$/;"	f	module:cowboy_http
http_date_ret	deps/cowboy/src/cowboy_http.erl	/^http_date_ret(Data, DateTime = {Date, _Time}) ->$/;"	f	module:cowboy_http
http_date_test_	deps/cowboy/src/cowboy_http.erl	/^http_date_test_() ->$/;"	f	module:cowboy_http
http_range_test_	deps/cowboy/src/cowboy_http.erl	/^http_range_test_() ->$/;"	f	module:cowboy_http
http_req	deps/cowboy/src/cowboy_req.erl	/^-record(http_req, {$/;"	r
https	deps/plug/lib/plug/adapters/cowboy.ex	/^  def https(plug, opts, cowboy_options \\\\ []) do$/;"	f
i	deps/plug/lib/plug/upload.ex	/^  defp i(integer), do: Integer.to_string(integer)$/;"	f
identity	deps/cowlib/src/cow_http_te.erl	/^identity(Data) ->$/;"	f	module:cow_http_te
identity_test	deps/cowlib/src/cow_multipart.erl	/^identity_test() ->$/;"	f	module:cow_multipart
if_match	deps/cowboy/src/cowboy_rest.erl	/^if_match(Req, State, EtagsList) ->$/;"	f	module:cowboy_rest
if_match_exists	deps/cowboy/src/cowboy_rest.erl	/^if_match_exists(Req, State) ->$/;"	f	module:cowboy_rest
if_match_must_not_exist	deps/cowboy/src/cowboy_rest.erl	/^if_match_must_not_exist(Req, State) ->$/;"	f	module:cowboy_rest
if_modified_since	deps/cowboy/src/cowboy_rest.erl	/^if_modified_since(Req, State, IfModifiedSince) ->$/;"	f	module:cowboy_rest
if_modified_since_exists	deps/cowboy/src/cowboy_rest.erl	/^if_modified_since_exists(Req, State) ->$/;"	f	module:cowboy_rest
if_modified_since_now	deps/cowboy/src/cowboy_rest.erl	/^if_modified_since_now(Req, State, IfModifiedSince) ->$/;"	f	module:cowboy_rest
if_none_match	deps/cowboy/src/cowboy_rest.erl	/^if_none_match(Req, State, EtagsList) ->$/;"	f	module:cowboy_rest
if_none_match_exists	deps/cowboy/src/cowboy_rest.erl	/^if_none_match_exists(Req, State) ->$/;"	f	module:cowboy_rest
if_unmodified_since	deps/cowboy/src/cowboy_rest.erl	/^if_unmodified_since(Req, State, IfUnmodifiedSince) ->$/;"	f	module:cowboy_rest
if_unmodified_since_exists	deps/cowboy/src/cowboy_rest.erl	/^if_unmodified_since_exists(Req, State) ->$/;"	f	module:cowboy_rest
indent	deps/poison/lib/poison/encoder.ex	/^      defp indent(options) do$/;"	f
inflate	deps/cowlib/src/cow_spdy.erl	/^inflate(Zinf, Data) ->$/;"	f	module:cow_spdy
inflate_init	deps/cowlib/src/cow_spdy.erl	/^inflate_init() ->$/;"	f	module:cow_spdy
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:error, error) do$/;"	f
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:exit, reason) do$/;"	f
info	deps/plug/lib/plug/debugger.ex	/^  defp info(:throw, thrown) do$/;"	f
init	deps/cowboy/src/cowboy_clock.erl	/^init([]) ->$/;"	f	module:cowboy_clock
init	deps/cowboy/src/cowboy_protocol.erl	/^init(Ref, Socket, Transport, Opts) ->$/;"	f	module:cowboy_protocol
init	deps/cowboy/src/cowboy_spdy.erl	/^init(Parent, Ref, Socket, Transport, Opts) ->$/;"	f	module:cowboy_spdy
init	deps/cowboy/src/cowboy_static.erl	/^init(_, _, _) ->$/;"	f	module:cowboy_static
init	deps/cowboy/src/cowboy_sup.erl	/^init([]) ->$/;"	f	module:cowboy_sup
init	deps/maru/lib/maru/builder.ex	/^      def init(_), do: []$/;"	f
init	deps/maru/lib/maru/middleware.ex	/^      def init(opts), do: opts$/;"	f
init	deps/maru/lib/maru/plugs/extend.ex	/^  def init(opts) do$/;"	f
init	deps/maru/lib/maru/plugs/notfound.ex	/^  def init(opts), do: opts$/;"	f
init	deps/maru/lib/maru/plugs/prepare.ex	/^  def init(_), do: []$/;"	f
init	deps/maru/lib/maru/plugs/router.ex	/^  def init(opts) do$/;"	f
init	deps/maru/lib/maru/plugs/version.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug.ex	/^        def init(opts) do$/;"	f
init	deps/plug/lib/plug.ex	/^  defcallback init(opts) :: opts$/;"	c
init	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  def init({transport, :http}, req, {plug, opts}) when transport in [:tcp, :ssl] do$/;"	f
init	deps/plug/lib/plug/builder.ex	/^        def init(opts) do$/;"	f
init	deps/plug/lib/plug/builder.ex	/^      def init(opts) do$/;"	f
init	deps/plug/lib/plug/csrf_protection.ex	/^  def init(opts), do: opts$/;"	f
init	deps/plug/lib/plug/head.ex	/^  def init([]), do: []$/;"	f
init	deps/plug/lib/plug/logger.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/method_override.ex	/^  def init([]), do: []$/;"	f
init	deps/plug/lib/plug/parsers.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/request_id.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session/cookie.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session/ets.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/session/store.ex	/^  defcallback init(Plug.opts) :: Plug.opts$/;"	c
init	deps/plug/lib/plug/ssl.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/static.ex	/^  def init(opts) do$/;"	f
init	deps/plug/lib/plug/supervisor.ex	/^  def init(:ok) do$/;"	f
init	deps/plug/lib/plug/upload.ex	/^  def init(:ok) do$/;"	f
init	deps/ranch/src/ranch_acceptors_sup.erl	/^init([Ref, NbAcceptors, Transport, TransOpts]) ->$/;"	f	module:ranch_acceptors_sup
init	deps/ranch/src/ranch_conns_sup.erl	/^init(Parent, Ref, ConnType, Shutdown, Transport, AckTimeout, Protocol) ->$/;"	f	module:ranch_conns_sup
init	deps/ranch/src/ranch_listener_sup.erl	/^init({Ref, NbAcceptors, Transport, TransOpts, Protocol}) ->$/;"	f	module:ranch_listener_sup
init	deps/ranch/src/ranch_server.erl	/^init([]) ->$/;"	f	module:ranch_server
init	deps/ranch/src/ranch_sup.erl	/^init([]) ->$/;"	f	module:ranch_sup
init_fun_plug	deps/plug/lib/plug/builder.ex	/^  defp init_fun_plug(plug, opts, guards) do$/;"	f
init_module_plug	deps/plug/lib/plug/builder.ex	/^  defp init_module_plug(plug, opts, guards) do$/;"	f
init_multipart	deps/cowboy/src/cowboy_req.erl	/^init_multipart(Req) ->$/;"	f	module:cowboy_req
init_plug	deps/plug/lib/plug/builder.ex	/^  defp init_plug({plug, opts, guards}) do$/;"	f
inspect	deps/plug/lib/plug/conn.ex	/^  def inspect(conn, opts) do$/;"	f
into	deps/plug/lib/plug/conn.ex	/^  def into(conn) do$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([]), do: false$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([h|_]) when h in [".", "..", ""], do: true$/;"	f
invalid_path?	deps/plug/lib/plug/static.ex	/^  defp invalid_path?([h|t]), do: String.contains?(h, ["\/", "\\\\", ":"]) or invalid_path?(t)$/;"	f
is_authorized	deps/cowboy/src/cowboy_rest.erl	/^is_authorized(Req, State) ->$/;"	f	module:cowboy_rest
is_conflict	deps/cowboy/src/cowboy_rest.erl	/^is_conflict(Req, State) ->$/;"	f	module:cowboy_rest
is_post_to_missing_resource	deps/cowboy/src/cowboy_rest.erl	/^is_post_to_missing_resource(Req, State, OnFalse) ->$/;"	f	module:cowboy_rest
is_post_to_missing_resource	deps/cowboy/src/cowboy_rest.erl	/^is_post_to_missing_resource(Req, State=#state{method= <<"POST">>}, OnFalse) ->$/;"	f	module:cowboy_rest
is_put_to_missing_resource	deps/cowboy/src/cowboy_rest.erl	/^is_put_to_missing_resource(Req, State) ->$/;"	f	module:cowboy_rest
is_put_to_missing_resource	deps/cowboy/src/cowboy_rest.erl	/^is_put_to_missing_resource(Req, State=#state{method= <<"PUT">>}) ->$/;"	f	module:cowboy_rest
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(<< 2#1100000:7, _\/bits >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(<< 2#11110100:8, 2#10:2, High:6, _\/bits >>) when High >= 2#10000 ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(<< _\/utf8, Rest\/binary >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#110:3, _:5 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#1110:4, _:4 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#1110:4, _:4, 2#10:2, _:6 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#11110:5, _:3 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#11110:5, _:3, 2#10:2, _:6 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Incomplete = << 2#11110:5, _:3, 2#10:2, _:6, 2#10:2, _:6 >>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(Valid = <<>>) ->$/;"	f	module:cowboy_websocket
is_utf8	deps/cowboy/src/cowboy_websocket.erl	/^is_utf8(_) ->$/;"	f	module:cowboy_websocket
iterate	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp iterate(_fun, 0, _prev, acc), do: acc$/;"	f
iterate	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp iterate(fun, iteration, prev, acc) do$/;"	f
join_guards	deps/plug/lib/plug/router.ex	/^  defp join_guards(fst, snd),  do: (quote do: unquote(fst) and unquote(snd))$/;"	f
join_guards	deps/plug/lib/plug/router.ex	/^  defp join_guards(fst, true), do: fst$/;"	f
js_content_type?	deps/plug/lib/plug/csrf_protection.ex	/^  defp js_content_type?(conn) do$/;"	f
json_header_plug	deps/plug/lib/plug.ex	/^      def json_header_plug(conn, opts) do$/;"	f
known_content_type	deps/cowboy/src/cowboy_rest.erl	/^known_content_type(Req, State) ->$/;"	f	module:cowboy_rest
known_methods	deps/cowboy/src/cowboy_rest.erl	/^known_methods(Req, State=#state{method=Method}) ->$/;"	f	module:cowboy_rest
language_range	deps/cowboy/src/cowboy_http.erl	/^language_range(<< $*, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
language_range	deps/cowboy/src/cowboy_http.erl	/^language_range(Data, Fun) ->$/;"	f	module:cowboy_http
language_range_ret	deps/cowboy/src/cowboy_http.erl	/^language_range_ret(Data, Fun, LanguageTag) ->$/;"	f	module:cowboy_http
language_subtag	deps/cowboy/src/cowboy_http.erl	/^language_subtag(Data, Fun, Tag, Acc) ->$/;"	f	module:cowboy_http
language_tag	deps/cowboy/src/cowboy_http.erl	/^language_tag(Data, Fun) ->$/;"	f	module:cowboy_http
languages_provided	deps/cowboy/src/cowboy_rest.erl	/^languages_provided(Req, State) ->$/;"	f	module:cowboy_rest
last_chunk	deps/cowboy/src/cowboy_req.erl	/^last_chunk(Req=#http_req{socket=Socket, transport=Transport}) ->$/;"	f	module:cowboy_req
last_chunk	deps/cowboy/src/cowboy_req.erl	/^last_chunk(Req=#http_req{socket=Socket, transport=cowboy_spdy}) ->$/;"	f	module:cowboy_req
last_chunk	deps/cowlib/src/cow_http_te.erl	/^last_chunk() ->$/;"	f	module:cow_http_te
last_modified	deps/cowboy/src/cowboy_rest.erl	/^last_modified(Req, State=#state{last_modified=LastModified}) ->$/;"	f	module:cowboy_rest
last_modified	deps/cowboy/src/cowboy_rest.erl	/^last_modified(Req, State=#state{last_modified=no_call}) ->$/;"	f	module:cowboy_rest
last_modified	deps/cowboy/src/cowboy_rest.erl	/^last_modified(Req, State=#state{last_modified=undefined}) ->$/;"	f	module:cowboy_rest
last_modified	deps/cowboy/src/cowboy_static.erl	/^last_modified(Req, State={_, {ok, #file_info{mtime=Modified}}, _}) ->$/;"	f	module:cowboy_static
link_verbose	deps/cowboy/erlang.mk	/^link_verbose = $(link_verbose_$(V))$/;"	m
link_verbose_0	deps/cowboy/erlang.mk	/^link_verbose_0 = @echo " LD    " $(@F);$/;"	m
list	deps/cowboy/src/cowboy_http.erl	/^list(Data, Fun) ->$/;"	f	module:cowboy_http
list	deps/cowboy/src/cowboy_http.erl	/^list(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
list	deps/plug/lib/plug/conn/utils.ex	/^  def list(binary) do$/;"	f
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match(List, ['...'], Binds) ->$/;"	f	module:cowboy_router
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match([E|Tail], [E|TailMatch], Binds) ->$/;"	f	module:cowboy_router
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match([E|Tail], [V|TailMatch], Binds) when is_atom(V) ->$/;"	f	module:cowboy_router
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match([], [], Binds) ->$/;"	f	module:cowboy_router
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match([_E|Tail], ['_'|TailMatch], Binds) ->$/;"	f	module:cowboy_router
list_match	deps/cowboy/src/cowboy_router.erl	/^list_match(_List, _Match, _Binds) ->$/;"	f	module:cowboy_router
listen	deps/ranch/src/ranch_ssl.erl	/^listen(Opts) ->$/;"	f	module:ranch_ssl
listen	deps/ranch/src/ranch_tcp.erl	/^listen(Opts) ->$/;"	f	module:ranch_tcp
lock	deps/cowboy/src/cowboy_req.erl	/^lock(Req) ->$/;"	f	module:cowboy_req
log_halt	deps/plug/lib/plug/builder.ex	/^  defp log_halt(plug_type, plug, env, builder_opts) do$/;"	f
loop	deps/cowboy/src/cowboy_spdy.erl	/^loop(State=#state{parent=Parent, socket=Socket, transport=Transport,$/;"	f	module:cowboy_spdy
loop	deps/ranch/src/ranch_acceptor.erl	/^loop(LSocket, Transport, ConnsSup) ->$/;"	f	module:ranch_acceptor
loop	deps/ranch/src/ranch_conns_sup.erl	/^loop(State=#state{parent=Parent, ref=Ref, conn_type=ConnType,$/;"	f	module:ranch_conns_sup
lstrip	deps/maru/lib/maru/plugs/extend.ex	/^  defp lstrip([], []),                         do: true$/;"	f
lstrip	deps/maru/lib/maru/plugs/extend.ex	/^  defp lstrip([_|t1], [h|t2]) when is_atom(h), do: lstrip(t1, t2)$/;"	f
lstrip	deps/maru/lib/maru/plugs/extend.ex	/^  defp lstrip([h|t1], [h|t2]),                 do: lstrip(t1, t2)$/;"	f
lstrip	deps/maru/lib/maru/plugs/extend.ex	/^  defp lstrip(_, _),                           do: false$/;"	f
lstrip	deps/maru/lib/maru/plugs/extend.ex	/^  defp lstrip(_rest, ["*"]),                   do: true$/;"	f
lstrip	deps/maru/lib/maru/router/endpoint.ex	/^  defp lstrip([h|t1], [h|t2]), do: lstrip(t1, t2)$/;"	f
lstrip	deps/maru/lib/maru/router/endpoint.ex	/^  defp lstrip(_, _),           do: nil$/;"	f
lstrip	deps/maru/lib/maru/router/endpoint.ex	/^  defp lstrip(rest, []),       do: {:ok, rest}$/;"	f
lstrip	deps/maru/lib/maru/router/path.ex	/^  def lstrip([_|t1], [h|t2]) when is_atom(h), do: lstrip(t1, t2)$/;"	f
lstrip	deps/maru/lib/maru/router/path.ex	/^  def lstrip([h|t1], [h|t2]),                 do: lstrip(t1, t2)$/;"	f
lstrip	deps/maru/lib/maru/router/path.ex	/^  def lstrip(_, _),                           do: nil$/;"	f
lstrip	deps/maru/lib/maru/router/path.ex	/^  def lstrip(rest, []),                       do: {:ok, rest}$/;"	f
mac_fun	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp mac_fun(digest, secret) do$/;"	f
make_rescue_block	deps/maru/lib/maru/builder/exceptions.ex	/^  def make_rescue_block({:all, block}) do$/;"	f
make_rescue_block	deps/maru/lib/maru/builder/exceptions.ex	/^  def make_rescue_block({:all, error_var, block}) do$/;"	f
make_rescue_block	deps/maru/lib/maru/builder/exceptions.ex	/^  def make_rescue_block({error, block}) do$/;"	f
make_rescue_block	deps/maru/lib/maru/builder/exceptions.ex	/^  def make_rescue_block({error, error_var, block}) do$/;"	f
make_response	deps/maru/lib/maru/test.ex	/^      defp make_response(conn, version \\\\ nil) do$/;"	f
malformed_request	deps/cowboy/src/cowboy_rest.erl	/^malformed_request(Req, State) ->$/;"	f	module:cowboy_rest
malformed_request	deps/cowboy/src/cowboy_static.erl	/^malformed_request(Req, State) ->$/;"	f	module:cowboy_static
mask	deps/plug/lib/plug/crypto.ex	/^  def mask(left, right) do$/;"	f
mask	deps/plug/lib/plug/crypto.ex	/^  defp mask(<<>>, <<>>, acc) do$/;"	f
mask	deps/plug/lib/plug/crypto.ex	/^  defp mask(<<x, left::binary>>, <<y, right::binary>>, acc) do$/;"	f
mask	deps/plug/lib/plug/csrf_protection.ex	/^  defp mask(token) do$/;"	f
masked_compare	deps/plug/lib/plug/crypto.ex	/^  def masked_compare(left, right, mask) do$/;"	f
masked_compare	deps/plug/lib/plug/crypto.ex	/^  defp masked_compare(<<>>, <<>>, <<>>, acc) do$/;"	f
masked_compare	deps/plug/lib/plug/crypto.ex	/^  defp masked_compare(<<x, left::binary>>, <<y, right::binary>>, <<z, mask::binary>>, acc) do$/;"	f
match	deps/cowboy/src/cowboy_router.erl	/^match(Dispatch, Host, Path) ->$/;"	f	module:cowboy_router
match	deps/cowboy/src/cowboy_router.erl	/^match([], _, _) ->$/;"	f	module:cowboy_router
match	deps/cowboy/src/cowboy_router.erl	/^match([{'_', [], PathMatchs}|_Tail], _, Path) ->$/;"	f	module:cowboy_router
match	deps/cowboy/src/cowboy_router.erl	/^match([{HostMatch, Constraints, PathMatchs}|Tail], Tokens, Path)$/;"	f	module:cowboy_router
match	deps/maru/lib/maru/builder/methods.ex	/^  defmacro match(path \\\\ "", [do: block]) do$/;"	a
match	deps/plug/lib/plug/router.ex	/^      defp match("GET", ["foo", "bar"], conn) do$/;"	f
match	deps/plug/lib/plug/router.ex	/^      defp match(conn, _opts) do$/;"	f
match	deps/plug/lib/plug/router.ex	/^  defmacro match(path, options, contents \\\\ []) do$/;"	a
match_charset	deps/cowboy/src/cowboy_rest.erl	/^match_charset(Req, State, Accept, [], _Charset) ->$/;"	f	module:cowboy_rest
match_charset	deps/cowboy/src/cowboy_rest.erl	/^match_charset(Req, State, Accept, [_|Tail], Charset) ->$/;"	f	module:cowboy_rest
match_charset	deps/cowboy/src/cowboy_rest.erl	/^match_charset(Req, State, _Accept, [Provided|_], {Provided, _}) ->$/;"	f	module:cowboy_rest
match_colon	deps/cowboy/src/cowboy_protocol.erl	/^match_colon(<< $:, _\/bits >>, N) ->$/;"	f	module:cowboy_protocol
match_colon	deps/cowboy/src/cowboy_protocol.erl	/^match_colon(<< _, Rest\/bits >>, N) ->$/;"	f	module:cowboy_protocol
match_colon	deps/cowboy/src/cowboy_protocol.erl	/^match_colon(_, _) ->$/;"	f	module:cowboy_protocol
match_constraints_test	deps/cowboy/src/cowboy_router.erl	/^match_constraints_test() ->$/;"	f	module:cowboy_router
match_eol	deps/cowboy/src/cowboy_protocol.erl	/^match_eol(<< $\\n, _\/bits >>, N) ->$/;"	f	module:cowboy_protocol
match_eol	deps/cowboy/src/cowboy_protocol.erl	/^match_eol(<< _, Rest\/bits >>, N) ->$/;"	f	module:cowboy_protocol
match_eol	deps/cowboy/src/cowboy_protocol.erl	/^match_eol(_, _) ->$/;"	f	module:cowboy_protocol
match_info_test_	deps/cowboy/src/cowboy_router.erl	/^match_info_test_() ->$/;"	f	module:cowboy_router
match_language	deps/cowboy/src/cowboy_rest.erl	/^match_language(Req, State, Accept, [Provided|Tail],$/;"	f	module:cowboy_rest
match_language	deps/cowboy/src/cowboy_rest.erl	/^match_language(Req, State, Accept, [], _Language) ->$/;"	f	module:cowboy_rest
match_language	deps/cowboy/src/cowboy_rest.erl	/^match_language(Req, State, _Accept, [Provided|_Tail], {'*', _Quality}) ->$/;"	f	module:cowboy_rest
match_language	deps/cowboy/src/cowboy_rest.erl	/^match_language(Req, State, _Accept, [Provided|_Tail], {Provided, _Quality}) ->$/;"	f	module:cowboy_rest
match_media_type	deps/cowboy/src/cowboy_rest.erl	/^match_media_type(Req, State, Accept, CTP,$/;"	f	module:cowboy_rest
match_media_type	deps/cowboy/src/cowboy_rest.erl	/^match_media_type(Req, State, Accept, [], _MediaType) ->$/;"	f	module:cowboy_rest
match_media_type	deps/cowboy/src/cowboy_rest.erl	/^match_media_type(Req, State, Accept, [_Any|Tail], MediaType) ->$/;"	f	module:cowboy_rest
match_media_type	deps/cowboy/src/cowboy_rest.erl	/^match_media_type(Req, State, Accept,$/;"	f	module:cowboy_rest
match_media_type_params	deps/cowboy/src/cowboy_rest.erl	/^match_media_type_params(Req, State, Accept,$/;"	f	module:cowboy_rest
match_media_type_params	deps/cowboy/src/cowboy_rest.erl	/^match_media_type_params(Req, State, _Accept,$/;"	f	module:cowboy_rest
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path(Dispatch, HostInfo, Path, Bindings) ->$/;"	f	module:cowboy_router
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path([], _, _, _) ->$/;"	f	module:cowboy_router
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path([{'_', [], Handler, Opts}|_Tail], HostInfo, _, Bindings) ->$/;"	f	module:cowboy_router
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path([{<<"*">>, _Constraints, Handler, Opts}|_Tail], HostInfo, <<"*">>, Bindings) ->$/;"	f	module:cowboy_router
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path([{PathMatch, Constraints, Handler, Opts}|Tail], HostInfo, Tokens,$/;"	f	module:cowboy_router
match_path	deps/cowboy/src/cowboy_router.erl	/^match_path(_Dispatch, _HostInfo, badrequest, _Bindings) ->$/;"	f	module:cowboy_router
match_same_bindings_test	deps/cowboy/src/cowboy_router.erl	/^match_same_bindings_test() ->$/;"	f	module:cowboy_router
match_test_	deps/cowboy/src/cowboy_router.erl	/^match_test_() ->$/;"	f	module:cowboy_router
maybe_add_vary	deps/plug/lib/plug/static.ex	/^  defp maybe_add_vary(conn, false) do$/;"	f
maybe_add_vary	deps/plug/lib/plug/static.ex	/^  defp maybe_add_vary(conn, true) do$/;"	f
maybe_created	deps/cowboy/src/cowboy_rest.erl	/^maybe_created(Req, State) ->$/;"	f	module:cowboy_rest
maybe_created	deps/cowboy/src/cowboy_rest.erl	/^maybe_created(Req, State=#state{method= <<"PUT">>}) ->$/;"	f	module:cowboy_rest
maybe_fetch_query_params	deps/plug/lib/plug/debugger.ex	/^  defp maybe_fetch_query_params(conn) do$/;"	f
maybe_fetch_session	deps/plug/lib/plug/debugger.ex	/^  defp maybe_fetch_session(conn) do$/;"	f
maybe_flush	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp maybe_flush() do$/;"	f
maybe_qparam	deps/cowboy/src/cowboy_http.erl	/^maybe_qparam(Data, Fun) ->$/;"	f	module:cowboy_http
maybe_reply	deps/cowboy/src/cowboy_req.erl	/^maybe_reply(Stacktrace, Req) ->$/;"	f	module:cowboy_req
maybe_secure_cookie	deps/plug/lib/plug/conn.ex	/^  defp maybe_secure_cookie(cookie, :https), do: Map.put_new(cookie, :secure, true)$/;"	f
maybe_secure_cookie	deps/plug/lib/plug/conn.ex	/^  defp maybe_secure_cookie(cookie, _),      do: cookie$/;"	f
maybe_send	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  defp maybe_send(%Plug.Conn{state: :set} = conn, _plug), do: Plug.Conn.send_resp(conn)$/;"	f
maybe_send	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  defp maybe_send(%Plug.Conn{state: :unset}, _plug),      do: raise Plug.Conn.NotSentError$/;"	f
maybe_send	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  defp maybe_send(%Plug.Conn{} = conn, _plug),            do: conn$/;"	f
maybe_send	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  defp maybe_send(other, plug) do$/;"	f
media_range	deps/cowboy/src/cowboy_http.erl	/^media_range(Data, Fun) ->$/;"	f	module:cowboy_http
media_range_list_test_	deps/cowboy/src/cowboy_http.erl	/^media_range_list_test_() ->$/;"	f	module:cowboy_http
media_range_param_attr	deps/cowboy/src/cowboy_http.erl	/^media_range_param_attr(Data, Fun, Type, SubType, Acc) ->$/;"	f	module:cowboy_http
media_range_param_value	deps/cowboy/src/cowboy_http.erl	/^media_range_param_value(Data, Fun, Type, SubType, Acc, <<"q">>) ->$/;"	f	module:cowboy_http
media_range_param_value	deps/cowboy/src/cowboy_http.erl	/^media_range_param_value(Data, Fun, Type, SubType, Acc, Attr) ->$/;"	f	module:cowboy_http
media_range_params	deps/cowboy/src/cowboy_http.erl	/^media_range_params(Data, Fun, Type, SubType, Acc) ->$/;"	f	module:cowboy_http
media_type	deps/cowboy/src/cowboy_http.erl	/^media_type(Data, Fun) ->$/;"	f	module:cowboy_http
media_type	deps/plug/lib/plug/conn/utils.ex	/^  def media_type(binary) do$/;"	f
merge_headers	deps/cowboy/src/cowboy_req.erl	/^merge_headers(Headers, []) ->$/;"	f	module:cowboy_req
merge_headers	deps/cowboy/src/cowboy_req.erl	/^merge_headers(Headers, [{<<"set-cookie">>, Value}|Tail]) ->$/;"	f	module:cowboy_req
merge_headers	deps/cowboy/src/cowboy_req.erl	/^merge_headers(Headers, [{Name, Value}|Tail]) ->$/;"	f	module:cowboy_req
merge_headers	deps/plug/lib/plug/conn.ex	/^  defp merge_headers(headers, cookies) do$/;"	f
merge_headers_test_	deps/cowboy/src/cowboy_req.erl	/^merge_headers_test_() ->$/;"	f	module:cowboy_req
merge_options	deps/ranch/src/ranch.erl	/^merge_options(Option, OptionList) ->$/;"	f	module:ranch
merge_options	deps/ranch/src/ranch.erl	/^merge_options({Key, _} = Option, OptionList) ->$/;"	f	module:ranch
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(%Conn{resp_headers: current} = conn, headers) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(%Conn{state: :sent}, _headers) do$/;"	f
merge_resp_headers	deps/plug/lib/plug/conn.ex	/^  def merge_resp_headers(conn, headers) when headers == %{} do$/;"	f
message	deps/maru/lib/maru/exceptions.ex	/^    def message(_e) do$/;"	f
message	deps/maru/lib/maru/exceptions.ex	/^    def message(e) do$/;"	f
message	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def message(%{kind: kind, reason: reason, stack: stack}) do$/;"	f
message	deps/plug/lib/plug/parsers.ex	/^    def message(exception) do$/;"	f
message	deps/poison/lib/poison/encoder.ex	/^  def message(%{message: message}) do$/;"	f
message	deps/poison/lib/poison/encoder.ex	/^  def message(%{value: value, message: nil}) do$/;"	f
messages	deps/cowboy/src/cowboy_spdy.erl	/^messages() ->$/;"	f	module:cowboy_spdy
messages	deps/ranch/src/ranch_ssl.erl	/^messages() -> {ssl, ssl_closed, ssl_error}.$/;"	f	module:ranch_ssl
messages	deps/ranch/src/ranch_tcp.erl	/^messages() -> {tcp, tcp_closed, tcp_error}.$/;"	f	module:ranch_tcp
meta	deps/cowboy/src/cowboy_req.erl	/^meta(Name, Req) ->$/;"	f	module:cowboy_req
meta	deps/cowboy/src/cowboy_req.erl	/^meta(Name, Req, Default) ->$/;"	f	module:cowboy_req
method	deps/cowboy/src/cowboy_req.erl	/^method(Req) ->$/;"	f	module:cowboy_req
method	deps/cowboy/src/cowboy_rest.erl	/^method(Req, State) ->$/;"	f	module:cowboy_rest
method	deps/cowboy/src/cowboy_rest.erl	/^method(Req, State=#state{method= <<"DELETE">>}) ->$/;"	f	module:cowboy_rest
method	deps/cowboy/src/cowboy_rest.erl	/^method(Req, State=#state{method= <<"PUT">>}) ->$/;"	f	module:cowboy_rest
method	deps/cowboy/src/cowboy_rest.erl	/^method(Req, State=#state{method=Method})$/;"	f	module:cowboy_rest
method	deps/plug/lib/plug/debugger.ex	/^  defp method(%Plug.Conn{method: method}), do:$/;"	f
method_match?	deps/maru/lib/maru/plugs/extend.ex	/^  defp method_match?(_m, :match) do$/;"	f
method_match?	deps/maru/lib/maru/plugs/extend.ex	/^  defp method_match?(m1, m2) do$/;"	f
method_not_allowed	deps/cowboy/src/cowboy_rest.erl	/^method_not_allowed(Req, State, Methods) ->$/;"	f	module:cowboy_rest
method_not_allowed	deps/cowboy/src/cowboy_rest.erl	/^method_not_allowed(Req, State, []) ->$/;"	f	module:cowboy_rest
mib_verbose	deps/cowboy/erlang.mk	/^mib_verbose = $(mib_verbose_$(V))$/;"	m
mib_verbose_0	deps/cowboy/erlang.mk	/^mib_verbose_0 = @echo " MIB   " $(filter %.bin %.mib,$(?F));$/;"	m
month	deps/cowboy/src/cowboy_clock.erl	/^month( 1) -> <<"Jan">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 2) -> <<"Feb">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 3) -> <<"Mar">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 4) -> <<"Apr">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 5) -> <<"May">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 6) -> <<"Jun">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 7) -> <<"Jul">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 8) -> <<"Aug">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month( 9) -> <<"Sep">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month(10) -> <<"Oct">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month(11) -> <<"Nov">>;$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_clock.erl	/^month(12) -> <<"Dec">>.$/;"	f	module:cowboy_clock
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Apr">>) -> 4;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Aug">>) -> 8;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Dec">>) -> 12;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Feb">>) -> 2;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Jan">>) -> 1;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Jul">>) -> 7;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Jun">>) -> 6;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Mar">>) -> 3;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"May">>) -> 5;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Nov">>) -> 11;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Oct">>) -> 10;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(<<"Sep">>) -> 9;$/;"	f	module:cowboy_http
month	deps/cowboy/src/cowboy_http.erl	/^month(_Any) -> {error, badarg}.$/;"	f	module:cowboy_http
month	deps/cowlib/src/cow_date.erl	/^month( 1) -> <<"Jan">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 2) -> <<"Feb">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 3) -> <<"Mar">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 4) -> <<"Apr">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 5) -> <<"May">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 6) -> <<"Jun">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 7) -> <<"Jul">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 8) -> <<"Aug">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month( 9) -> <<"Sep">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month(10) -> <<"Oct">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month(11) -> <<"Nov">>;$/;"	f	module:cow_date
month	deps/cowlib/src/cow_date.erl	/^month(12) -> <<"Dec">>.$/;"	f	module:cow_date
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(1),  do: "Jan"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(10), do: "Oct"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(11), do: "Nov"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(12), do: "Dec"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(2),  do: "Feb"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(3),  do: "Mar"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(4),  do: "Apr"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(5),  do: "May"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(6),  do: "Jun"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(7),  do: "Jul"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(8),  do: "Aug"$/;"	f
month_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp month_name(9),  do: "Sep"$/;"	f
mount	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro mount({_, _, mod}) do$/;"	a
moved_permanently	deps/cowboy/src/cowboy_rest.erl	/^moved_permanently(Req, State, OnFalse) ->$/;"	f	module:cowboy_rest
moved_temporarily	deps/cowboy/src/cowboy_rest.erl	/^moved_temporarily(Req, State) ->$/;"	f	module:cowboy_rest
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<?\/, t :: binary>>, acc) when acc != "",$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<h, t :: binary>>, acc) when h in @lower or h in @alpha or h == ?-,$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(<<h, t :: binary>>, acc) when h in @upper,$/;"	f
mt_first	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_first(_, _acc),$/;"	f
mt_params	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_params(t, first, second) do$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(<<h, t :: binary>>, acc, first) when h in @lower or h in @alpha or h in @other,$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(<<h, t :: binary>>, acc, first) when h in @upper,$/;"	f
mt_second	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_second(t, acc, first),$/;"	f
mt_wildcard	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_wildcard(<<?*, t :: binary>>, first),$/;"	f
mt_wildcard	deps/plug/lib/plug/conn/utils.ex	/^  defp mt_wildcard(t, first),$/;"	f
multiple_choices	deps/cowboy/src/cowboy_rest.erl	/^multiple_choices(Req, State) ->$/;"	f	module:cowboy_rest
name	deps/cowboy/src/cowboy_spdy.erl	/^name() ->$/;"	f	module:cowboy_spdy
name	deps/ranch/src/ranch_ssl.erl	/^name() -> ssl.$/;"	f	module:ranch_ssl
name	deps/ranch/src/ranch_tcp.erl	/^name() -> tcp.$/;"	f	module:ranch_tcp
new	deps/cowboy/src/cowboy_req.erl	/^new(Socket, Transport, Peer, Method, Path, Query,$/;"	f	module:cowboy_req
new_child	deps/cowboy/src/cowboy_spdy.erl	/^new_child(State=#state{children=Children}, StreamID, Pid, IsFin) ->$/;"	f	module:cowboy_spdy
newline	deps/cowboy/erlang.mk	/^define newline$/;"	m
next	deps/cowboy/src/cowboy_rest.erl	/^next(Req, State, Next) when is_function(Next) ->$/;"	f	module:cowboy_rest
next	deps/cowboy/src/cowboy_rest.erl	/^next(Req, State, StatusCode) when is_integer(StatusCode) ->$/;"	f	module:cowboy_rest
next_request	deps/cowboy/src/cowboy_protocol.erl	/^next_request(Req, State=#state{req_keepalive=Keepalive, timeout=Timeout},$/;"	f	module:cowboy_protocol
nonempty	deps/cowlib/src/cow_http_hd.erl	/^nonempty(L) when L =\/= [] -> L.$/;"	f	module:cow_http_hd
nonempty_charset_list_test_	deps/cowboy/src/cowboy_http.erl	/^nonempty_charset_list_test_() ->$/;"	f	module:cowboy_http
nonempty_language_range_list_test_	deps/cowboy/src/cowboy_http.erl	/^nonempty_language_range_list_test_() ->$/;"	f	module:cowboy_http
nonempty_list	deps/cowboy/src/cowboy_http.erl	/^nonempty_list(Data, Fun) ->$/;"	f	module:cowboy_http
nonempty_token_list_test_	deps/cowboy/src/cowboy_http.erl	/^nonempty_token_list_test_() ->$/;"	f	module:cowboy_http
normalize_content_types	deps/cowboy/src/cowboy_rest.erl	/^normalize_content_types(Normalized) ->$/;"	f	module:cowboy_rest
normalize_content_types	deps/cowboy/src/cowboy_rest.erl	/^normalize_content_types({ContentType, Callback})$/;"	f	module:cowboy_rest
normalize_cowboy_options	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp normalize_cowboy_options(cowboy_options, :http) do$/;"	f
normalize_cowboy_options	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp normalize_cowboy_options(cowboy_options, :https) do$/;"	f
normalize_method	deps/plug/lib/plug/router/utils.ex	/^  def normalize_method(method) do$/;"	f
normalize_ssl_file	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp normalize_ssl_file(key, cowboy_options) do$/;"	f
not_acceptable	deps/cowboy/src/cowboy_rest.erl	/^not_acceptable(Req, State) ->$/;"	f	module:cowboy_rest
not_found	deps/plug/lib/plug/static.ex	/^        def not_found(conn, _) do$/;"	f
not_modified	deps/cowboy/src/cowboy_rest.erl	/^not_modified(Req, State) ->$/;"	f	module:cowboy_rest
now	deps/plug/lib/plug/session/ets.ex	/^  defp now() do$/;"	f
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $0, R\/bits >>, Acc) -> number(R, Acc * 10);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $1, R\/bits >>, Acc) -> number(R, Acc * 10 + 1);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $2, R\/bits >>, Acc) -> number(R, Acc * 10 + 2);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $3, R\/bits >>, Acc) -> number(R, Acc * 10 + 3);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $4, R\/bits >>, Acc) -> number(R, Acc * 10 + 4);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $5, R\/bits >>, Acc) -> number(R, Acc * 10 + 5);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $6, R\/bits >>, Acc) -> number(R, Acc * 10 + 6);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $7, R\/bits >>, Acc) -> number(R, Acc * 10 + 7);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $8, R\/bits >>, Acc) -> number(R, Acc * 10 + 8);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $9, R\/bits >>, Acc) -> number(R, Acc * 10 + 9);$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $\\s, R\/bits >>, Acc) -> ws_end(R), Acc;$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<< $\\t, R\/bits >>, Acc) -> ws_end(R), Acc;$/;"	f	module:cow_http_hd
number	deps/cowlib/src/cow_http_hd.erl	/^number(<<>>, Acc) -> Acc.$/;"	f	module:cow_http_hd
number_complete	deps/poison/lib/poison/parser.ex	/^  defp number_complete(iolist, false) do$/;"	f
number_complete	deps/poison/lib/poison/parser.ex	/^  defp number_complete(iolist, true) do$/;"	f
number_digits	deps/poison/lib/poison/parser.ex	/^  defp number_digits(<<char>> <> rest = string) when char in '0123456789' do$/;"	f
number_digits	deps/poison/lib/poison/parser.ex	/^  defp number_digits(other), do: syntax_error(other)$/;"	f
number_digits_count	deps/poison/lib/poison/parser.ex	/^  defp number_digits_count(<<char>> <> rest, acc) when char in '0123456789' do$/;"	f
number_digits_count	deps/poison/lib/poison/parser.ex	/^  defp number_digits_count(_, acc), do: acc$/;"	f
number_exp	deps/poison/lib/poison/parser.ex	/^  defp number_exp(<<e>> <> rest, frac, acc) when e in 'eE' do$/;"	f
number_exp	deps/poison/lib/poison/parser.ex	/^  defp number_exp(string, frac, acc) do$/;"	f
number_exp_continue	deps/poison/lib/poison/parser.ex	/^  defp number_exp_continue(rest, acc) do$/;"	f
number_frac	deps/poison/lib/poison/parser.ex	/^  defp number_frac("." <> rest, acc) do$/;"	f
number_frac	deps/poison/lib/poison/parser.ex	/^  defp number_frac(string, acc) do$/;"	f
number_int	deps/poison/lib/poison/parser.ex	/^  defp number_int(<<char, _ :: binary>> = string, acc) when char in '123456789' do$/;"	f
number_int	deps/poison/lib/poison/parser.ex	/^  defp number_int(other, _), do: syntax_error(other)$/;"	f
number_start	deps/poison/lib/poison/parser.ex	/^  defp number_start("-" <> rest) do$/;"	f
number_start	deps/poison/lib/poison/parser.ex	/^  defp number_start("0" <> rest) do$/;"	f
number_start	deps/poison/lib/poison/parser.ex	/^  defp number_start(string) do$/;"	f
object_name	deps/poison/lib/poison/parser.ex	/^  defp object_name(name, :atoms!), do: String.to_existing_atom(name)$/;"	f
object_name	deps/poison/lib/poison/parser.ex	/^  defp object_name(name, :atoms),  do: String.to_atom(name)$/;"	f
object_name	deps/poison/lib/poison/parser.ex	/^  defp object_name(name, _keys),   do: name$/;"	f
object_pairs	deps/poison/lib/poison/parser.ex	/^  defp object_pairs("\\"" <> rest, keys, acc) do$/;"	f
object_pairs	deps/poison/lib/poison/parser.ex	/^  defp object_pairs("}" <> rest, _, []) do$/;"	f
object_pairs	deps/poison/lib/poison/parser.ex	/^  defp object_pairs(other, _, _), do: syntax_error(other)$/;"	f
offset	deps/poison/lib/poison/encoder.ex	/^      defp offset(options) do$/;"	f
offset	deps/poison/lib/poison/encoder.ex	/^      defp offset(options, value) do$/;"	f
onrequest	deps/cowboy/src/cowboy_protocol.erl	/^onrequest(Req, State=#state{onrequest=OnRequest}) ->$/;"	f	module:cowboy_protocol
onrequest	deps/cowboy/src/cowboy_protocol.erl	/^onrequest(Req, State=#state{onrequest=undefined}) ->$/;"	f	module:cowboy_protocol
opaque_tag	deps/cowboy/src/cowboy_http.erl	/^opaque_tag(Data, Fun, Strength) ->$/;"	f	module:cowboy_http
open_random_file	deps/plug/lib/plug/upload.ex	/^  defp open_random_file(_prefix, tmp, attempts, _pid, _ets, _paths) do$/;"	f
open_random_file	deps/plug/lib/plug/upload.ex	/^  defp open_random_file(prefix, tmp, attempts, pid, ets, paths) when attempts < @max_attempts do$/;"	f
optional	deps/maru/lib/maru/builder/params.ex	/^  defmacro optional(attr_name) do$/;"	a
optional	deps/maru/lib/maru/builder/params.ex	/^  defmacro optional(attr_name, [do: block]) do$/;"	a
optional	deps/maru/lib/maru/builder/params.ex	/^  defmacro optional(attr_name, options) do$/;"	a
optional	deps/maru/lib/maru/builder/params.ex	/^  defmacro optional(attr_name, options, [do: block]) do$/;"	a
options	deps/cowboy/src/cowboy_rest.erl	/^options(Req, State) ->$/;"	f	module:cowboy_rest
options	deps/cowboy/src/cowboy_rest.erl	/^options(Req, State=#state{allowed_methods=Methods, method= <<"OPTIONS">>}) ->$/;"	f	module:cowboy_rest
options	deps/plug/lib/plug/router.ex	/^  defmacro options(path, options, contents \\\\ []) do$/;"	a
otp_app	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp otp_app(cowboy_options) do$/;"	f
override_method	deps/plug/lib/plug/method_override.ex	/^  defp override_method(conn, %Plug.Conn.Unfetched{}) do$/;"	f
override_method	deps/plug/lib/plug/method_override.ex	/^  defp override_method(conn, body_params) do$/;"	f
package	deps/maru/mix.exs	/^  defp package do$/;"	f
package	deps/plug/mix.exs	/^  defp package do$/;"	f
package	deps/poison/mix.exs	/^  defp package do$/;"	f
pad	deps/plug/lib/plug/conn/cookies.ex	/^  defp pad(number) when number in 0..9, do: <<?0, ?0 + number>>$/;"	f
pad	deps/plug/lib/plug/conn/cookies.ex	/^  defp pad(number), do: Integer.to_string(number)$/;"	f
pad_int	deps/cowboy/src/cowboy_clock.erl	/^pad_int(X) ->$/;"	f	module:cowboy_clock
pad_int	deps/cowboy/src/cowboy_clock.erl	/^pad_int(X) when X < 10 ->$/;"	f	module:cowboy_clock
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 0) -> <<"00">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 1) -> <<"01">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 2) -> <<"02">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 3) -> <<"03">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 4) -> <<"04">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 5) -> <<"05">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 6) -> <<"06">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 7) -> <<"07">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 8) -> <<"08">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int( 9) -> <<"09">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(10) -> <<"10">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(11) -> <<"11">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(12) -> <<"12">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(13) -> <<"13">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(14) -> <<"14">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(15) -> <<"15">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(16) -> <<"16">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(17) -> <<"17">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(18) -> <<"18">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(19) -> <<"19">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(20) -> <<"20">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(21) -> <<"21">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(22) -> <<"22">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(23) -> <<"23">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(24) -> <<"24">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(25) -> <<"25">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(26) -> <<"26">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(27) -> <<"27">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(28) -> <<"28">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(29) -> <<"29">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(30) -> <<"30">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(31) -> <<"31">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(32) -> <<"32">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(33) -> <<"33">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(34) -> <<"34">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(35) -> <<"35">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(36) -> <<"36">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(37) -> <<"37">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(38) -> <<"38">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(39) -> <<"39">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(40) -> <<"40">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(41) -> <<"41">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(42) -> <<"42">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(43) -> <<"43">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(44) -> <<"44">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(45) -> <<"45">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(46) -> <<"46">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(47) -> <<"47">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(48) -> <<"48">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(49) -> <<"49">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(50) -> <<"50">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(51) -> <<"51">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(52) -> <<"52">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(53) -> <<"53">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(54) -> <<"54">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(55) -> <<"55">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(56) -> <<"56">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(57) -> <<"57">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(58) -> <<"58">>;$/;"	f	module:cow_date
pad_int	deps/cowlib/src/cow_date.erl	/^pad_int(59) -> <<"59">>.$/;"	f	module:cow_date
pad_int_test_	deps/cowboy/src/cowboy_clock.erl	/^pad_int_test_() ->$/;"	f	module:cowboy_clock
pad_message	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  defp pad_message(msg) do$/;"	f
param	deps/cowboy/src/cowboy_http.erl	/^param(Data, Fun) ->$/;"	f	module:cowboy_http
param	deps/maru/lib/maru/builder/params.ex	/^  defp param(attr_name, options, [required: required, nested: nested]) do$/;"	f
parameterized_tokens	deps/cowboy/src/cowboy_http.erl	/^parameterized_tokens(Data) ->$/;"	f	module:cowboy_http
parameterized_tokens_param	deps/cowboy/src/cowboy_http.erl	/^parameterized_tokens_param(Data, Fun) ->$/;"	f	module:cowboy_http
parameterized_tokens_params	deps/cowboy/src/cowboy_http.erl	/^parameterized_tokens_params(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
parameterized_tokens_test_	deps/cowboy/src/cowboy_http.erl	/^parameterized_tokens_test_() ->$/;"	f	module:cowboy_http
params	deps/cowboy/src/cowboy_http.erl	/^params(Data, Fun) ->$/;"	f	module:cowboy_http
params	deps/cowboy/src/cowboy_http.erl	/^params(Data, Fun, Acc) ->$/;"	f	module:cowboy_http
params	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro params(block) do$/;"	a
params	deps/maru/lib/maru/helpers/params.ex	/^  defmacro params(name, [do: block]) do$/;"	a
params	deps/plug/lib/plug/conn/utils.ex	/^  def params(t) do$/;"	f
params	deps/plug/lib/plug/conn/utils.ex	/^  defp params(param, acc) do$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<>>, _acc),$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<?=, t :: binary>>, acc) when acc != "",$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<h, _ :: binary>>, _acc) when h in @specials or h in @space or h < 32 or h === 127,$/;"	f
params_key	deps/plug/lib/plug/conn/utils.ex	/^  defp params_key(<<h, t :: binary>>, acc),$/;"	f
params_value	deps/plug/lib/plug/conn/utils.ex	/^  defp params_value(token, key) do$/;"	f
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 0:1, StreamID:31, 0:7, IsFinFlag:1, _:24, Data\/bits >>, _) ->$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 1:16, 0:6, IsUnidirectionalFlag:1, IsFinFlag:1,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 2:16, 0:7, IsFinFlag:1, _:25,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 3:16, 0:8, _:25, StreamID:31, StatusCode:32 >>, _) ->$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 3:16, 0:8, _:56, StatusCode:32 >>, _)$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 4:16, 0:7, ClearSettingsFlag:1, _:24,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 6:16, 0:8, _:24, PingID:32 >>, _) ->$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 7:16, 0:8, _:25, LastGoodStreamID:31,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 7:16, 0:8, _:56, StatusCode:32 >>, _)$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 8:16, 0:7, IsFinFlag:1, _:25, StreamID:31,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 9:16, 0:8, _:25, StreamID:31,$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(<< 1:1, 3:15, 9:16, 0:8, _:57, 0:31 >>, _) ->$/;"	f	module:cow_spdy
parse	deps/cowlib/src/cow_spdy.erl	/^parse(_, _) ->$/;"	f	module:cow_spdy
parse	deps/plug/lib/plug/parsers.ex	/^  defcallback parse(Conn.t, type :: binary, subtype :: binary,$/;"	c
parse	deps/plug/lib/plug/parsers/json.ex	/^  def parse(conn, "application", subtype, _headers, opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/json.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/multipart.ex	/^  def parse(conn, "multipart", subtype, _headers, opts) when subtype in ["form-data", "mixed"] do$/;"	f
parse	deps/plug/lib/plug/parsers/multipart.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/urlencoded.ex	/^  def parse(conn, "application", "x-www-form-urlencoded", _headers, opts) do$/;"	f
parse	deps/plug/lib/plug/parsers/urlencoded.ex	/^  def parse(conn, _type, _subtype, _headers, _opts) do$/;"	f
parse	deps/poison/lib/poison/parser.ex	/^  def parse(iodata, options \\\\ []) do$/;"	f
parse!	deps/poison/lib/poison/parser.ex	/^  def parse!(iodata, options \\\\ []) do$/;"	f
parse_before_param	deps/cowlib/src/cow_multipart.erl	/^parse_before_param(<< C, Rest\/bits >>, Params) ->$/;"	f	module:cow_multipart
parse_before_param	deps/cowlib/src/cow_multipart.erl	/^parse_before_param(<<>>, Params) ->$/;"	f	module:cow_multipart
parse_body	deps/cowlib/src/cow_multipart.erl	/^parse_body(Stream, Boundary) ->$/;"	f	module:cow_multipart
parse_cd_type	deps/cowlib/src/cow_multipart.erl	/^parse_cd_type(<< C, Rest\/bits >>, Acc) ->$/;"	f	module:cow_multipart
parse_cd_type	deps/cowlib/src/cow_multipart.erl	/^parse_cd_type(<<>>, Acc) ->$/;"	f	module:cow_multipart
parse_connection	deps/cowlib/src/cow_http_hd.erl	/^parse_connection(<<"close">>) ->$/;"	f	module:cow_http_hd
parse_connection	deps/cowlib/src/cow_http_hd.erl	/^parse_connection(<<"keep-alive">>) ->$/;"	f	module:cow_http_hd
parse_connection	deps/cowlib/src/cow_http_hd.erl	/^parse_connection(Connection) ->$/;"	f	module:cow_http_hd
parse_connection_test_	deps/cowlib/src/cow_http_hd.erl	/^parse_connection_test_() ->$/;"	f	module:cow_http_hd
parse_content_disposition	deps/cowlib/src/cow_multipart.erl	/^parse_content_disposition(Bin) ->$/;"	f	module:cow_multipart
parse_content_disposition_test_	deps/cowlib/src/cow_multipart.erl	/^parse_content_disposition_test_() ->$/;"	f	module:cow_multipart
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $0 >>) -> 0;$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $0, R\/bits >>) -> number(R, 0);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $1, R\/bits >>) -> number(R, 1);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $2, R\/bits >>) -> number(R, 2);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $3, R\/bits >>) -> number(R, 3);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $4, R\/bits >>) -> number(R, 4);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $5, R\/bits >>) -> number(R, 5);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $6, R\/bits >>) -> number(R, 6);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $7, R\/bits >>) -> number(R, 7);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $8, R\/bits >>) -> number(R, 8);$/;"	f	module:cow_http_hd
parse_content_length	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length(<< $9, R\/bits >>) -> number(R, 9).$/;"	f	module:cow_http_hd
parse_content_length_test_	deps/cowlib/src/cow_http_hd.erl	/^parse_content_length_test_() ->$/;"	f	module:cow_http_hd
parse_content_transfer_encoding	deps/cowlib/src/cow_multipart.erl	/^parse_content_transfer_encoding(Bin) ->$/;"	f	module:cow_multipart
parse_content_transfer_encoding_test_	deps/cowlib/src/cow_multipart.erl	/^parse_content_transfer_encoding_test_() ->$/;"	f	module:cow_multipart
parse_content_type	deps/cowlib/src/cow_multipart.erl	/^parse_content_type(Bin) ->$/;"	f	module:cow_multipart
parse_content_type_test_	deps/cowlib/src/cow_multipart.erl	/^parse_content_type_test_() ->$/;"	f	module:cow_multipart
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<< $$, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<< $,, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<< $;, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<< $\\s, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<< $\\t, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(<<>>, Acc) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(Cookie) ->$/;"	f	module:cow_cookie
parse_cookie	deps/cowlib/src/cow_cookie.erl	/^parse_cookie(Cookie, Acc) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $,, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $;, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $=, Rest\/binary >>, Acc, Name) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $=, _\/binary >>, _, <<>>) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\013, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\014, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\n, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\r, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\s, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< $\\t, _\/binary >>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<< C, Rest\/binary >>, Acc, Name) ->$/;"	f	module:cow_cookie
parse_cookie_name	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_name(<<>>, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_test_	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_test_() ->$/;"	f	module:cow_cookie
parse_cookie_trim	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_trim(Value = <<>>) ->$/;"	f	module:cow_cookie
parse_cookie_trim	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_trim(Value) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $;, Rest\/binary >>, Acc, Name, Value) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $\\013, _\/binary >>, _, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $\\014, _\/binary >>, _, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $\\n, _\/binary >>, _, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $\\r, _\/binary >>, _, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< $\\t, _\/binary >>, _, _, _) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<< C, Rest\/binary >>, Acc, Name, Value) ->$/;"	f	module:cow_cookie
parse_cookie_value	deps/cowlib/src/cow_cookie.erl	/^parse_cookie_value(<<>>, Acc, Name, Value) ->$/;"	f	module:cow_cookie
parse_ct_subtype	deps/cowlib/src/cow_multipart.erl	/^parse_ct_subtype(<< C, Rest\/bits >>, Type, Acc) ->$/;"	f	module:cow_multipart
parse_ct_subtype	deps/cowlib/src/cow_multipart.erl	/^parse_ct_subtype(<<>>, Type, Subtype) when Subtype =\/= <<>> ->$/;"	f	module:cow_multipart
parse_ct_type	deps/cowlib/src/cow_multipart.erl	/^parse_ct_type(<< C, Rest\/bits >>, Acc) ->$/;"	f	module:cow_multipart
parse_epilogue_crlf_test	deps/cowlib/src/cow_multipart.erl	/^parse_epilogue_crlf_test() ->$/;"	f	module:cow_multipart
parse_epilogue_test	deps/cowlib/src/cow_multipart.erl	/^parse_epilogue_test() ->$/;"	f	module:cow_multipart
parse_frame	deps/cowboy/src/cowboy_spdy.erl	/^parse_frame(State=#state{zinf=Zinf}, Data) ->$/;"	f	module:cowboy_spdy
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(<< $:, Rest\/bits >>, false, Acc) ->$/;"	f	module:cow_http
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(<< $[, Rest\/bits >>, false, <<>>) ->$/;"	f	module:cow_http
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(<< $], Rest\/bits >>, true, Acc) ->$/;"	f	module:cow_http
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(<< C, Rest\/bits >>, E, Acc) ->$/;"	f	module:cow_http
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(<<>>, false, Acc) ->$/;"	f	module:cow_http
parse_fullhost	deps/cowlib/src/cow_http.erl	/^parse_fullhost(Fullhost) ->$/;"	f	module:cow_http
parse_fullhost_test	deps/cowlib/src/cow_http.erl	/^parse_fullhost_test() ->$/;"	f	module:cow_http
parse_fullpath	deps/cowlib/src/cow_http.erl	/^parse_fullpath(<< $?, Qs\/binary >>, Path) ->$/;"	f	module:cow_http
parse_fullpath	deps/cowlib/src/cow_http.erl	/^parse_fullpath(<< C, Rest\/binary >>, SoFar) ->$/;"	f	module:cow_http
parse_fullpath	deps/cowlib/src/cow_http.erl	/^parse_fullpath(<<>>, Path) ->$/;"	f	module:cow_http
parse_fullpath	deps/cowlib/src/cow_http.erl	/^parse_fullpath(Fullpath) ->$/;"	f	module:cow_http
parse_fullpath_test	deps/cowlib/src/cow_http.erl	/^parse_fullpath_test() ->$/;"	f	module:cow_http
parse_hd_before_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_before_value(<< $\\s, Rest\/bits >>, S, M, P, Q, V, H, N) ->$/;"	f	module:cowboy_protocol
parse_hd_before_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_before_value(<< $\\t, Rest\/bits >>, S, M, P, Q, V, H, N) ->$/;"	f	module:cowboy_protocol
parse_hd_before_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_before_value(Buffer, State=#state{$/;"	f	module:cowboy_protocol
parse_hd_before_value	deps/cowlib/src/cow_http.erl	/^parse_hd_before_value(<< $\\s, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_http
parse_hd_before_value	deps/cowlib/src/cow_http.erl	/^parse_hd_before_value(<< $\\t, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_http
parse_hd_before_value	deps/cowlib/src/cow_http.erl	/^parse_hd_before_value(Data, Acc, Name) ->$/;"	f	module:cow_http
parse_hd_before_value	deps/cowlib/src/cow_multipart.erl	/^parse_hd_before_value(<< $\\s, Rest\/bits >>, H, N) ->$/;"	f	module:cow_multipart
parse_hd_before_value	deps/cowlib/src/cow_multipart.erl	/^parse_hd_before_value(<< $\\t, Rest\/bits >>, H, N) ->$/;"	f	module:cow_multipart
parse_hd_before_value	deps/cowlib/src/cow_multipart.erl	/^parse_hd_before_value(Buffer, H, N) ->$/;"	f	module:cow_multipart
parse_hd_name	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_name(<< C, Rest\/bits >>, S, M, P, Q, V, H, SoFar) ->$/;"	f	module:cowboy_protocol
parse_hd_name	deps/cowlib/src/cow_http.erl	/^parse_hd_name(<< C, Rest\/bits >>, Acc, SoFar) ->$/;"	f	module:cow_http
parse_hd_name	deps/cowlib/src/cow_multipart.erl	/^parse_hd_name(<< C, Rest\/bits >>, H, SoFar) ->$/;"	f	module:cow_multipart
parse_hd_name_ws	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_name_ws(<< C, Rest\/bits >>, S, M, P, Q, V, H, Name) ->$/;"	f	module:cowboy_protocol
parse_hd_name_ws	deps/cowlib/src/cow_http.erl	/^parse_hd_name_ws(<< C, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_http
parse_hd_name_ws	deps/cowlib/src/cow_multipart.erl	/^parse_hd_name_ws(<< C, Rest\/bits >>, H, Name) ->$/;"	f	module:cow_multipart
parse_hd_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_value(<< $\\r, Rest\/bits >>, S, M, P, Q, V, Headers, Name, SoFar) ->$/;"	f	module:cowboy_protocol
parse_hd_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_value(<< C, Rest\/bits >>, S, M, P, Q, V, H, N, SoFar) ->$/;"	f	module:cowboy_protocol
parse_hd_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_value(<<>>, S, M, P, Q, V, H, N, SoFar) ->$/;"	f	module:cowboy_protocol
parse_hd_value	deps/cowboy/src/cowboy_protocol.erl	/^parse_hd_value(<<>>, State=#state{max_header_value_length=MaxLength},$/;"	f	module:cowboy_protocol
parse_hd_value	deps/cowlib/src/cow_http.erl	/^parse_hd_value(<< $\\r, Rest\/bits >>, Acc, Name, SoFar) ->$/;"	f	module:cow_http
parse_hd_value	deps/cowlib/src/cow_http.erl	/^parse_hd_value(<< C, Rest\/bits >>, Acc, Name, SoFar) ->$/;"	f	module:cow_http
parse_hd_value	deps/cowlib/src/cow_multipart.erl	/^parse_hd_value(<< $\\r, Rest\/bits >>, Headers, Name, SoFar) ->$/;"	f	module:cow_multipart
parse_hd_value	deps/cowlib/src/cow_multipart.erl	/^parse_hd_value(<< C, Rest\/bits >>, H, N, SoFar) ->$/;"	f	module:cow_multipart
parse_header	deps/cowboy/src/cowboy_protocol.erl	/^parse_header(<< $\\r, $\\n, Rest\/bits >>, S, M, P, Q, V, Headers) ->$/;"	f	module:cowboy_protocol
parse_header	deps/cowboy/src/cowboy_protocol.erl	/^parse_header(Buffer, State=#state{max_header_name_length=MaxLength},$/;"	f	module:cowboy_protocol
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"accept">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"accept-charset">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"accept-encoding">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"accept-language">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"authorization">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"content-length">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"content-type">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"cookie">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"expect">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"range">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"sec-websocket-extensions">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"transfer-encoding">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name = <<"upgrade">>, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name, Req, Default) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name, Req, Default)$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name, Req=#http_req{p_headers=PHeaders}) ->$/;"	f	module:cowboy_req
parse_header	deps/cowboy/src/cowboy_req.erl	/^parse_header(Name, Req=#http_req{p_headers=PHeaders}, Default, Fun) ->$/;"	f	module:cowboy_req
parse_header	deps/cowlib/src/cow_http.erl	/^parse_header(<< $\\r, $\\n, Rest\/bits >>, Acc) ->$/;"	f	module:cow_http
parse_header	deps/cowlib/src/cow_http.erl	/^parse_header(Data, Acc) ->$/;"	f	module:cow_http
parse_header_default	deps/cowboy/src/cowboy_req.erl	/^parse_header_default(<<"transfer-encoding">>) -> [<<"identity">>];$/;"	f	module:cowboy_req
parse_header_default	deps/cowboy/src/cowboy_req.erl	/^parse_header_default(_Name) -> undefined.$/;"	f	module:cowboy_req
parse_headers	deps/cowlib/src/cow_http.erl	/^parse_headers(Data) ->$/;"	f	module:cow_http
parse_headers	deps/cowlib/src/cow_multipart.erl	/^parse_headers(<< "--", Stream\/bits >>, Boundary) ->$/;"	f	module:cow_multipart
parse_headers	deps/cowlib/src/cow_multipart.erl	/^parse_headers(Stream, Boundary) ->$/;"	f	module:cow_multipart
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(<< 0:32, _\/bits >>, _, _, _) ->$/;"	f	module:cow_spdy
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(<< L1:32, Key:L1\/binary, L2:32, Value:L2\/binary, Rest\/bits >>,$/;"	f	module:cow_spdy
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(<<>>, 0, Headers, SpHeaders) ->$/;"	f	module:cow_spdy
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(<<>>, _, _, _) ->$/;"	f	module:cow_spdy
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(Data, Zinf) ->$/;"	f	module:cow_spdy
parse_headers	deps/cowlib/src/cow_spdy.erl	/^parse_headers(_, 0, _, _) ->$/;"	f	module:cow_spdy
parse_headers_error_test_	deps/cowlib/src/cow_http.erl	/^parse_headers_error_test_() ->$/;"	f	module:cow_http
parse_headers_test_	deps/cowlib/src/cow_http.erl	/^parse_headers_test_() ->$/;"	f	module:cow_http
parse_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_host(<< $:, Rest\/bits >>, false, Acc) ->$/;"	f	module:cowboy_protocol
parse_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_host(<< $[, Rest\/bits >>, false, <<>>) ->$/;"	f	module:cowboy_protocol
parse_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_host(<< $], Rest\/bits >>, true, Acc) ->$/;"	f	module:cowboy_protocol
parse_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_host(<< C, Rest\/bits >>, E, Acc) ->$/;"	f	module:cowboy_protocol
parse_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_host(<<>>, false, Acc) ->$/;"	f	module:cowboy_protocol
parse_interleaved_test	deps/cowlib/src/cow_multipart.erl	/^parse_interleaved_test() ->$/;"	f	module:cow_multipart
parse_method	deps/cowboy/src/cowboy_protocol.erl	/^parse_method(<< C, Rest\/bits >>, State, SoFar) ->$/;"	f	module:cowboy_protocol
parse_multipart	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart({:done, req}, limit, _opts, acc, _callback) do$/;"	f
parse_multipart	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart({:ok, _headers, req}, limit, _opts, acc, _callback) do$/;"	f
parse_multipart	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart({:ok, headers, req}, limit, opts, acc, callback) when limit >= 0 do$/;"	f
parse_multipart_body	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_body({:more, _tail, req}, limit, _opts, body) do$/;"	f
parse_multipart_body	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_body({:more, tail, req}, limit, opts, body) when limit >= 0 do$/;"	f
parse_multipart_body	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_body({:ok, _tail, req}, limit, _opts, body) do$/;"	f
parse_multipart_body	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_body({:ok, tail, req}, limit, _opts, body) when limit >= byte_size(tail) do$/;"	f
parse_multipart_file	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_file({:more, _tail, req}, limit, _opts, _file) do$/;"	f
parse_multipart_file	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_file({:more, tail, req}, limit, opts, file) when limit >= 0 do$/;"	f
parse_multipart_file	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_file({:ok, _tail, req}, limit, _opts, _file) do$/;"	f
parse_multipart_file	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp parse_multipart_file({:ok, tail, req}, limit, _opts, file) when limit >= byte_size(tail) do$/;"	f
parse_param_name	deps/cowlib/src/cow_multipart.erl	/^parse_param_name(<< C, Rest\/bits >>, Params, Acc) ->$/;"	f	module:cow_multipart
parse_param_name	deps/cowlib/src/cow_multipart.erl	/^parse_param_name(<<>>, Params, Acc) ->$/;"	f	module:cow_multipart
parse_param_quoted_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_quoted_value(<< $", Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:cow_multipart
parse_param_quoted_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_quoted_value(<< $\\\\, C, Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:cow_multipart
parse_param_quoted_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_quoted_value(<< C, Rest\/bits >>, Params, Name, Acc)$/;"	f	module:cow_multipart
parse_param_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_value(<< C, Rest\/bits >>, Params, Name) ->$/;"	f	module:cow_multipart
parse_param_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_value(<< C, Rest\/bits >>, Params, Name, Acc) ->$/;"	f	module:cow_multipart
parse_param_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_value(<<>>, Params, Name) ->$/;"	f	module:cow_multipart
parse_param_value	deps/cowlib/src/cow_multipart.erl	/^parse_param_value(<<>>, Params, Name, Acc) ->$/;"	f	module:cow_multipart
parse_params	deps/maru/lib/maru/router/path.ex	/^  def parse_params(conn_path_info, route_path) do$/;"	f
parse_partial_test	deps/cowlib/src/cow_multipart.erl	/^parse_partial_test() ->$/;"	f	module:cow_multipart
parse_qs	deps/cowlib/src/cow_qs.erl	/^parse_qs(B) ->$/;"	f	module:cow_qs
parse_qs_identity_test_	deps/cowlib/src/cow_qs.erl	/^parse_qs_identity_test_() ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<< $%, H, L, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<< $&, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<< $+, Rest\/bits >>, Acc, Name) ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<< $=, Rest\/bits >>, Acc, Name) when Name =\/= <<>> ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<< C, Rest\/bits >>, Acc, Name) when C =\/= $%, C =\/= $= ->$/;"	f	module:cow_qs
parse_qs_name	deps/cowlib/src/cow_qs.erl	/^parse_qs_name(<<>>, Acc, Name) ->$/;"	f	module:cow_qs
parse_qs_test_	deps/cowlib/src/cow_qs.erl	/^parse_qs_test_() ->$/;"	f	module:cow_qs
parse_qs_value	deps/cowlib/src/cow_qs.erl	/^parse_qs_value(<< $%, H, L, Rest\/bits >>, Acc, Name, Value) ->$/;"	f	module:cow_qs
parse_qs_value	deps/cowlib/src/cow_qs.erl	/^parse_qs_value(<< $&, Rest\/bits >>, Acc, Name, Value) ->$/;"	f	module:cow_qs
parse_qs_value	deps/cowlib/src/cow_qs.erl	/^parse_qs_value(<< $+, Rest\/bits >>, Acc, Name, Value) ->$/;"	f	module:cow_qs
parse_qs_value	deps/cowlib/src/cow_qs.erl	/^parse_qs_value(<< C, Rest\/bits >>, Acc, Name, Value) when C =\/= $% ->$/;"	f	module:cow_qs
parse_qs_value	deps/cowlib/src/cow_qs.erl	/^parse_qs_value(<<>>, Acc, Name, Value) ->$/;"	f	module:cow_qs
parse_req_multipart	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def parse_req_multipart(req, opts, callback) do$/;"	f
parse_req_multipart	deps/plug/lib/plug/adapters/test/conn.ex	/^  def parse_req_multipart(%{params: multipart} = state, _limit, _callback) do$/;"	f
parse_req_multipart	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback parse_req_multipart(payload, options :: Keyword.t, fun) ::$/;"	c
parse_request	deps/cowboy/src/cowboy_protocol.erl	/^parse_request(<< $\\n, _\/binary >>, State, _) ->$/;"	f	module:cowboy_protocol
parse_request	deps/cowboy/src/cowboy_protocol.erl	/^parse_request(Buffer, State=#state{max_request_line_length=MaxLength,$/;"	f	module:cowboy_protocol
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< "HTTP\/1.0 ", Status\/bits >>) ->$/;"	f	module:cow_http
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< "HTTP\/1.1 ", Status\/bits >>) ->$/;"	f	module:cow_http
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< "HTTP\/1.1 200 OK\\r\\n", Rest\/bits >>) ->$/;"	f	module:cow_http
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< "HTTP\/1.1 404 Not Found\\r\\n", Rest\/bits >>) ->$/;"	f	module:cow_http
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< "HTTP\/1.1 500 Internal Server Error\\r\\n", Rest\/bits >>) ->$/;"	f	module:cow_http
parse_status_line	deps/cowlib/src/cow_http.erl	/^parse_status_line(<< H, T, U, " ", Rest\/bits >>, Version)$/;"	f	module:cow_http
parse_status_line_error_test_	deps/cowlib/src/cow_http.erl	/^parse_status_line_error_test_() ->$/;"	f	module:cow_http
parse_status_line_test_	deps/cowlib/src/cow_http.erl	/^parse_status_line_test_() ->$/;"	f	module:cow_http
parse_test	deps/cowlib/src/cow_multipart.erl	/^parse_test() ->$/;"	f	module:cow_multipart
parse_transfer_encoding	deps/cowlib/src/cow_http_hd.erl	/^parse_transfer_encoding(<<"chunked">>) ->$/;"	f	module:cow_http_hd
parse_transfer_encoding	deps/cowlib/src/cow_http_hd.erl	/^parse_transfer_encoding(TransferEncoding) ->$/;"	f	module:cow_http_hd
parse_transfer_encoding_error_test_	deps/cowlib/src/cow_http_hd.erl	/^parse_transfer_encoding_error_test_() ->$/;"	f	module:cow_http_hd
parse_transfer_encoding_test_	deps/cowlib/src/cow_http_hd.erl	/^parse_transfer_encoding_test_() ->$/;"	f	module:cow_http_hd
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< "* ", Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< "HTTP:\/\/", Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< "HTTPS:\/\/", Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< "http:\/\/", Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< "https:\/\/", Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(<< $\\r, _\/bits >>, State, _) ->$/;"	f	module:cowboy_protocol
parse_uri	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri(Buffer, State, Method) ->$/;"	f	module:cowboy_protocol
parse_uri_path	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri_path(<< C, Rest\/bits >>, State, Method, SoFar) ->$/;"	f	module:cowboy_protocol
parse_uri_query	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri_query(<< C, Rest\/bits >>, S, M, P, SoFar) ->$/;"	f	module:cowboy_protocol
parse_uri_skip_host	deps/cowboy/src/cowboy_protocol.erl	/^parse_uri_skip_host(<< C, Rest\/bits >>, State, Method) ->$/;"	f	module:cowboy_protocol
parse_version	deps/cowboy/src/cowboy_protocol.erl	/^parse_version(<< "HTTP\/1.0\\r\\n", Rest\/bits >>, S, M, P, Q) ->$/;"	f	module:cowboy_protocol
parse_version	deps/cowboy/src/cowboy_protocol.erl	/^parse_version(<< "HTTP\/1.1\\r\\n", Rest\/bits >>, S, M, P, Q) ->$/;"	f	module:cowboy_protocol
parse_version	deps/cowboy/src/cowboy_protocol.erl	/^parse_version(_, State, _, _, _) ->$/;"	f	module:cowboy_protocol
parse_version	deps/cowlib/src/cow_http.erl	/^parse_version(<<"HTTP\/1.0">>) -> 'HTTP\/1.0'.$/;"	f	module:cow_http
parse_version	deps/cowlib/src/cow_http.erl	/^parse_version(<<"HTTP\/1.1">>) -> 'HTTP\/1.1';$/;"	f	module:cow_http
parse_version_test	deps/cowlib/src/cow_http.erl	/^parse_version_test() ->$/;"	f	module:cow_http
part	deps/cowboy/src/cowboy_req.erl	/^part(Buffer, Opts, Req=#http_req{multipart={Boundary, _}}) ->$/;"	f	module:cowboy_req
part	deps/cowboy/src/cowboy_req.erl	/^part(Req) ->$/;"	f	module:cowboy_req
part	deps/cowboy/src/cowboy_req.erl	/^part(Req, Opts) ->$/;"	f	module:cowboy_req
part	deps/cowboy/src/cowboy_req.erl	/^part(Req=#http_req{multipart=undefined}, Opts) ->$/;"	f	module:cowboy_req
part	deps/cowlib/src/cow_multipart.erl	/^part(Boundary, Headers) ->$/;"	f	module:cow_multipart
part_body	deps/cowboy/src/cowboy_req.erl	/^part_body(Buffer, Opts, Req=#http_req{multipart={Boundary, _}}, Acc) ->$/;"	f	module:cowboy_req
part_body	deps/cowboy/src/cowboy_req.erl	/^part_body(Req) ->$/;"	f	module:cowboy_req
part_body	deps/cowboy/src/cowboy_req.erl	/^part_body(Req, Opts) ->$/;"	f	module:cowboy_req
part_body	deps/cowboy/src/cowboy_req.erl	/^part_body(Req=#http_req{multipart=undefined}, Opts) ->$/;"	f	module:cowboy_req
patch	deps/plug/lib/plug/router.ex	/^  defmacro patch(path, options, contents \\\\ []) do$/;"	a
path	deps/cowboy/src/cowboy_req.erl	/^path(Req) ->$/;"	f	module:cowboy_req
path	deps/plug/lib/plug/mime.ex	/^  def path(path) do$/;"	f
path	deps/plug/lib/plug/static.ex	/^  defp path(from, segments),$/;"	f
path	deps/plug/lib/plug/static.ex	/^  defp path({app, from}, segments) when is_atom(app) and is_binary(from),$/;"	f
path	deps/plug/lib/plug/upload.ex	/^  defp path(prefix, tmp) do$/;"	f
path_info	deps/cowboy/src/cowboy_req.erl	/^path_info(Req) ->$/;"	f	module:cowboy_req
path_match?	deps/maru/lib/maru/plugs/extend.ex	/^  defp path_match?(p1, p2) do$/;"	f
path_to_iodata	deps/plug/lib/plug/adapters/translator.ex	/^  defp path_to_iodata(path, ""), do: path$/;"	f
path_to_iodata	deps/plug/lib/plug/adapters/translator.ex	/^  defp path_to_iodata(path, qs), do: [path, ??, qs]$/;"	f
payload_length_to_binary	deps/cowboy/src/cowboy_websocket.erl	/^payload_length_to_binary(N) ->$/;"	f	module:cowboy_websocket
peer	deps/cowboy/src/cowboy_req.erl	/^peer(Req) ->$/;"	f	module:cowboy_req
peer	deps/plug/lib/plug/debugger.ex	/^  defp peer(%Plug.Conn{peer: {host, port}}), do:$/;"	f
peername	deps/ranch/src/ranch_ssl.erl	/^peername(Socket) ->$/;"	f	module:ranch_ssl
peername	deps/ranch/src/ranch_tcp.erl	/^peername(Socket) ->$/;"	f	module:ranch_tcp
perf_build_multipart	deps/cowlib/src/cow_multipart.erl	/^perf_build_multipart() ->$/;"	f	module:cow_multipart
perf_parse_multipart	deps/cowlib/src/cow_multipart.erl	/^perf_parse_multipart(Stream, Boundary) ->$/;"	f	module:cow_multipart
ping	deps/cowlib/src/cow_spdy.erl	/^ping(PingID) ->$/;"	f	module:cow_spdy
pkg_aberth_commit	deps/cowboy/erlang.mk	/^pkg_aberth_commit = master$/;"	m
pkg_aberth_description	deps/cowboy/erlang.mk	/^pkg_aberth_description = Generic BERT-RPC server in Erlang$/;"	m
pkg_aberth_fetch	deps/cowboy/erlang.mk	/^pkg_aberth_fetch = git$/;"	m
pkg_aberth_homepage	deps/cowboy/erlang.mk	/^pkg_aberth_homepage = https:\/\/github.com\/a13x\/aberth$/;"	m
pkg_aberth_name	deps/cowboy/erlang.mk	/^pkg_aberth_name = aberth$/;"	m
pkg_aberth_repo	deps/cowboy/erlang.mk	/^pkg_aberth_repo = https:\/\/github.com\/a13x\/aberth$/;"	m
pkg_active_commit	deps/cowboy/erlang.mk	/^pkg_active_commit = master$/;"	m
pkg_active_description	deps/cowboy/erlang.mk	/^pkg_active_description = Active development for Erlang: rebuild and reload source\/binary files while the VM is running$/;"	m
pkg_active_fetch	deps/cowboy/erlang.mk	/^pkg_active_fetch = git$/;"	m
pkg_active_homepage	deps/cowboy/erlang.mk	/^pkg_active_homepage = https:\/\/github.com\/proger\/active$/;"	m
pkg_active_name	deps/cowboy/erlang.mk	/^pkg_active_name = active$/;"	m
pkg_active_repo	deps/cowboy/erlang.mk	/^pkg_active_repo = https:\/\/github.com\/proger\/active$/;"	m
pkg_actordb_core_commit	deps/cowboy/erlang.mk	/^pkg_actordb_core_commit = master$/;"	m
pkg_actordb_core_description	deps/cowboy/erlang.mk	/^pkg_actordb_core_description = ActorDB main source$/;"	m
pkg_actordb_core_fetch	deps/cowboy/erlang.mk	/^pkg_actordb_core_fetch = git$/;"	m
pkg_actordb_core_homepage	deps/cowboy/erlang.mk	/^pkg_actordb_core_homepage = http:\/\/www.actordb.com\/$/;"	m
pkg_actordb_core_name	deps/cowboy/erlang.mk	/^pkg_actordb_core_name = actordb_core$/;"	m
pkg_actordb_core_repo	deps/cowboy/erlang.mk	/^pkg_actordb_core_repo = https:\/\/github.com\/biokoda\/actordb_core$/;"	m
pkg_actordb_thrift_commit	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_commit = master$/;"	m
pkg_actordb_thrift_description	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_description = Thrift API for ActorDB$/;"	m
pkg_actordb_thrift_fetch	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_fetch = git$/;"	m
pkg_actordb_thrift_homepage	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_homepage = http:\/\/www.actordb.com\/$/;"	m
pkg_actordb_thrift_name	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_name = actordb_thrift$/;"	m
pkg_actordb_thrift_repo	deps/cowboy/erlang.mk	/^pkg_actordb_thrift_repo = https:\/\/github.com\/biokoda\/actordb_thrift$/;"	m
pkg_aleppo_commit	deps/cowboy/erlang.mk	/^pkg_aleppo_commit = master$/;"	m
pkg_aleppo_description	deps/cowboy/erlang.mk	/^pkg_aleppo_description = Alternative Erlang Pre-Processor$/;"	m
pkg_aleppo_fetch	deps/cowboy/erlang.mk	/^pkg_aleppo_fetch = git$/;"	m
pkg_aleppo_homepage	deps/cowboy/erlang.mk	/^pkg_aleppo_homepage = https:\/\/github.com\/ErlyORM\/aleppo$/;"	m
pkg_aleppo_name	deps/cowboy/erlang.mk	/^pkg_aleppo_name = aleppo$/;"	m
pkg_aleppo_repo	deps/cowboy/erlang.mk	/^pkg_aleppo_repo = https:\/\/github.com\/ErlyORM\/aleppo$/;"	m
pkg_alog_commit	deps/cowboy/erlang.mk	/^pkg_alog_commit = master$/;"	m
pkg_alog_description	deps/cowboy/erlang.mk	/^pkg_alog_description = Simply the best logging framework for Erlang$/;"	m
pkg_alog_fetch	deps/cowboy/erlang.mk	/^pkg_alog_fetch = git$/;"	m
pkg_alog_homepage	deps/cowboy/erlang.mk	/^pkg_alog_homepage = https:\/\/github.com\/siberian-fast-food\/alogger$/;"	m
pkg_alog_name	deps/cowboy/erlang.mk	/^pkg_alog_name = alog$/;"	m
pkg_alog_repo	deps/cowboy/erlang.mk	/^pkg_alog_repo = https:\/\/github.com\/siberian-fast-food\/alogger$/;"	m
pkg_amqp_client_commit	deps/cowboy/erlang.mk	/^pkg_amqp_client_commit = master$/;"	m
pkg_amqp_client_description	deps/cowboy/erlang.mk	/^pkg_amqp_client_description = RabbitMQ Erlang AMQP client$/;"	m
pkg_amqp_client_fetch	deps/cowboy/erlang.mk	/^pkg_amqp_client_fetch = git$/;"	m
pkg_amqp_client_homepage	deps/cowboy/erlang.mk	/^pkg_amqp_client_homepage = https:\/\/www.rabbitmq.com\/erlang-client-user-guide.html$/;"	m
pkg_amqp_client_name	deps/cowboy/erlang.mk	/^pkg_amqp_client_name = amqp_client$/;"	m
pkg_amqp_client_repo	deps/cowboy/erlang.mk	/^pkg_amqp_client_repo = https:\/\/github.com\/rabbitmq\/rabbitmq-erlang-client.git$/;"	m
pkg_annotations_commit	deps/cowboy/erlang.mk	/^pkg_annotations_commit = master$/;"	m
pkg_annotations_description	deps/cowboy/erlang.mk	/^pkg_annotations_description = Simple code instrumentation utilities$/;"	m
pkg_annotations_fetch	deps/cowboy/erlang.mk	/^pkg_annotations_fetch = git$/;"	m
pkg_annotations_homepage	deps/cowboy/erlang.mk	/^pkg_annotations_homepage = https:\/\/github.com\/hyperthunk\/annotations$/;"	m
pkg_annotations_name	deps/cowboy/erlang.mk	/^pkg_annotations_name = annotations$/;"	m
pkg_annotations_repo	deps/cowboy/erlang.mk	/^pkg_annotations_repo = https:\/\/github.com\/hyperthunk\/annotations$/;"	m
pkg_antidote_commit	deps/cowboy/erlang.mk	/^pkg_antidote_commit = master$/;"	m
pkg_antidote_description	deps/cowboy/erlang.mk	/^pkg_antidote_description = Large-scale computation without synchronisation$/;"	m
pkg_antidote_fetch	deps/cowboy/erlang.mk	/^pkg_antidote_fetch = git$/;"	m
pkg_antidote_homepage	deps/cowboy/erlang.mk	/^pkg_antidote_homepage = https:\/\/syncfree.lip6.fr\/$/;"	m
pkg_antidote_name	deps/cowboy/erlang.mk	/^pkg_antidote_name = antidote$/;"	m
pkg_antidote_repo	deps/cowboy/erlang.mk	/^pkg_antidote_repo = https:\/\/github.com\/SyncFree\/antidote$/;"	m
pkg_apns_commit	deps/cowboy/erlang.mk	/^pkg_apns_commit = 1.0.4$/;"	m
pkg_apns_description	deps/cowboy/erlang.mk	/^pkg_apns_description = Apple Push Notification Server for Erlang$/;"	m
pkg_apns_fetch	deps/cowboy/erlang.mk	/^pkg_apns_fetch = git$/;"	m
pkg_apns_homepage	deps/cowboy/erlang.mk	/^pkg_apns_homepage = http:\/\/inaka.github.com\/apns4erl$/;"	m
pkg_apns_name	deps/cowboy/erlang.mk	/^pkg_apns_name = apns$/;"	m
pkg_apns_repo	deps/cowboy/erlang.mk	/^pkg_apns_repo = https:\/\/github.com\/inaka\/apns4erl$/;"	m
pkg_azdht_commit	deps/cowboy/erlang.mk	/^pkg_azdht_commit = master$/;"	m
pkg_azdht_description	deps/cowboy/erlang.mk	/^pkg_azdht_description = Azureus Distributed Hash Table (DHT) in Erlang$/;"	m
pkg_azdht_fetch	deps/cowboy/erlang.mk	/^pkg_azdht_fetch = git$/;"	m
pkg_azdht_homepage	deps/cowboy/erlang.mk	/^pkg_azdht_homepage = https:\/\/github.com\/arcusfelis\/azdht$/;"	m
pkg_azdht_name	deps/cowboy/erlang.mk	/^pkg_azdht_name = azdht$/;"	m
pkg_azdht_repo	deps/cowboy/erlang.mk	/^pkg_azdht_repo = https:\/\/github.com\/arcusfelis\/azdht$/;"	m
pkg_backoff_commit	deps/cowboy/erlang.mk	/^pkg_backoff_commit = master$/;"	m
pkg_backoff_description	deps/cowboy/erlang.mk	/^pkg_backoff_description = Simple exponential backoffs in Erlang$/;"	m
pkg_backoff_fetch	deps/cowboy/erlang.mk	/^pkg_backoff_fetch = git$/;"	m
pkg_backoff_homepage	deps/cowboy/erlang.mk	/^pkg_backoff_homepage = https:\/\/github.com\/ferd\/backoff$/;"	m
pkg_backoff_name	deps/cowboy/erlang.mk	/^pkg_backoff_name = backoff$/;"	m
pkg_backoff_repo	deps/cowboy/erlang.mk	/^pkg_backoff_repo = https:\/\/github.com\/ferd\/backoff$/;"	m
pkg_barrel_tcp_commit	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_commit = master$/;"	m
pkg_barrel_tcp_description	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_description = barrel is a generic TCP acceptor pool with low latency in Erlang.$/;"	m
pkg_barrel_tcp_fetch	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_fetch = git$/;"	m
pkg_barrel_tcp_homepage	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_homepage = https:\/\/github.com\/benoitc-attic\/barrel_tcp$/;"	m
pkg_barrel_tcp_name	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_name = barrel_tcp$/;"	m
pkg_barrel_tcp_repo	deps/cowboy/erlang.mk	/^pkg_barrel_tcp_repo = https:\/\/github.com\/benoitc-attic\/barrel_tcp$/;"	m
pkg_basho_bench_commit	deps/cowboy/erlang.mk	/^pkg_basho_bench_commit = master$/;"	m
pkg_basho_bench_description	deps/cowboy/erlang.mk	/^pkg_basho_bench_description = A load-generation and testing tool for basically whatever you can write a returning Erlang function for.$/;"	m
pkg_basho_bench_fetch	deps/cowboy/erlang.mk	/^pkg_basho_bench_fetch = git$/;"	m
pkg_basho_bench_homepage	deps/cowboy/erlang.mk	/^pkg_basho_bench_homepage = https:\/\/github.com\/basho\/basho_bench$/;"	m
pkg_basho_bench_name	deps/cowboy/erlang.mk	/^pkg_basho_bench_name = basho_bench$/;"	m
pkg_basho_bench_repo	deps/cowboy/erlang.mk	/^pkg_basho_bench_repo = https:\/\/github.com\/basho\/basho_bench$/;"	m
pkg_bcrypt_commit	deps/cowboy/erlang.mk	/^pkg_bcrypt_commit = master$/;"	m
pkg_bcrypt_description	deps/cowboy/erlang.mk	/^pkg_bcrypt_description = Bcrypt Erlang \/ C library$/;"	m
pkg_bcrypt_fetch	deps/cowboy/erlang.mk	/^pkg_bcrypt_fetch = git$/;"	m
pkg_bcrypt_homepage	deps/cowboy/erlang.mk	/^pkg_bcrypt_homepage = https:\/\/github.com\/riverrun\/branglecrypt$/;"	m
pkg_bcrypt_name	deps/cowboy/erlang.mk	/^pkg_bcrypt_name = bcrypt$/;"	m
pkg_bcrypt_repo	deps/cowboy/erlang.mk	/^pkg_bcrypt_repo = https:\/\/github.com\/riverrun\/branglecrypt$/;"	m
pkg_beam_commit	deps/cowboy/erlang.mk	/^pkg_beam_commit = master$/;"	m
pkg_beam_description	deps/cowboy/erlang.mk	/^pkg_beam_description = BEAM emulator written in Erlang$/;"	m
pkg_beam_fetch	deps/cowboy/erlang.mk	/^pkg_beam_fetch = git$/;"	m
pkg_beam_homepage	deps/cowboy/erlang.mk	/^pkg_beam_homepage = https:\/\/github.com\/tonyrog\/beam$/;"	m
pkg_beam_name	deps/cowboy/erlang.mk	/^pkg_beam_name = beam$/;"	m
pkg_beam_repo	deps/cowboy/erlang.mk	/^pkg_beam_repo = https:\/\/github.com\/tonyrog\/beam$/;"	m
pkg_beanstalk_commit	deps/cowboy/erlang.mk	/^pkg_beanstalk_commit = master$/;"	m
pkg_beanstalk_description	deps/cowboy/erlang.mk	/^pkg_beanstalk_description = An Erlang client for beanstalkd$/;"	m
pkg_beanstalk_fetch	deps/cowboy/erlang.mk	/^pkg_beanstalk_fetch = git$/;"	m
pkg_beanstalk_homepage	deps/cowboy/erlang.mk	/^pkg_beanstalk_homepage = https:\/\/github.com\/tim\/erlang-beanstalk$/;"	m
pkg_beanstalk_name	deps/cowboy/erlang.mk	/^pkg_beanstalk_name = beanstalk$/;"	m
pkg_beanstalk_repo	deps/cowboy/erlang.mk	/^pkg_beanstalk_repo = https:\/\/github.com\/tim\/erlang-beanstalk$/;"	m
pkg_bear_commit	deps/cowboy/erlang.mk	/^pkg_bear_commit = master$/;"	m
pkg_bear_description	deps/cowboy/erlang.mk	/^pkg_bear_description = a set of statistics functions for erlang$/;"	m
pkg_bear_fetch	deps/cowboy/erlang.mk	/^pkg_bear_fetch = git$/;"	m
pkg_bear_homepage	deps/cowboy/erlang.mk	/^pkg_bear_homepage = https:\/\/github.com\/boundary\/bear$/;"	m
pkg_bear_name	deps/cowboy/erlang.mk	/^pkg_bear_name = bear$/;"	m
pkg_bear_repo	deps/cowboy/erlang.mk	/^pkg_bear_repo = https:\/\/github.com\/boundary\/bear$/;"	m
pkg_bertconf_commit	deps/cowboy/erlang.mk	/^pkg_bertconf_commit = master$/;"	m
pkg_bertconf_description	deps/cowboy/erlang.mk	/^pkg_bertconf_description = Make ETS tables out of statc BERT files that are auto-reloaded$/;"	m
pkg_bertconf_fetch	deps/cowboy/erlang.mk	/^pkg_bertconf_fetch = git$/;"	m
pkg_bertconf_homepage	deps/cowboy/erlang.mk	/^pkg_bertconf_homepage = https:\/\/github.com\/ferd\/bertconf$/;"	m
pkg_bertconf_name	deps/cowboy/erlang.mk	/^pkg_bertconf_name = bertconf$/;"	m
pkg_bertconf_repo	deps/cowboy/erlang.mk	/^pkg_bertconf_repo = https:\/\/github.com\/ferd\/bertconf$/;"	m
pkg_bifrost_commit	deps/cowboy/erlang.mk	/^pkg_bifrost_commit = master$/;"	m
pkg_bifrost_description	deps/cowboy/erlang.mk	/^pkg_bifrost_description = Erlang FTP Server Framework$/;"	m
pkg_bifrost_fetch	deps/cowboy/erlang.mk	/^pkg_bifrost_fetch = git$/;"	m
pkg_bifrost_homepage	deps/cowboy/erlang.mk	/^pkg_bifrost_homepage = https:\/\/github.com\/thorstadt\/bifrost$/;"	m
pkg_bifrost_name	deps/cowboy/erlang.mk	/^pkg_bifrost_name = bifrost$/;"	m
pkg_bifrost_repo	deps/cowboy/erlang.mk	/^pkg_bifrost_repo = https:\/\/github.com\/thorstadt\/bifrost$/;"	m
pkg_binpp_commit	deps/cowboy/erlang.mk	/^pkg_binpp_commit = master$/;"	m
pkg_binpp_description	deps/cowboy/erlang.mk	/^pkg_binpp_description = Erlang Binary Pretty Printer$/;"	m
pkg_binpp_fetch	deps/cowboy/erlang.mk	/^pkg_binpp_fetch = git$/;"	m
pkg_binpp_homepage	deps/cowboy/erlang.mk	/^pkg_binpp_homepage = https:\/\/github.com\/jtendo\/binpp$/;"	m
pkg_binpp_name	deps/cowboy/erlang.mk	/^pkg_binpp_name = binpp$/;"	m
pkg_binpp_repo	deps/cowboy/erlang.mk	/^pkg_binpp_repo = https:\/\/github.com\/jtendo\/binpp$/;"	m
pkg_bisect_commit	deps/cowboy/erlang.mk	/^pkg_bisect_commit = master$/;"	m
pkg_bisect_description	deps/cowboy/erlang.mk	/^pkg_bisect_description = Ordered fixed-size binary dictionary in Erlang$/;"	m
pkg_bisect_fetch	deps/cowboy/erlang.mk	/^pkg_bisect_fetch = git$/;"	m
pkg_bisect_homepage	deps/cowboy/erlang.mk	/^pkg_bisect_homepage = https:\/\/github.com\/knutin\/bisect$/;"	m
pkg_bisect_name	deps/cowboy/erlang.mk	/^pkg_bisect_name = bisect$/;"	m
pkg_bisect_repo	deps/cowboy/erlang.mk	/^pkg_bisect_repo = https:\/\/github.com\/knutin\/bisect$/;"	m
pkg_bitcask_commit	deps/cowboy/erlang.mk	/^pkg_bitcask_commit = master$/;"	m
pkg_bitcask_description	deps/cowboy/erlang.mk	/^pkg_bitcask_description = because you need another a key\/value storage engine$/;"	m
pkg_bitcask_fetch	deps/cowboy/erlang.mk	/^pkg_bitcask_fetch = git$/;"	m
pkg_bitcask_homepage	deps/cowboy/erlang.mk	/^pkg_bitcask_homepage = https:\/\/github.com\/basho\/bitcask$/;"	m
pkg_bitcask_name	deps/cowboy/erlang.mk	/^pkg_bitcask_name = bitcask$/;"	m
pkg_bitcask_repo	deps/cowboy/erlang.mk	/^pkg_bitcask_repo = https:\/\/github.com\/basho\/bitcask$/;"	m
pkg_bitstore_commit	deps/cowboy/erlang.mk	/^pkg_bitstore_commit = master$/;"	m
pkg_bitstore_description	deps/cowboy/erlang.mk	/^pkg_bitstore_description = A document based ontology development environment$/;"	m
pkg_bitstore_fetch	deps/cowboy/erlang.mk	/^pkg_bitstore_fetch = git$/;"	m
pkg_bitstore_homepage	deps/cowboy/erlang.mk	/^pkg_bitstore_homepage = https:\/\/github.com\/bdionne\/bitstore$/;"	m
pkg_bitstore_name	deps/cowboy/erlang.mk	/^pkg_bitstore_name = bitstore$/;"	m
pkg_bitstore_repo	deps/cowboy/erlang.mk	/^pkg_bitstore_repo = https:\/\/github.com\/bdionne\/bitstore$/;"	m
pkg_bootstrap_commit	deps/cowboy/erlang.mk	/^pkg_bootstrap_commit = master$/;"	m
pkg_bootstrap_description	deps/cowboy/erlang.mk	/^pkg_bootstrap_description = A simple, yet powerful Erlang cluster bootstrapping application.$/;"	m
pkg_bootstrap_fetch	deps/cowboy/erlang.mk	/^pkg_bootstrap_fetch = git$/;"	m
pkg_bootstrap_homepage	deps/cowboy/erlang.mk	/^pkg_bootstrap_homepage = https:\/\/github.com\/schlagert\/bootstrap$/;"	m
pkg_bootstrap_name	deps/cowboy/erlang.mk	/^pkg_bootstrap_name = bootstrap$/;"	m
pkg_bootstrap_repo	deps/cowboy/erlang.mk	/^pkg_bootstrap_repo = https:\/\/github.com\/schlagert\/bootstrap$/;"	m
pkg_boss_commit	deps/cowboy/erlang.mk	/^pkg_boss_commit = master$/;"	m
pkg_boss_db_commit	deps/cowboy/erlang.mk	/^pkg_boss_db_commit = master$/;"	m
pkg_boss_db_description	deps/cowboy/erlang.mk	/^pkg_boss_db_description = BossDB: a sharded, caching, pooling, evented ORM for Erlang$/;"	m
pkg_boss_db_fetch	deps/cowboy/erlang.mk	/^pkg_boss_db_fetch = git$/;"	m
pkg_boss_db_homepage	deps/cowboy/erlang.mk	/^pkg_boss_db_homepage = https:\/\/github.com\/ErlyORM\/boss_db$/;"	m
pkg_boss_db_name	deps/cowboy/erlang.mk	/^pkg_boss_db_name = boss_db$/;"	m
pkg_boss_db_repo	deps/cowboy/erlang.mk	/^pkg_boss_db_repo = https:\/\/github.com\/ErlyORM\/boss_db$/;"	m
pkg_boss_description	deps/cowboy/erlang.mk	/^pkg_boss_description = Erlang web MVC, now featuring Comet$/;"	m
pkg_boss_fetch	deps/cowboy/erlang.mk	/^pkg_boss_fetch = git$/;"	m
pkg_boss_homepage	deps/cowboy/erlang.mk	/^pkg_boss_homepage = https:\/\/github.com\/ChicagoBoss\/ChicagoBoss$/;"	m
pkg_boss_name	deps/cowboy/erlang.mk	/^pkg_boss_name = boss$/;"	m
pkg_boss_repo	deps/cowboy/erlang.mk	/^pkg_boss_repo = https:\/\/github.com\/ChicagoBoss\/ChicagoBoss$/;"	m
pkg_bson_commit	deps/cowboy/erlang.mk	/^pkg_bson_commit = master$/;"	m
pkg_bson_description	deps/cowboy/erlang.mk	/^pkg_bson_description = BSON documents in Erlang, see bsonspec.org$/;"	m
pkg_bson_fetch	deps/cowboy/erlang.mk	/^pkg_bson_fetch = git$/;"	m
pkg_bson_homepage	deps/cowboy/erlang.mk	/^pkg_bson_homepage = https:\/\/github.com\/comtihon\/bson-erlang$/;"	m
pkg_bson_name	deps/cowboy/erlang.mk	/^pkg_bson_name = bson$/;"	m
pkg_bson_repo	deps/cowboy/erlang.mk	/^pkg_bson_repo = https:\/\/github.com\/comtihon\/bson-erlang$/;"	m
pkg_bullet_commit	deps/cowboy/erlang.mk	/^pkg_bullet_commit = master$/;"	m
pkg_bullet_description	deps/cowboy/erlang.mk	/^pkg_bullet_description = Simple, reliable, efficient streaming for Cowboy.$/;"	m
pkg_bullet_fetch	deps/cowboy/erlang.mk	/^pkg_bullet_fetch = git$/;"	m
pkg_bullet_homepage	deps/cowboy/erlang.mk	/^pkg_bullet_homepage = http:\/\/ninenines.eu$/;"	m
pkg_bullet_name	deps/cowboy/erlang.mk	/^pkg_bullet_name = bullet$/;"	m
pkg_bullet_repo	deps/cowboy/erlang.mk	/^pkg_bullet_repo = https:\/\/github.com\/extend\/bullet$/;"	m
pkg_cache_commit	deps/cowboy/erlang.mk	/^pkg_cache_commit = master$/;"	m
pkg_cache_description	deps/cowboy/erlang.mk	/^pkg_cache_description = Erlang in-memory cache$/;"	m
pkg_cache_fetch	deps/cowboy/erlang.mk	/^pkg_cache_fetch = git$/;"	m
pkg_cache_homepage	deps/cowboy/erlang.mk	/^pkg_cache_homepage = https:\/\/github.com\/fogfish\/cache$/;"	m
pkg_cache_name	deps/cowboy/erlang.mk	/^pkg_cache_name = cache$/;"	m
pkg_cache_repo	deps/cowboy/erlang.mk	/^pkg_cache_repo = https:\/\/github.com\/fogfish\/cache$/;"	m
pkg_cake_commit	deps/cowboy/erlang.mk	/^pkg_cake_commit = v0.1.2$/;"	m
pkg_cake_description	deps/cowboy/erlang.mk	/^pkg_cake_description = Really simple terminal colorization$/;"	m
pkg_cake_fetch	deps/cowboy/erlang.mk	/^pkg_cake_fetch = git$/;"	m
pkg_cake_homepage	deps/cowboy/erlang.mk	/^pkg_cake_homepage = https:\/\/github.com\/darach\/cake-erl$/;"	m
pkg_cake_name	deps/cowboy/erlang.mk	/^pkg_cake_name = cake$/;"	m
pkg_cake_repo	deps/cowboy/erlang.mk	/^pkg_cake_repo = https:\/\/github.com\/darach\/cake-erl$/;"	m
pkg_carotene_commit	deps/cowboy/erlang.mk	/^pkg_carotene_commit = master$/;"	m
pkg_carotene_description	deps/cowboy/erlang.mk	/^pkg_carotene_description = Real-time server$/;"	m
pkg_carotene_fetch	deps/cowboy/erlang.mk	/^pkg_carotene_fetch = git$/;"	m
pkg_carotene_homepage	deps/cowboy/erlang.mk	/^pkg_carotene_homepage = https:\/\/github.com\/carotene\/carotene$/;"	m
pkg_carotene_name	deps/cowboy/erlang.mk	/^pkg_carotene_name = carotene$/;"	m
pkg_carotene_repo	deps/cowboy/erlang.mk	/^pkg_carotene_repo = https:\/\/github.com\/carotene\/carotene$/;"	m
pkg_cberl_commit	deps/cowboy/erlang.mk	/^pkg_cberl_commit = master$/;"	m
pkg_cberl_description	deps/cowboy/erlang.mk	/^pkg_cberl_description = NIF based Erlang bindings for Couchbase$/;"	m
pkg_cberl_fetch	deps/cowboy/erlang.mk	/^pkg_cberl_fetch = git$/;"	m
pkg_cberl_homepage	deps/cowboy/erlang.mk	/^pkg_cberl_homepage = https:\/\/github.com\/chitika\/cberl$/;"	m
pkg_cberl_name	deps/cowboy/erlang.mk	/^pkg_cberl_name = cberl$/;"	m
pkg_cberl_repo	deps/cowboy/erlang.mk	/^pkg_cberl_repo = https:\/\/github.com\/chitika\/cberl$/;"	m
pkg_cecho_commit	deps/cowboy/erlang.mk	/^pkg_cecho_commit = master$/;"	m
pkg_cecho_description	deps/cowboy/erlang.mk	/^pkg_cecho_description = An ncurses library for Erlang$/;"	m
pkg_cecho_fetch	deps/cowboy/erlang.mk	/^pkg_cecho_fetch = git$/;"	m
pkg_cecho_homepage	deps/cowboy/erlang.mk	/^pkg_cecho_homepage = https:\/\/github.com\/mazenharake\/cecho$/;"	m
pkg_cecho_name	deps/cowboy/erlang.mk	/^pkg_cecho_name = cecho$/;"	m
pkg_cecho_repo	deps/cowboy/erlang.mk	/^pkg_cecho_repo = https:\/\/github.com\/mazenharake\/cecho$/;"	m
pkg_cferl_commit	deps/cowboy/erlang.mk	/^pkg_cferl_commit = master$/;"	m
pkg_cferl_description	deps/cowboy/erlang.mk	/^pkg_cferl_description = Rackspace \/ Open Stack Cloud Files Erlang Client$/;"	m
pkg_cferl_fetch	deps/cowboy/erlang.mk	/^pkg_cferl_fetch = git$/;"	m
pkg_cferl_homepage	deps/cowboy/erlang.mk	/^pkg_cferl_homepage = https:\/\/github.com\/ddossot\/cferl$/;"	m
pkg_cferl_name	deps/cowboy/erlang.mk	/^pkg_cferl_name = cferl$/;"	m
pkg_cferl_repo	deps/cowboy/erlang.mk	/^pkg_cferl_repo = https:\/\/github.com\/ddossot\/cferl$/;"	m
pkg_chaos_monkey_commit	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_commit = master$/;"	m
pkg_chaos_monkey_description	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_description = This is The CHAOS MONKEY.  It will kill your processes.$/;"	m
pkg_chaos_monkey_fetch	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_fetch = git$/;"	m
pkg_chaos_monkey_homepage	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_homepage = https:\/\/github.com\/dLuna\/chaos_monkey$/;"	m
pkg_chaos_monkey_name	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_name = chaos_monkey$/;"	m
pkg_chaos_monkey_repo	deps/cowboy/erlang.mk	/^pkg_chaos_monkey_repo = https:\/\/github.com\/dLuna\/chaos_monkey$/;"	m
pkg_check_node_commit	deps/cowboy/erlang.mk	/^pkg_check_node_commit = master$/;"	m
pkg_check_node_description	deps/cowboy/erlang.mk	/^pkg_check_node_description = Nagios Scripts for monitoring Riak$/;"	m
pkg_check_node_fetch	deps/cowboy/erlang.mk	/^pkg_check_node_fetch = git$/;"	m
pkg_check_node_homepage	deps/cowboy/erlang.mk	/^pkg_check_node_homepage = https:\/\/github.com\/basho-labs\/riak_nagios$/;"	m
pkg_check_node_name	deps/cowboy/erlang.mk	/^pkg_check_node_name = check_node$/;"	m
pkg_check_node_repo	deps/cowboy/erlang.mk	/^pkg_check_node_repo = https:\/\/github.com\/basho-labs\/riak_nagios$/;"	m
pkg_chronos_commit	deps/cowboy/erlang.mk	/^pkg_chronos_commit = master$/;"	m
pkg_chronos_description	deps/cowboy/erlang.mk	/^pkg_chronos_description = Timer module for Erlang that makes it easy to abstact time out of the tests.$/;"	m
pkg_chronos_fetch	deps/cowboy/erlang.mk	/^pkg_chronos_fetch = git$/;"	m
pkg_chronos_homepage	deps/cowboy/erlang.mk	/^pkg_chronos_homepage = https:\/\/github.com\/lehoff\/chronos$/;"	m
pkg_chronos_name	deps/cowboy/erlang.mk	/^pkg_chronos_name = chronos$/;"	m
pkg_chronos_repo	deps/cowboy/erlang.mk	/^pkg_chronos_repo = https:\/\/github.com\/lehoff\/chronos$/;"	m
pkg_cl_commit	deps/cowboy/erlang.mk	/^pkg_cl_commit = master$/;"	m
pkg_cl_description	deps/cowboy/erlang.mk	/^pkg_cl_description = OpenCL binding for Erlang$/;"	m
pkg_cl_fetch	deps/cowboy/erlang.mk	/^pkg_cl_fetch = git$/;"	m
pkg_cl_homepage	deps/cowboy/erlang.mk	/^pkg_cl_homepage = https:\/\/github.com\/tonyrog\/cl$/;"	m
pkg_cl_name	deps/cowboy/erlang.mk	/^pkg_cl_name = cl$/;"	m
pkg_cl_repo	deps/cowboy/erlang.mk	/^pkg_cl_repo = https:\/\/github.com\/tonyrog\/cl$/;"	m
pkg_classifier_commit	deps/cowboy/erlang.mk	/^pkg_classifier_commit = master$/;"	m
pkg_classifier_description	deps/cowboy/erlang.mk	/^pkg_classifier_description = An Erlang Bayesian Filter and Text Classifier$/;"	m
pkg_classifier_fetch	deps/cowboy/erlang.mk	/^pkg_classifier_fetch = git$/;"	m
pkg_classifier_homepage	deps/cowboy/erlang.mk	/^pkg_classifier_homepage = https:\/\/github.com\/inaka\/classifier$/;"	m
pkg_classifier_name	deps/cowboy/erlang.mk	/^pkg_classifier_name = classifier$/;"	m
pkg_classifier_repo	deps/cowboy/erlang.mk	/^pkg_classifier_repo = https:\/\/github.com\/inaka\/classifier$/;"	m
pkg_clique_commit	deps/cowboy/erlang.mk	/^pkg_clique_commit = develop$/;"	m
pkg_clique_description	deps/cowboy/erlang.mk	/^pkg_clique_description = CLI Framework for Erlang$/;"	m
pkg_clique_fetch	deps/cowboy/erlang.mk	/^pkg_clique_fetch = git$/;"	m
pkg_clique_homepage	deps/cowboy/erlang.mk	/^pkg_clique_homepage = https:\/\/github.com\/basho\/clique$/;"	m
pkg_clique_name	deps/cowboy/erlang.mk	/^pkg_clique_name = clique$/;"	m
pkg_clique_repo	deps/cowboy/erlang.mk	/^pkg_clique_repo = https:\/\/github.com\/basho\/clique$/;"	m
pkg_cloudi_core_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_core_commit = master$/;"	m
pkg_cloudi_core_description	deps/cowboy/erlang.mk	/^pkg_cloudi_core_description = CloudI internal service runtime$/;"	m
pkg_cloudi_core_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_core_fetch = git$/;"	m
pkg_cloudi_core_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_core_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_core_name	deps/cowboy/erlang.mk	/^pkg_cloudi_core_name = cloudi_core$/;"	m
pkg_cloudi_core_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_core_repo = https:\/\/github.com\/CloudI\/cloudi_core$/;"	m
pkg_cloudi_service_api_requests_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_commit = master$/;"	m
pkg_cloudi_service_api_requests_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_description = CloudI Service API requests (JSON-RPC\/Erlang-term support)$/;"	m
pkg_cloudi_service_api_requests_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_fetch = git$/;"	m
pkg_cloudi_service_api_requests_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_api_requests_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_name = cloudi_service_api_requests$/;"	m
pkg_cloudi_service_api_requests_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_api_requests_repo = https:\/\/github.com\/CloudI\/cloudi_service_api_requests$/;"	m
pkg_cloudi_service_db_cassandra_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_commit = master$/;"	m
pkg_cloudi_service_db_cassandra_cql_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_commit = master$/;"	m
pkg_cloudi_service_db_cassandra_cql_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_description = Cassandra CQL CloudI Service$/;"	m
pkg_cloudi_service_db_cassandra_cql_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_fetch = git$/;"	m
pkg_cloudi_service_db_cassandra_cql_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_cassandra_cql_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_name = cloudi_service_db_cassandra_cql$/;"	m
pkg_cloudi_service_db_cassandra_cql_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_cql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_cassandra_cql$/;"	m
pkg_cloudi_service_db_cassandra_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_description = Cassandra CloudI Service$/;"	m
pkg_cloudi_service_db_cassandra_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_fetch = git$/;"	m
pkg_cloudi_service_db_cassandra_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_cassandra_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_name = cloudi_service_db_cassandra$/;"	m
pkg_cloudi_service_db_cassandra_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_cassandra_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_cassandra$/;"	m
pkg_cloudi_service_db_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_commit = master$/;"	m
pkg_cloudi_service_db_couchdb_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_commit = master$/;"	m
pkg_cloudi_service_db_couchdb_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_description = CouchDB CloudI Service$/;"	m
pkg_cloudi_service_db_couchdb_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_fetch = git$/;"	m
pkg_cloudi_service_db_couchdb_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_couchdb_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_name = cloudi_service_db_couchdb$/;"	m
pkg_cloudi_service_db_couchdb_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_couchdb_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_couchdb$/;"	m
pkg_cloudi_service_db_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_description = CloudI Database (in-memory\/testing\/generic)$/;"	m
pkg_cloudi_service_db_elasticsearch_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_commit = master$/;"	m
pkg_cloudi_service_db_elasticsearch_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_description = elasticsearch CloudI Service$/;"	m
pkg_cloudi_service_db_elasticsearch_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_fetch = git$/;"	m
pkg_cloudi_service_db_elasticsearch_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_elasticsearch_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_name = cloudi_service_db_elasticsearch$/;"	m
pkg_cloudi_service_db_elasticsearch_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_elasticsearch_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_elasticsearch$/;"	m
pkg_cloudi_service_db_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_fetch = git$/;"	m
pkg_cloudi_service_db_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_memcached_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_commit = master$/;"	m
pkg_cloudi_service_db_memcached_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_description = memcached CloudI Service$/;"	m
pkg_cloudi_service_db_memcached_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_fetch = git$/;"	m
pkg_cloudi_service_db_memcached_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_memcached_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_name = cloudi_service_db_memcached$/;"	m
pkg_cloudi_service_db_memcached_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_memcached_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_memcached$/;"	m
pkg_cloudi_service_db_mysql_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_commit = master$/;"	m
pkg_cloudi_service_db_mysql_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_description = MySQL CloudI Service$/;"	m
pkg_cloudi_service_db_mysql_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_fetch = git$/;"	m
pkg_cloudi_service_db_mysql_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_mysql_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_name = cloudi_service_db_mysql$/;"	m
pkg_cloudi_service_db_mysql_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_mysql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_mysql$/;"	m
pkg_cloudi_service_db_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_name = cloudi_service_db$/;"	m
pkg_cloudi_service_db_pgsql_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_commit = master$/;"	m
pkg_cloudi_service_db_pgsql_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_description = PostgreSQL CloudI Service$/;"	m
pkg_cloudi_service_db_pgsql_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_fetch = git$/;"	m
pkg_cloudi_service_db_pgsql_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_pgsql_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_name = cloudi_service_db_pgsql$/;"	m
pkg_cloudi_service_db_pgsql_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_pgsql_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_pgsql$/;"	m
pkg_cloudi_service_db_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_repo = https:\/\/github.com\/CloudI\/cloudi_service_db$/;"	m
pkg_cloudi_service_db_riak_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_commit = master$/;"	m
pkg_cloudi_service_db_riak_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_description = Riak CloudI Service$/;"	m
pkg_cloudi_service_db_riak_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_fetch = git$/;"	m
pkg_cloudi_service_db_riak_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_riak_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_name = cloudi_service_db_riak$/;"	m
pkg_cloudi_service_db_riak_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_riak_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_riak$/;"	m
pkg_cloudi_service_db_tokyotyrant_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_commit = master$/;"	m
pkg_cloudi_service_db_tokyotyrant_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_description = Tokyo Tyrant CloudI Service$/;"	m
pkg_cloudi_service_db_tokyotyrant_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_fetch = git$/;"	m
pkg_cloudi_service_db_tokyotyrant_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_db_tokyotyrant_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_name = cloudi_service_db_tokyotyrant$/;"	m
pkg_cloudi_service_db_tokyotyrant_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_db_tokyotyrant_repo = https:\/\/github.com\/CloudI\/cloudi_service_db_tokyotyrant$/;"	m
pkg_cloudi_service_filesystem_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_commit = master$/;"	m
pkg_cloudi_service_filesystem_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_description = Filesystem CloudI Service$/;"	m
pkg_cloudi_service_filesystem_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_fetch = git$/;"	m
pkg_cloudi_service_filesystem_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_filesystem_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_name = cloudi_service_filesystem$/;"	m
pkg_cloudi_service_filesystem_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_filesystem_repo = https:\/\/github.com\/CloudI\/cloudi_service_filesystem$/;"	m
pkg_cloudi_service_http_client_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_commit = master$/;"	m
pkg_cloudi_service_http_client_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_description = HTTP client CloudI Service$/;"	m
pkg_cloudi_service_http_client_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_fetch = git$/;"	m
pkg_cloudi_service_http_client_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_client_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_name = cloudi_service_http_client$/;"	m
pkg_cloudi_service_http_client_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_client_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_client$/;"	m
pkg_cloudi_service_http_cowboy_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_commit = master$/;"	m
pkg_cloudi_service_http_cowboy_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_description = cowboy HTTP\/HTTPS CloudI Service$/;"	m
pkg_cloudi_service_http_cowboy_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_fetch = git$/;"	m
pkg_cloudi_service_http_cowboy_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_cowboy_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_name = cloudi_service_http_cowboy$/;"	m
pkg_cloudi_service_http_cowboy_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_cowboy_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_cowboy$/;"	m
pkg_cloudi_service_http_elli_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_commit = master$/;"	m
pkg_cloudi_service_http_elli_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_description = elli HTTP CloudI Service$/;"	m
pkg_cloudi_service_http_elli_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_fetch = git$/;"	m
pkg_cloudi_service_http_elli_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_http_elli_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_name = cloudi_service_http_elli$/;"	m
pkg_cloudi_service_http_elli_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_http_elli_repo = https:\/\/github.com\/CloudI\/cloudi_service_http_elli$/;"	m
pkg_cloudi_service_map_reduce_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_commit = master$/;"	m
pkg_cloudi_service_map_reduce_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_description = Map\/Reduce CloudI Service$/;"	m
pkg_cloudi_service_map_reduce_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_fetch = git$/;"	m
pkg_cloudi_service_map_reduce_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_map_reduce_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_name = cloudi_service_map_reduce$/;"	m
pkg_cloudi_service_map_reduce_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_map_reduce_repo = https:\/\/github.com\/CloudI\/cloudi_service_map_reduce$/;"	m
pkg_cloudi_service_oauth1_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_commit = master$/;"	m
pkg_cloudi_service_oauth1_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_description = OAuth v1.0 CloudI Service$/;"	m
pkg_cloudi_service_oauth1_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_fetch = git$/;"	m
pkg_cloudi_service_oauth1_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_oauth1_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_name = cloudi_service_oauth1$/;"	m
pkg_cloudi_service_oauth1_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_oauth1_repo = https:\/\/github.com\/CloudI\/cloudi_service_oauth1$/;"	m
pkg_cloudi_service_queue_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_commit = master$/;"	m
pkg_cloudi_service_queue_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_description = Persistent Queue Service$/;"	m
pkg_cloudi_service_queue_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_fetch = git$/;"	m
pkg_cloudi_service_queue_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_queue_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_name = cloudi_service_queue$/;"	m
pkg_cloudi_service_queue_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_queue_repo = https:\/\/github.com\/CloudI\/cloudi_service_queue$/;"	m
pkg_cloudi_service_quorum_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_commit = master$/;"	m
pkg_cloudi_service_quorum_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_description = CloudI Quorum Service$/;"	m
pkg_cloudi_service_quorum_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_fetch = git$/;"	m
pkg_cloudi_service_quorum_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_quorum_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_name = cloudi_service_quorum$/;"	m
pkg_cloudi_service_quorum_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_quorum_repo = https:\/\/github.com\/CloudI\/cloudi_service_quorum$/;"	m
pkg_cloudi_service_router_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_commit = master$/;"	m
pkg_cloudi_service_router_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_description = CloudI Router Service$/;"	m
pkg_cloudi_service_router_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_fetch = git$/;"	m
pkg_cloudi_service_router_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_router_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_name = cloudi_service_router$/;"	m
pkg_cloudi_service_router_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_router_repo = https:\/\/github.com\/CloudI\/cloudi_service_router$/;"	m
pkg_cloudi_service_tcp_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_commit = master$/;"	m
pkg_cloudi_service_tcp_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_description = TCP CloudI Service$/;"	m
pkg_cloudi_service_tcp_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_fetch = git$/;"	m
pkg_cloudi_service_tcp_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_tcp_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_name = cloudi_service_tcp$/;"	m
pkg_cloudi_service_tcp_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_tcp_repo = https:\/\/github.com\/CloudI\/cloudi_service_tcp$/;"	m
pkg_cloudi_service_timers_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_commit = master$/;"	m
pkg_cloudi_service_timers_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_description = Timers CloudI Service$/;"	m
pkg_cloudi_service_timers_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_fetch = git$/;"	m
pkg_cloudi_service_timers_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_timers_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_name = cloudi_service_timers$/;"	m
pkg_cloudi_service_timers_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_timers_repo = https:\/\/github.com\/CloudI\/cloudi_service_timers$/;"	m
pkg_cloudi_service_udp_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_commit = master$/;"	m
pkg_cloudi_service_udp_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_description = UDP CloudI Service$/;"	m
pkg_cloudi_service_udp_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_fetch = git$/;"	m
pkg_cloudi_service_udp_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_udp_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_name = cloudi_service_udp$/;"	m
pkg_cloudi_service_udp_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_udp_repo = https:\/\/github.com\/CloudI\/cloudi_service_udp$/;"	m
pkg_cloudi_service_validate_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_commit = master$/;"	m
pkg_cloudi_service_validate_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_description = CloudI Validate Service$/;"	m
pkg_cloudi_service_validate_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_fetch = git$/;"	m
pkg_cloudi_service_validate_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_validate_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_name = cloudi_service_validate$/;"	m
pkg_cloudi_service_validate_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_validate_repo = https:\/\/github.com\/CloudI\/cloudi_service_validate$/;"	m
pkg_cloudi_service_zeromq_commit	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_commit = master$/;"	m
pkg_cloudi_service_zeromq_description	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_description = ZeroMQ CloudI Service$/;"	m
pkg_cloudi_service_zeromq_fetch	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_fetch = git$/;"	m
pkg_cloudi_service_zeromq_homepage	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_cloudi_service_zeromq_name	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_name = cloudi_service_zeromq$/;"	m
pkg_cloudi_service_zeromq_repo	deps/cowboy/erlang.mk	/^pkg_cloudi_service_zeromq_repo = https:\/\/github.com\/CloudI\/cloudi_service_zeromq$/;"	m
pkg_cluster_info_commit	deps/cowboy/erlang.mk	/^pkg_cluster_info_commit = master$/;"	m
pkg_cluster_info_description	deps/cowboy/erlang.mk	/^pkg_cluster_info_description = Fork of Hibari's nifty cluster_info OTP app$/;"	m
pkg_cluster_info_fetch	deps/cowboy/erlang.mk	/^pkg_cluster_info_fetch = git$/;"	m
pkg_cluster_info_homepage	deps/cowboy/erlang.mk	/^pkg_cluster_info_homepage = https:\/\/github.com\/basho\/cluster_info$/;"	m
pkg_cluster_info_name	deps/cowboy/erlang.mk	/^pkg_cluster_info_name = cluster_info$/;"	m
pkg_cluster_info_repo	deps/cowboy/erlang.mk	/^pkg_cluster_info_repo = https:\/\/github.com\/basho\/cluster_info$/;"	m
pkg_color_commit	deps/cowboy/erlang.mk	/^pkg_color_commit = master$/;"	m
pkg_color_description	deps/cowboy/erlang.mk	/^pkg_color_description = ANSI colors for your Erlang$/;"	m
pkg_color_fetch	deps/cowboy/erlang.mk	/^pkg_color_fetch = git$/;"	m
pkg_color_homepage	deps/cowboy/erlang.mk	/^pkg_color_homepage = https:\/\/github.com\/julianduque\/erlang-color$/;"	m
pkg_color_name	deps/cowboy/erlang.mk	/^pkg_color_name = color$/;"	m
pkg_color_repo	deps/cowboy/erlang.mk	/^pkg_color_repo = https:\/\/github.com\/julianduque\/erlang-color$/;"	m
pkg_confetti_commit	deps/cowboy/erlang.mk	/^pkg_confetti_commit = master$/;"	m
pkg_confetti_description	deps/cowboy/erlang.mk	/^pkg_confetti_description = Erlang configuration provider \/ application:get_env\/2 on steroids$/;"	m
pkg_confetti_fetch	deps/cowboy/erlang.mk	/^pkg_confetti_fetch = git$/;"	m
pkg_confetti_homepage	deps/cowboy/erlang.mk	/^pkg_confetti_homepage = https:\/\/github.com\/jtendo\/confetti$/;"	m
pkg_confetti_name	deps/cowboy/erlang.mk	/^pkg_confetti_name = confetti$/;"	m
pkg_confetti_repo	deps/cowboy/erlang.mk	/^pkg_confetti_repo = https:\/\/github.com\/jtendo\/confetti$/;"	m
pkg_couch_commit	deps/cowboy/erlang.mk	/^pkg_couch_commit = master$/;"	m
pkg_couch_description	deps/cowboy/erlang.mk	/^pkg_couch_description = A embeddable document oriented database compatible with Apache CouchDB$/;"	m
pkg_couch_fetch	deps/cowboy/erlang.mk	/^pkg_couch_fetch = git$/;"	m
pkg_couch_homepage	deps/cowboy/erlang.mk	/^pkg_couch_homepage = https:\/\/github.com\/benoitc\/opencouch$/;"	m
pkg_couch_name	deps/cowboy/erlang.mk	/^pkg_couch_name = couch$/;"	m
pkg_couch_repo	deps/cowboy/erlang.mk	/^pkg_couch_repo = https:\/\/github.com\/benoitc\/opencouch$/;"	m
pkg_couchbeam_commit	deps/cowboy/erlang.mk	/^pkg_couchbeam_commit = master$/;"	m
pkg_couchbeam_description	deps/cowboy/erlang.mk	/^pkg_couchbeam_description = Apache CouchDB client in Erlang$/;"	m
pkg_couchbeam_fetch	deps/cowboy/erlang.mk	/^pkg_couchbeam_fetch = git$/;"	m
pkg_couchbeam_homepage	deps/cowboy/erlang.mk	/^pkg_couchbeam_homepage = https:\/\/github.com\/benoitc\/couchbeam$/;"	m
pkg_couchbeam_name	deps/cowboy/erlang.mk	/^pkg_couchbeam_name = couchbeam$/;"	m
pkg_couchbeam_repo	deps/cowboy/erlang.mk	/^pkg_couchbeam_repo = https:\/\/github.com\/benoitc\/couchbeam$/;"	m
pkg_covertool_commit	deps/cowboy/erlang.mk	/^pkg_covertool_commit = master$/;"	m
pkg_covertool_description	deps/cowboy/erlang.mk	/^pkg_covertool_description = Tool to convert Erlang cover data files into Cobertura XML reports$/;"	m
pkg_covertool_fetch	deps/cowboy/erlang.mk	/^pkg_covertool_fetch = git$/;"	m
pkg_covertool_homepage	deps/cowboy/erlang.mk	/^pkg_covertool_homepage = https:\/\/github.com\/idubrov\/covertool$/;"	m
pkg_covertool_name	deps/cowboy/erlang.mk	/^pkg_covertool_name = covertool$/;"	m
pkg_covertool_repo	deps/cowboy/erlang.mk	/^pkg_covertool_repo = https:\/\/github.com\/idubrov\/covertool$/;"	m
pkg_cowboy_commit	deps/cowboy/erlang.mk	/^pkg_cowboy_commit = 1.0.1$/;"	m
pkg_cowboy_description	deps/cowboy/erlang.mk	/^pkg_cowboy_description = Small, fast and modular HTTP server.$/;"	m
pkg_cowboy_fetch	deps/cowboy/erlang.mk	/^pkg_cowboy_fetch = git$/;"	m
pkg_cowboy_homepage	deps/cowboy/erlang.mk	/^pkg_cowboy_homepage = http:\/\/ninenines.eu$/;"	m
pkg_cowboy_name	deps/cowboy/erlang.mk	/^pkg_cowboy_name = cowboy$/;"	m
pkg_cowboy_repo	deps/cowboy/erlang.mk	/^pkg_cowboy_repo = https:\/\/github.com\/ninenines\/cowboy$/;"	m
pkg_cowdb_commit	deps/cowboy/erlang.mk	/^pkg_cowdb_commit = master$/;"	m
pkg_cowdb_description	deps/cowboy/erlang.mk	/^pkg_cowdb_description = Pure Key\/Value database library for Erlang Applications$/;"	m
pkg_cowdb_fetch	deps/cowboy/erlang.mk	/^pkg_cowdb_fetch = git$/;"	m
pkg_cowdb_homepage	deps/cowboy/erlang.mk	/^pkg_cowdb_homepage = https:\/\/github.com\/refuge\/cowdb$/;"	m
pkg_cowdb_name	deps/cowboy/erlang.mk	/^pkg_cowdb_name = cowdb$/;"	m
pkg_cowdb_repo	deps/cowboy/erlang.mk	/^pkg_cowdb_repo = https:\/\/github.com\/refuge\/cowdb$/;"	m
pkg_cowlib_commit	deps/cowboy/erlang.mk	/^pkg_cowlib_commit = 1.0.1$/;"	m
pkg_cowlib_description	deps/cowboy/erlang.mk	/^pkg_cowlib_description = Support library for manipulating Web protocols.$/;"	m
pkg_cowlib_fetch	deps/cowboy/erlang.mk	/^pkg_cowlib_fetch = git$/;"	m
pkg_cowlib_homepage	deps/cowboy/erlang.mk	/^pkg_cowlib_homepage = http:\/\/ninenines.eu$/;"	m
pkg_cowlib_name	deps/cowboy/erlang.mk	/^pkg_cowlib_name = cowlib$/;"	m
pkg_cowlib_repo	deps/cowboy/erlang.mk	/^pkg_cowlib_repo = https:\/\/github.com\/ninenines\/cowlib$/;"	m
pkg_cpg_commit	deps/cowboy/erlang.mk	/^pkg_cpg_commit = master$/;"	m
pkg_cpg_description	deps/cowboy/erlang.mk	/^pkg_cpg_description = CloudI Process Groups$/;"	m
pkg_cpg_fetch	deps/cowboy/erlang.mk	/^pkg_cpg_fetch = git$/;"	m
pkg_cpg_homepage	deps/cowboy/erlang.mk	/^pkg_cpg_homepage = https:\/\/github.com\/okeuday\/cpg$/;"	m
pkg_cpg_name	deps/cowboy/erlang.mk	/^pkg_cpg_name = cpg$/;"	m
pkg_cpg_repo	deps/cowboy/erlang.mk	/^pkg_cpg_repo = https:\/\/github.com\/okeuday\/cpg$/;"	m
pkg_cqerl_commit	deps/cowboy/erlang.mk	/^pkg_cqerl_commit = master$/;"	m
pkg_cqerl_description	deps/cowboy/erlang.mk	/^pkg_cqerl_description = Native Erlang CQL client for Cassandra$/;"	m
pkg_cqerl_fetch	deps/cowboy/erlang.mk	/^pkg_cqerl_fetch = git$/;"	m
pkg_cqerl_homepage	deps/cowboy/erlang.mk	/^pkg_cqerl_homepage = https:\/\/matehat.github.io\/cqerl\/$/;"	m
pkg_cqerl_name	deps/cowboy/erlang.mk	/^pkg_cqerl_name = cqerl$/;"	m
pkg_cqerl_repo	deps/cowboy/erlang.mk	/^pkg_cqerl_repo = https:\/\/github.com\/matehat\/cqerl$/;"	m
pkg_cr_commit	deps/cowboy/erlang.mk	/^pkg_cr_commit = master$/;"	m
pkg_cr_description	deps/cowboy/erlang.mk	/^pkg_cr_description = Chain Replication$/;"	m
pkg_cr_fetch	deps/cowboy/erlang.mk	/^pkg_cr_fetch = git$/;"	m
pkg_cr_homepage	deps/cowboy/erlang.mk	/^pkg_cr_homepage = https:\/\/synrc.com\/apps\/cr\/doc\/cr.htm$/;"	m
pkg_cr_name	deps/cowboy/erlang.mk	/^pkg_cr_name = cr$/;"	m
pkg_cr_repo	deps/cowboy/erlang.mk	/^pkg_cr_repo = https:\/\/github.com\/spawnproc\/cr$/;"	m
pkg_cuttlefish_commit	deps/cowboy/erlang.mk	/^pkg_cuttlefish_commit = master$/;"	m
pkg_cuttlefish_description	deps/cowboy/erlang.mk	/^pkg_cuttlefish_description = never lose your childlike sense of wonder baby cuttlefish, promise me?$/;"	m
pkg_cuttlefish_fetch	deps/cowboy/erlang.mk	/^pkg_cuttlefish_fetch = git$/;"	m
pkg_cuttlefish_homepage	deps/cowboy/erlang.mk	/^pkg_cuttlefish_homepage = https:\/\/github.com\/basho\/cuttlefish$/;"	m
pkg_cuttlefish_name	deps/cowboy/erlang.mk	/^pkg_cuttlefish_name = cuttlefish$/;"	m
pkg_cuttlefish_repo	deps/cowboy/erlang.mk	/^pkg_cuttlefish_repo = https:\/\/github.com\/basho\/cuttlefish$/;"	m
pkg_damocles_commit	deps/cowboy/erlang.mk	/^pkg_damocles_commit = master$/;"	m
pkg_damocles_description	deps/cowboy/erlang.mk	/^pkg_damocles_description = Erlang library for generating adversarial network conditions for QAing distributed applications\/systems on a single Linux box.$/;"	m
pkg_damocles_fetch	deps/cowboy/erlang.mk	/^pkg_damocles_fetch = git$/;"	m
pkg_damocles_homepage	deps/cowboy/erlang.mk	/^pkg_damocles_homepage = https:\/\/github.com\/lostcolony\/damocles$/;"	m
pkg_damocles_name	deps/cowboy/erlang.mk	/^pkg_damocles_name = damocles$/;"	m
pkg_damocles_repo	deps/cowboy/erlang.mk	/^pkg_damocles_repo = https:\/\/github.com\/lostcolony\/damocles$/;"	m
pkg_debbie_commit	deps/cowboy/erlang.mk	/^pkg_debbie_commit = master$/;"	m
pkg_debbie_description	deps/cowboy/erlang.mk	/^pkg_debbie_description = .DEB Built In Erlang$/;"	m
pkg_debbie_fetch	deps/cowboy/erlang.mk	/^pkg_debbie_fetch = git$/;"	m
pkg_debbie_homepage	deps/cowboy/erlang.mk	/^pkg_debbie_homepage = https:\/\/github.com\/crownedgrouse\/debbie$/;"	m
pkg_debbie_name	deps/cowboy/erlang.mk	/^pkg_debbie_name = debbie$/;"	m
pkg_debbie_repo	deps/cowboy/erlang.mk	/^pkg_debbie_repo = https:\/\/github.com\/crownedgrouse\/debbie$/;"	m
pkg_decimal_commit	deps/cowboy/erlang.mk	/^pkg_decimal_commit = master$/;"	m
pkg_decimal_description	deps/cowboy/erlang.mk	/^pkg_decimal_description = An Erlang decimal arithmetic library$/;"	m
pkg_decimal_fetch	deps/cowboy/erlang.mk	/^pkg_decimal_fetch = git$/;"	m
pkg_decimal_homepage	deps/cowboy/erlang.mk	/^pkg_decimal_homepage = https:\/\/github.com\/tim\/erlang-decimal$/;"	m
pkg_decimal_name	deps/cowboy/erlang.mk	/^pkg_decimal_name = decimal$/;"	m
pkg_decimal_repo	deps/cowboy/erlang.mk	/^pkg_decimal_repo = https:\/\/github.com\/tim\/erlang-decimal$/;"	m
pkg_detergent_commit	deps/cowboy/erlang.mk	/^pkg_detergent_commit = master$/;"	m
pkg_detergent_description	deps/cowboy/erlang.mk	/^pkg_detergent_description = An emulsifying Erlang SOAP library$/;"	m
pkg_detergent_fetch	deps/cowboy/erlang.mk	/^pkg_detergent_fetch = git$/;"	m
pkg_detergent_homepage	deps/cowboy/erlang.mk	/^pkg_detergent_homepage = https:\/\/github.com\/devinus\/detergent$/;"	m
pkg_detergent_name	deps/cowboy/erlang.mk	/^pkg_detergent_name = detergent$/;"	m
pkg_detergent_repo	deps/cowboy/erlang.mk	/^pkg_detergent_repo = https:\/\/github.com\/devinus\/detergent$/;"	m
pkg_detest_commit	deps/cowboy/erlang.mk	/^pkg_detest_commit = master$/;"	m
pkg_detest_description	deps/cowboy/erlang.mk	/^pkg_detest_description = Tool for running tests on a cluster of erlang nodes$/;"	m
pkg_detest_fetch	deps/cowboy/erlang.mk	/^pkg_detest_fetch = git$/;"	m
pkg_detest_homepage	deps/cowboy/erlang.mk	/^pkg_detest_homepage = https:\/\/github.com\/biokoda\/detest$/;"	m
pkg_detest_name	deps/cowboy/erlang.mk	/^pkg_detest_name = detest$/;"	m
pkg_detest_repo	deps/cowboy/erlang.mk	/^pkg_detest_repo = https:\/\/github.com\/biokoda\/detest$/;"	m
pkg_dh_date_commit	deps/cowboy/erlang.mk	/^pkg_dh_date_commit = master$/;"	m
pkg_dh_date_description	deps/cowboy/erlang.mk	/^pkg_dh_date_description = Date formatting \/ parsing library for erlang$/;"	m
pkg_dh_date_fetch	deps/cowboy/erlang.mk	/^pkg_dh_date_fetch = git$/;"	m
pkg_dh_date_homepage	deps/cowboy/erlang.mk	/^pkg_dh_date_homepage = https:\/\/github.com\/daleharvey\/dh_date$/;"	m
pkg_dh_date_name	deps/cowboy/erlang.mk	/^pkg_dh_date_name = dh_date$/;"	m
pkg_dh_date_repo	deps/cowboy/erlang.mk	/^pkg_dh_date_repo = https:\/\/github.com\/daleharvey\/dh_date$/;"	m
pkg_dhtcrawler_commit	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_commit = master$/;"	m
pkg_dhtcrawler_description	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_description = dhtcrawler is a DHT crawler written in erlang. It can join a DHT network and crawl many P2P torrents.$/;"	m
pkg_dhtcrawler_fetch	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_fetch = git$/;"	m
pkg_dhtcrawler_homepage	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_homepage = https:\/\/github.com\/kevinlynx\/dhtcrawler$/;"	m
pkg_dhtcrawler_name	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_name = dhtcrawler$/;"	m
pkg_dhtcrawler_repo	deps/cowboy/erlang.mk	/^pkg_dhtcrawler_repo = https:\/\/github.com\/kevinlynx\/dhtcrawler$/;"	m
pkg_dirbusterl_commit	deps/cowboy/erlang.mk	/^pkg_dirbusterl_commit = master$/;"	m
pkg_dirbusterl_description	deps/cowboy/erlang.mk	/^pkg_dirbusterl_description = DirBuster successor in Erlang$/;"	m
pkg_dirbusterl_fetch	deps/cowboy/erlang.mk	/^pkg_dirbusterl_fetch = git$/;"	m
pkg_dirbusterl_homepage	deps/cowboy/erlang.mk	/^pkg_dirbusterl_homepage = https:\/\/github.com\/silentsignal\/DirBustErl$/;"	m
pkg_dirbusterl_name	deps/cowboy/erlang.mk	/^pkg_dirbusterl_name = dirbusterl$/;"	m
pkg_dirbusterl_repo	deps/cowboy/erlang.mk	/^pkg_dirbusterl_repo = https:\/\/github.com\/silentsignal\/DirBustErl$/;"	m
pkg_dispcount_commit	deps/cowboy/erlang.mk	/^pkg_dispcount_commit = master$/;"	m
pkg_dispcount_description	deps/cowboy/erlang.mk	/^pkg_dispcount_description = Erlang task dispatcher based on ETS counters.$/;"	m
pkg_dispcount_fetch	deps/cowboy/erlang.mk	/^pkg_dispcount_fetch = git$/;"	m
pkg_dispcount_homepage	deps/cowboy/erlang.mk	/^pkg_dispcount_homepage = https:\/\/github.com\/ferd\/dispcount$/;"	m
pkg_dispcount_name	deps/cowboy/erlang.mk	/^pkg_dispcount_name = dispcount$/;"	m
pkg_dispcount_repo	deps/cowboy/erlang.mk	/^pkg_dispcount_repo = https:\/\/github.com\/ferd\/dispcount$/;"	m
pkg_dlhttpc_commit	deps/cowboy/erlang.mk	/^pkg_dlhttpc_commit = master$/;"	m
pkg_dlhttpc_description	deps/cowboy/erlang.mk	/^pkg_dlhttpc_description = dispcount-based lhttpc fork for massive amounts of requests to limited endpoints$/;"	m
pkg_dlhttpc_fetch	deps/cowboy/erlang.mk	/^pkg_dlhttpc_fetch = git$/;"	m
pkg_dlhttpc_homepage	deps/cowboy/erlang.mk	/^pkg_dlhttpc_homepage = https:\/\/github.com\/ferd\/dlhttpc$/;"	m
pkg_dlhttpc_name	deps/cowboy/erlang.mk	/^pkg_dlhttpc_name = dlhttpc$/;"	m
pkg_dlhttpc_repo	deps/cowboy/erlang.mk	/^pkg_dlhttpc_repo = https:\/\/github.com\/ferd\/dlhttpc$/;"	m
pkg_dns_commit	deps/cowboy/erlang.mk	/^pkg_dns_commit = master$/;"	m
pkg_dns_description	deps/cowboy/erlang.mk	/^pkg_dns_description = Erlang DNS library$/;"	m
pkg_dns_fetch	deps/cowboy/erlang.mk	/^pkg_dns_fetch = git$/;"	m
pkg_dns_homepage	deps/cowboy/erlang.mk	/^pkg_dns_homepage = https:\/\/github.com\/aetrion\/dns_erlang$/;"	m
pkg_dns_name	deps/cowboy/erlang.mk	/^pkg_dns_name = dns$/;"	m
pkg_dns_repo	deps/cowboy/erlang.mk	/^pkg_dns_repo = https:\/\/github.com\/aetrion\/dns_erlang$/;"	m
pkg_dnssd_commit	deps/cowboy/erlang.mk	/^pkg_dnssd_commit = master$/;"	m
pkg_dnssd_description	deps/cowboy/erlang.mk	/^pkg_dnssd_description = Erlang interface to Apple's Bonjour D    NS Service Discovery implementation$/;"	m
pkg_dnssd_fetch	deps/cowboy/erlang.mk	/^pkg_dnssd_fetch = git$/;"	m
pkg_dnssd_homepage	deps/cowboy/erlang.mk	/^pkg_dnssd_homepage = https:\/\/github.com\/benoitc\/dnssd_erlang$/;"	m
pkg_dnssd_name	deps/cowboy/erlang.mk	/^pkg_dnssd_name = dnssd$/;"	m
pkg_dnssd_repo	deps/cowboy/erlang.mk	/^pkg_dnssd_repo = https:\/\/github.com\/benoitc\/dnssd_erlang$/;"	m
pkg_dtl_commit	deps/cowboy/erlang.mk	/^pkg_dtl_commit = master$/;"	m
pkg_dtl_description	deps/cowboy/erlang.mk	/^pkg_dtl_description = Django Template Language: A full-featured port of the Django template engine to Erlang.$/;"	m
pkg_dtl_fetch	deps/cowboy/erlang.mk	/^pkg_dtl_fetch = git$/;"	m
pkg_dtl_homepage	deps/cowboy/erlang.mk	/^pkg_dtl_homepage = https:\/\/github.com\/oinksoft\/dtl$/;"	m
pkg_dtl_name	deps/cowboy/erlang.mk	/^pkg_dtl_name = dtl$/;"	m
pkg_dtl_repo	deps/cowboy/erlang.mk	/^pkg_dtl_repo = https:\/\/github.com\/oinksoft\/dtl$/;"	m
pkg_dynamic_compile_commit	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_commit = master$/;"	m
pkg_dynamic_compile_description	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_description = compile and load erlang modules from string input$/;"	m
pkg_dynamic_compile_fetch	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_fetch = git$/;"	m
pkg_dynamic_compile_homepage	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_homepage = https:\/\/github.com\/jkvor\/dynamic_compile$/;"	m
pkg_dynamic_compile_name	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_name = dynamic_compile$/;"	m
pkg_dynamic_compile_repo	deps/cowboy/erlang.mk	/^pkg_dynamic_compile_repo = https:\/\/github.com\/jkvor\/dynamic_compile$/;"	m
pkg_e2_commit	deps/cowboy/erlang.mk	/^pkg_e2_commit = master$/;"	m
pkg_e2_description	deps/cowboy/erlang.mk	/^pkg_e2_description = Library to simply writing correct OTP applications.$/;"	m
pkg_e2_fetch	deps/cowboy/erlang.mk	/^pkg_e2_fetch = git$/;"	m
pkg_e2_homepage	deps/cowboy/erlang.mk	/^pkg_e2_homepage = http:\/\/e2project.org$/;"	m
pkg_e2_name	deps/cowboy/erlang.mk	/^pkg_e2_name = e2$/;"	m
pkg_e2_repo	deps/cowboy/erlang.mk	/^pkg_e2_repo = https:\/\/github.com\/gar1t\/e2$/;"	m
pkg_eamf_commit	deps/cowboy/erlang.mk	/^pkg_eamf_commit = master$/;"	m
pkg_eamf_description	deps/cowboy/erlang.mk	/^pkg_eamf_description = eAMF provides Action Message Format (AMF) support for Erlang$/;"	m
pkg_eamf_fetch	deps/cowboy/erlang.mk	/^pkg_eamf_fetch = git$/;"	m
pkg_eamf_homepage	deps/cowboy/erlang.mk	/^pkg_eamf_homepage = https:\/\/github.com\/mrinalwadhwa\/eamf$/;"	m
pkg_eamf_name	deps/cowboy/erlang.mk	/^pkg_eamf_name = eamf$/;"	m
pkg_eamf_repo	deps/cowboy/erlang.mk	/^pkg_eamf_repo = https:\/\/github.com\/mrinalwadhwa\/eamf$/;"	m
pkg_eavro_commit	deps/cowboy/erlang.mk	/^pkg_eavro_commit = master$/;"	m
pkg_eavro_description	deps/cowboy/erlang.mk	/^pkg_eavro_description = Apache Avro encoder\/decoder$/;"	m
pkg_eavro_fetch	deps/cowboy/erlang.mk	/^pkg_eavro_fetch = git$/;"	m
pkg_eavro_homepage	deps/cowboy/erlang.mk	/^pkg_eavro_homepage = https:\/\/github.com\/SIfoxDevTeam\/eavro$/;"	m
pkg_eavro_name	deps/cowboy/erlang.mk	/^pkg_eavro_name = eavro$/;"	m
pkg_eavro_repo	deps/cowboy/erlang.mk	/^pkg_eavro_repo = https:\/\/github.com\/SIfoxDevTeam\/eavro$/;"	m
pkg_ecapnp_commit	deps/cowboy/erlang.mk	/^pkg_ecapnp_commit = master$/;"	m
pkg_ecapnp_description	deps/cowboy/erlang.mk	/^pkg_ecapnp_description = Cap'n Proto library for Erlang$/;"	m
pkg_ecapnp_fetch	deps/cowboy/erlang.mk	/^pkg_ecapnp_fetch = git$/;"	m
pkg_ecapnp_homepage	deps/cowboy/erlang.mk	/^pkg_ecapnp_homepage = https:\/\/github.com\/kaos\/ecapnp$/;"	m
pkg_ecapnp_name	deps/cowboy/erlang.mk	/^pkg_ecapnp_name = ecapnp$/;"	m
pkg_ecapnp_repo	deps/cowboy/erlang.mk	/^pkg_ecapnp_repo = https:\/\/github.com\/kaos\/ecapnp$/;"	m
pkg_econfig_commit	deps/cowboy/erlang.mk	/^pkg_econfig_commit = master$/;"	m
pkg_econfig_description	deps/cowboy/erlang.mk	/^pkg_econfig_description = simple Erlang config handler using INI files$/;"	m
pkg_econfig_fetch	deps/cowboy/erlang.mk	/^pkg_econfig_fetch = git$/;"	m
pkg_econfig_homepage	deps/cowboy/erlang.mk	/^pkg_econfig_homepage = https:\/\/github.com\/benoitc\/econfig$/;"	m
pkg_econfig_name	deps/cowboy/erlang.mk	/^pkg_econfig_name = econfig$/;"	m
pkg_econfig_repo	deps/cowboy/erlang.mk	/^pkg_econfig_repo = https:\/\/github.com\/benoitc\/econfig$/;"	m
pkg_edate_commit	deps/cowboy/erlang.mk	/^pkg_edate_commit = master$/;"	m
pkg_edate_description	deps/cowboy/erlang.mk	/^pkg_edate_description = date manipulation library for erlang$/;"	m
pkg_edate_fetch	deps/cowboy/erlang.mk	/^pkg_edate_fetch = git$/;"	m
pkg_edate_homepage	deps/cowboy/erlang.mk	/^pkg_edate_homepage = https:\/\/github.com\/dweldon\/edate$/;"	m
pkg_edate_name	deps/cowboy/erlang.mk	/^pkg_edate_name = edate$/;"	m
pkg_edate_repo	deps/cowboy/erlang.mk	/^pkg_edate_repo = https:\/\/github.com\/dweldon\/edate$/;"	m
pkg_edgar_commit	deps/cowboy/erlang.mk	/^pkg_edgar_commit = master$/;"	m
pkg_edgar_description	deps/cowboy/erlang.mk	/^pkg_edgar_description = Erlang Does GNU AR$/;"	m
pkg_edgar_fetch	deps/cowboy/erlang.mk	/^pkg_edgar_fetch = git$/;"	m
pkg_edgar_homepage	deps/cowboy/erlang.mk	/^pkg_edgar_homepage = https:\/\/github.com\/crownedgrouse\/edgar$/;"	m
pkg_edgar_name	deps/cowboy/erlang.mk	/^pkg_edgar_name = edgar$/;"	m
pkg_edgar_repo	deps/cowboy/erlang.mk	/^pkg_edgar_repo = https:\/\/github.com\/crownedgrouse\/edgar$/;"	m
pkg_edis_commit	deps/cowboy/erlang.mk	/^pkg_edis_commit = master$/;"	m
pkg_edis_description	deps/cowboy/erlang.mk	/^pkg_edis_description = An Erlang implementation of Redis KV Store$/;"	m
pkg_edis_fetch	deps/cowboy/erlang.mk	/^pkg_edis_fetch = git$/;"	m
pkg_edis_homepage	deps/cowboy/erlang.mk	/^pkg_edis_homepage = http:\/\/inaka.github.com\/edis\/$/;"	m
pkg_edis_name	deps/cowboy/erlang.mk	/^pkg_edis_name = edis$/;"	m
pkg_edis_repo	deps/cowboy/erlang.mk	/^pkg_edis_repo = https:\/\/github.com\/inaka\/edis$/;"	m
pkg_edns_commit	deps/cowboy/erlang.mk	/^pkg_edns_commit = master$/;"	m
pkg_edns_description	deps/cowboy/erlang.mk	/^pkg_edns_description = Erlang\/OTP DNS server$/;"	m
pkg_edns_fetch	deps/cowboy/erlang.mk	/^pkg_edns_fetch = git$/;"	m
pkg_edns_homepage	deps/cowboy/erlang.mk	/^pkg_edns_homepage = https:\/\/github.com\/hcvst\/erlang-dns$/;"	m
pkg_edns_name	deps/cowboy/erlang.mk	/^pkg_edns_name = edns$/;"	m
pkg_edns_repo	deps/cowboy/erlang.mk	/^pkg_edns_repo = https:\/\/github.com\/hcvst\/erlang-dns$/;"	m
pkg_edown_commit	deps/cowboy/erlang.mk	/^pkg_edown_commit = master$/;"	m
pkg_edown_description	deps/cowboy/erlang.mk	/^pkg_edown_description = EDoc extension for generating Github-flavored Markdown$/;"	m
pkg_edown_fetch	deps/cowboy/erlang.mk	/^pkg_edown_fetch = git$/;"	m
pkg_edown_homepage	deps/cowboy/erlang.mk	/^pkg_edown_homepage = https:\/\/github.com\/uwiger\/edown$/;"	m
pkg_edown_name	deps/cowboy/erlang.mk	/^pkg_edown_name = edown$/;"	m
pkg_edown_repo	deps/cowboy/erlang.mk	/^pkg_edown_repo = https:\/\/github.com\/uwiger\/edown$/;"	m
pkg_eep_app_commit	deps/cowboy/erlang.mk	/^pkg_eep_app_commit = master$/;"	m
pkg_eep_app_description	deps/cowboy/erlang.mk	/^pkg_eep_app_description = Embedded Event Processing$/;"	m
pkg_eep_app_fetch	deps/cowboy/erlang.mk	/^pkg_eep_app_fetch = git$/;"	m
pkg_eep_app_homepage	deps/cowboy/erlang.mk	/^pkg_eep_app_homepage = https:\/\/github.com\/darach\/eep-erl$/;"	m
pkg_eep_app_name	deps/cowboy/erlang.mk	/^pkg_eep_app_name = eep_app$/;"	m
pkg_eep_app_repo	deps/cowboy/erlang.mk	/^pkg_eep_app_repo = https:\/\/github.com\/darach\/eep-erl$/;"	m
pkg_eep_commit	deps/cowboy/erlang.mk	/^pkg_eep_commit = master$/;"	m
pkg_eep_description	deps/cowboy/erlang.mk	/^pkg_eep_description = Erlang Easy Profiling (eep) application provides a way to analyze application performance and call hierarchy$/;"	m
pkg_eep_fetch	deps/cowboy/erlang.mk	/^pkg_eep_fetch = git$/;"	m
pkg_eep_homepage	deps/cowboy/erlang.mk	/^pkg_eep_homepage = https:\/\/github.com\/virtan\/eep$/;"	m
pkg_eep_name	deps/cowboy/erlang.mk	/^pkg_eep_name = eep$/;"	m
pkg_eep_repo	deps/cowboy/erlang.mk	/^pkg_eep_repo = https:\/\/github.com\/virtan\/eep$/;"	m
pkg_efene_commit	deps/cowboy/erlang.mk	/^pkg_efene_commit = master$/;"	m
pkg_efene_description	deps/cowboy/erlang.mk	/^pkg_efene_description = Alternative syntax for the Erlang Programming Language focusing on simplicity, ease of use and programmer UX$/;"	m
pkg_efene_fetch	deps/cowboy/erlang.mk	/^pkg_efene_fetch = git$/;"	m
pkg_efene_homepage	deps/cowboy/erlang.mk	/^pkg_efene_homepage = https:\/\/github.com\/efene\/efene$/;"	m
pkg_efene_name	deps/cowboy/erlang.mk	/^pkg_efene_name = efene$/;"	m
pkg_efene_repo	deps/cowboy/erlang.mk	/^pkg_efene_repo = https:\/\/github.com\/efene\/efene$/;"	m
pkg_eganglia_commit	deps/cowboy/erlang.mk	/^pkg_eganglia_commit = v0.9.1$/;"	m
pkg_eganglia_description	deps/cowboy/erlang.mk	/^pkg_eganglia_description = Erlang library to interact with Ganglia$/;"	m
pkg_eganglia_fetch	deps/cowboy/erlang.mk	/^pkg_eganglia_fetch = git$/;"	m
pkg_eganglia_homepage	deps/cowboy/erlang.mk	/^pkg_eganglia_homepage = https:\/\/github.com\/inaka\/eganglia$/;"	m
pkg_eganglia_name	deps/cowboy/erlang.mk	/^pkg_eganglia_name = eganglia$/;"	m
pkg_eganglia_repo	deps/cowboy/erlang.mk	/^pkg_eganglia_repo = https:\/\/github.com\/inaka\/eganglia$/;"	m
pkg_egeoip_commit	deps/cowboy/erlang.mk	/^pkg_egeoip_commit = master$/;"	m
pkg_egeoip_description	deps/cowboy/erlang.mk	/^pkg_egeoip_description = Erlang IP Geolocation module, currently supporting the MaxMind GeoLite City Database.$/;"	m
pkg_egeoip_fetch	deps/cowboy/erlang.mk	/^pkg_egeoip_fetch = git$/;"	m
pkg_egeoip_homepage	deps/cowboy/erlang.mk	/^pkg_egeoip_homepage = https:\/\/github.com\/mochi\/egeoip$/;"	m
pkg_egeoip_name	deps/cowboy/erlang.mk	/^pkg_egeoip_name = egeoip$/;"	m
pkg_egeoip_repo	deps/cowboy/erlang.mk	/^pkg_egeoip_repo = https:\/\/github.com\/mochi\/egeoip$/;"	m
pkg_ehsa_commit	deps/cowboy/erlang.mk	/^pkg_ehsa_commit = 2.0.4$/;"	m
pkg_ehsa_description	deps/cowboy/erlang.mk	/^pkg_ehsa_description = Erlang HTTP server basic and digest authentication modules$/;"	m
pkg_ehsa_fetch	deps/cowboy/erlang.mk	/^pkg_ehsa_fetch = hg$/;"	m
pkg_ehsa_homepage	deps/cowboy/erlang.mk	/^pkg_ehsa_homepage = https:\/\/bitbucket.org\/a12n\/ehsa$/;"	m
pkg_ehsa_name	deps/cowboy/erlang.mk	/^pkg_ehsa_name = ehsa$/;"	m
pkg_ehsa_repo	deps/cowboy/erlang.mk	/^pkg_ehsa_repo = https:\/\/bitbucket.org\/a12n\/ehsa$/;"	m
pkg_ej_commit	deps/cowboy/erlang.mk	/^pkg_ej_commit = master$/;"	m
pkg_ej_description	deps/cowboy/erlang.mk	/^pkg_ej_description = Helper module for working with Erlang terms representing JSON$/;"	m
pkg_ej_fetch	deps/cowboy/erlang.mk	/^pkg_ej_fetch = git$/;"	m
pkg_ej_homepage	deps/cowboy/erlang.mk	/^pkg_ej_homepage = https:\/\/github.com\/seth\/ej$/;"	m
pkg_ej_name	deps/cowboy/erlang.mk	/^pkg_ej_name = ej$/;"	m
pkg_ej_repo	deps/cowboy/erlang.mk	/^pkg_ej_repo = https:\/\/github.com\/seth\/ej$/;"	m
pkg_ejabberd_commit	deps/cowboy/erlang.mk	/^pkg_ejabberd_commit = master$/;"	m
pkg_ejabberd_description	deps/cowboy/erlang.mk	/^pkg_ejabberd_description = Robust, ubiquitous and massively scalable Jabber \/ XMPP Instant Messaging platform$/;"	m
pkg_ejabberd_fetch	deps/cowboy/erlang.mk	/^pkg_ejabberd_fetch = git$/;"	m
pkg_ejabberd_homepage	deps/cowboy/erlang.mk	/^pkg_ejabberd_homepage = https:\/\/github.com\/processone\/ejabberd$/;"	m
pkg_ejabberd_name	deps/cowboy/erlang.mk	/^pkg_ejabberd_name = ejabberd$/;"	m
pkg_ejabberd_repo	deps/cowboy/erlang.mk	/^pkg_ejabberd_repo = https:\/\/github.com\/processone\/ejabberd$/;"	m
pkg_ejwt_commit	deps/cowboy/erlang.mk	/^pkg_ejwt_commit = master$/;"	m
pkg_ejwt_description	deps/cowboy/erlang.mk	/^pkg_ejwt_description = erlang library for JSON Web Token$/;"	m
pkg_ejwt_fetch	deps/cowboy/erlang.mk	/^pkg_ejwt_fetch = git$/;"	m
pkg_ejwt_homepage	deps/cowboy/erlang.mk	/^pkg_ejwt_homepage = https:\/\/github.com\/artefactop\/ejwt$/;"	m
pkg_ejwt_name	deps/cowboy/erlang.mk	/^pkg_ejwt_name = ejwt$/;"	m
pkg_ejwt_repo	deps/cowboy/erlang.mk	/^pkg_ejwt_repo = https:\/\/github.com\/artefactop\/ejwt$/;"	m
pkg_ekaf_commit	deps/cowboy/erlang.mk	/^pkg_ekaf_commit = master$/;"	m
pkg_ekaf_description	deps/cowboy/erlang.mk	/^pkg_ekaf_description = A minimal, high-performance Kafka client in Erlang.$/;"	m
pkg_ekaf_fetch	deps/cowboy/erlang.mk	/^pkg_ekaf_fetch = git$/;"	m
pkg_ekaf_homepage	deps/cowboy/erlang.mk	/^pkg_ekaf_homepage = https:\/\/github.com\/helpshift\/ekaf$/;"	m
pkg_ekaf_name	deps/cowboy/erlang.mk	/^pkg_ekaf_name = ekaf$/;"	m
pkg_ekaf_repo	deps/cowboy/erlang.mk	/^pkg_ekaf_repo = https:\/\/github.com\/helpshift\/ekaf$/;"	m
pkg_elarm_commit	deps/cowboy/erlang.mk	/^pkg_elarm_commit = master$/;"	m
pkg_elarm_description	deps/cowboy/erlang.mk	/^pkg_elarm_description = Alarm Manager for Erlang.$/;"	m
pkg_elarm_fetch	deps/cowboy/erlang.mk	/^pkg_elarm_fetch = git$/;"	m
pkg_elarm_homepage	deps/cowboy/erlang.mk	/^pkg_elarm_homepage = https:\/\/github.com\/esl\/elarm$/;"	m
pkg_elarm_name	deps/cowboy/erlang.mk	/^pkg_elarm_name = elarm$/;"	m
pkg_elarm_repo	deps/cowboy/erlang.mk	/^pkg_elarm_repo = https:\/\/github.com\/esl\/elarm$/;"	m
pkg_eleveldb_commit	deps/cowboy/erlang.mk	/^pkg_eleveldb_commit = master$/;"	m
pkg_eleveldb_description	deps/cowboy/erlang.mk	/^pkg_eleveldb_description = Erlang LevelDB API$/;"	m
pkg_eleveldb_fetch	deps/cowboy/erlang.mk	/^pkg_eleveldb_fetch = git$/;"	m
pkg_eleveldb_homepage	deps/cowboy/erlang.mk	/^pkg_eleveldb_homepage = https:\/\/github.com\/basho\/eleveldb$/;"	m
pkg_eleveldb_name	deps/cowboy/erlang.mk	/^pkg_eleveldb_name = eleveldb$/;"	m
pkg_eleveldb_repo	deps/cowboy/erlang.mk	/^pkg_eleveldb_repo = https:\/\/github.com\/basho\/eleveldb$/;"	m
pkg_elli_commit	deps/cowboy/erlang.mk	/^pkg_elli_commit = master$/;"	m
pkg_elli_description	deps/cowboy/erlang.mk	/^pkg_elli_description = Simple, robust and performant Erlang web server$/;"	m
pkg_elli_fetch	deps/cowboy/erlang.mk	/^pkg_elli_fetch = git$/;"	m
pkg_elli_homepage	deps/cowboy/erlang.mk	/^pkg_elli_homepage = https:\/\/github.com\/knutin\/elli$/;"	m
pkg_elli_name	deps/cowboy/erlang.mk	/^pkg_elli_name = elli$/;"	m
pkg_elli_repo	deps/cowboy/erlang.mk	/^pkg_elli_repo = https:\/\/github.com\/knutin\/elli$/;"	m
pkg_elvis_commit	deps/cowboy/erlang.mk	/^pkg_elvis_commit = 0.2.4$/;"	m
pkg_elvis_description	deps/cowboy/erlang.mk	/^pkg_elvis_description = Erlang Style Reviewer$/;"	m
pkg_elvis_fetch	deps/cowboy/erlang.mk	/^pkg_elvis_fetch = git$/;"	m
pkg_elvis_homepage	deps/cowboy/erlang.mk	/^pkg_elvis_homepage = https:\/\/github.com\/inaka\/elvis$/;"	m
pkg_elvis_name	deps/cowboy/erlang.mk	/^pkg_elvis_name = elvis$/;"	m
pkg_elvis_repo	deps/cowboy/erlang.mk	/^pkg_elvis_repo = https:\/\/github.com\/inaka\/elvis$/;"	m
pkg_emagick_commit	deps/cowboy/erlang.mk	/^pkg_emagick_commit = master$/;"	m
pkg_emagick_description	deps/cowboy/erlang.mk	/^pkg_emagick_description = Wrapper for Graphics\/ImageMagick command line tool.$/;"	m
pkg_emagick_fetch	deps/cowboy/erlang.mk	/^pkg_emagick_fetch = git$/;"	m
pkg_emagick_homepage	deps/cowboy/erlang.mk	/^pkg_emagick_homepage = https:\/\/github.com\/kivra\/emagick$/;"	m
pkg_emagick_name	deps/cowboy/erlang.mk	/^pkg_emagick_name = emagick$/;"	m
pkg_emagick_repo	deps/cowboy/erlang.mk	/^pkg_emagick_repo = https:\/\/github.com\/kivra\/emagick$/;"	m
pkg_emysql_commit	deps/cowboy/erlang.mk	/^pkg_emysql_commit = master$/;"	m
pkg_emysql_description	deps/cowboy/erlang.mk	/^pkg_emysql_description = Stable, pure Erlang MySQL driver.$/;"	m
pkg_emysql_fetch	deps/cowboy/erlang.mk	/^pkg_emysql_fetch = git$/;"	m
pkg_emysql_homepage	deps/cowboy/erlang.mk	/^pkg_emysql_homepage = https:\/\/github.com\/Eonblast\/Emysql$/;"	m
pkg_emysql_name	deps/cowboy/erlang.mk	/^pkg_emysql_name = emysql$/;"	m
pkg_emysql_repo	deps/cowboy/erlang.mk	/^pkg_emysql_repo = https:\/\/github.com\/Eonblast\/Emysql$/;"	m
pkg_enm_commit	deps/cowboy/erlang.mk	/^pkg_enm_commit = master$/;"	m
pkg_enm_description	deps/cowboy/erlang.mk	/^pkg_enm_description = Erlang driver for nanomsg$/;"	m
pkg_enm_fetch	deps/cowboy/erlang.mk	/^pkg_enm_fetch = git$/;"	m
pkg_enm_homepage	deps/cowboy/erlang.mk	/^pkg_enm_homepage = https:\/\/github.com\/basho\/enm$/;"	m
pkg_enm_name	deps/cowboy/erlang.mk	/^pkg_enm_name = enm$/;"	m
pkg_enm_repo	deps/cowboy/erlang.mk	/^pkg_enm_repo = https:\/\/github.com\/basho\/enm$/;"	m
pkg_entop_commit	deps/cowboy/erlang.mk	/^pkg_entop_commit = master$/;"	m
pkg_entop_description	deps/cowboy/erlang.mk	/^pkg_entop_description = A top-like tool for monitoring an Erlang node$/;"	m
pkg_entop_fetch	deps/cowboy/erlang.mk	/^pkg_entop_fetch = git$/;"	m
pkg_entop_homepage	deps/cowboy/erlang.mk	/^pkg_entop_homepage = https:\/\/github.com\/mazenharake\/entop$/;"	m
pkg_entop_name	deps/cowboy/erlang.mk	/^pkg_entop_name = entop$/;"	m
pkg_entop_repo	deps/cowboy/erlang.mk	/^pkg_entop_repo = https:\/\/github.com\/mazenharake\/entop$/;"	m
pkg_epcap_commit	deps/cowboy/erlang.mk	/^pkg_epcap_commit = master$/;"	m
pkg_epcap_description	deps/cowboy/erlang.mk	/^pkg_epcap_description = Erlang packet capture interface using pcap$/;"	m
pkg_epcap_fetch	deps/cowboy/erlang.mk	/^pkg_epcap_fetch = git$/;"	m
pkg_epcap_homepage	deps/cowboy/erlang.mk	/^pkg_epcap_homepage = https:\/\/github.com\/msantos\/epcap$/;"	m
pkg_epcap_name	deps/cowboy/erlang.mk	/^pkg_epcap_name = epcap$/;"	m
pkg_epcap_repo	deps/cowboy/erlang.mk	/^pkg_epcap_repo = https:\/\/github.com\/msantos\/epcap$/;"	m
pkg_eper_commit	deps/cowboy/erlang.mk	/^pkg_eper_commit = master$/;"	m
pkg_eper_description	deps/cowboy/erlang.mk	/^pkg_eper_description = Erlang performance and debugging tools.$/;"	m
pkg_eper_fetch	deps/cowboy/erlang.mk	/^pkg_eper_fetch = git$/;"	m
pkg_eper_homepage	deps/cowboy/erlang.mk	/^pkg_eper_homepage = https:\/\/github.com\/massemanet\/eper$/;"	m
pkg_eper_name	deps/cowboy/erlang.mk	/^pkg_eper_name = eper$/;"	m
pkg_eper_repo	deps/cowboy/erlang.mk	/^pkg_eper_repo = https:\/\/github.com\/massemanet\/eper$/;"	m
pkg_epgsql_commit	deps/cowboy/erlang.mk	/^pkg_epgsql_commit = master$/;"	m
pkg_epgsql_description	deps/cowboy/erlang.mk	/^pkg_epgsql_description = Erlang PostgreSQL client library.$/;"	m
pkg_epgsql_fetch	deps/cowboy/erlang.mk	/^pkg_epgsql_fetch = git$/;"	m
pkg_epgsql_homepage	deps/cowboy/erlang.mk	/^pkg_epgsql_homepage = https:\/\/github.com\/epgsql\/epgsql$/;"	m
pkg_epgsql_name	deps/cowboy/erlang.mk	/^pkg_epgsql_name = epgsql$/;"	m
pkg_epgsql_repo	deps/cowboy/erlang.mk	/^pkg_epgsql_repo = https:\/\/github.com\/epgsql\/epgsql$/;"	m
pkg_episcina_commit	deps/cowboy/erlang.mk	/^pkg_episcina_commit = master$/;"	m
pkg_episcina_description	deps/cowboy/erlang.mk	/^pkg_episcina_description = A simple non intrusive resource pool for connections$/;"	m
pkg_episcina_fetch	deps/cowboy/erlang.mk	/^pkg_episcina_fetch = git$/;"	m
pkg_episcina_homepage	deps/cowboy/erlang.mk	/^pkg_episcina_homepage = https:\/\/github.com\/erlware\/episcina$/;"	m
pkg_episcina_name	deps/cowboy/erlang.mk	/^pkg_episcina_name = episcina$/;"	m
pkg_episcina_repo	deps/cowboy/erlang.mk	/^pkg_episcina_repo = https:\/\/github.com\/erlware\/episcina$/;"	m
pkg_eplot_commit	deps/cowboy/erlang.mk	/^pkg_eplot_commit = master$/;"	m
pkg_eplot_description	deps/cowboy/erlang.mk	/^pkg_eplot_description = A plot engine written in erlang.$/;"	m
pkg_eplot_fetch	deps/cowboy/erlang.mk	/^pkg_eplot_fetch = git$/;"	m
pkg_eplot_homepage	deps/cowboy/erlang.mk	/^pkg_eplot_homepage = https:\/\/github.com\/psyeugenic\/eplot$/;"	m
pkg_eplot_name	deps/cowboy/erlang.mk	/^pkg_eplot_name = eplot$/;"	m
pkg_eplot_repo	deps/cowboy/erlang.mk	/^pkg_eplot_repo = https:\/\/github.com\/psyeugenic\/eplot$/;"	m
pkg_epocxy_commit	deps/cowboy/erlang.mk	/^pkg_epocxy_commit = master$/;"	m
pkg_epocxy_description	deps/cowboy/erlang.mk	/^pkg_epocxy_description = Erlang Patterns of Concurrency$/;"	m
pkg_epocxy_fetch	deps/cowboy/erlang.mk	/^pkg_epocxy_fetch = git$/;"	m
pkg_epocxy_homepage	deps/cowboy/erlang.mk	/^pkg_epocxy_homepage = https:\/\/github.com\/duomark\/epocxy$/;"	m
pkg_epocxy_name	deps/cowboy/erlang.mk	/^pkg_epocxy_name = epocxy$/;"	m
pkg_epocxy_repo	deps/cowboy/erlang.mk	/^pkg_epocxy_repo = https:\/\/github.com\/duomark\/epocxy$/;"	m
pkg_epubnub_commit	deps/cowboy/erlang.mk	/^pkg_epubnub_commit = master$/;"	m
pkg_epubnub_description	deps/cowboy/erlang.mk	/^pkg_epubnub_description = Erlang PubNub API$/;"	m
pkg_epubnub_fetch	deps/cowboy/erlang.mk	/^pkg_epubnub_fetch = git$/;"	m
pkg_epubnub_homepage	deps/cowboy/erlang.mk	/^pkg_epubnub_homepage = https:\/\/github.com\/tsloughter\/epubnub$/;"	m
pkg_epubnub_name	deps/cowboy/erlang.mk	/^pkg_epubnub_name = epubnub$/;"	m
pkg_epubnub_repo	deps/cowboy/erlang.mk	/^pkg_epubnub_repo = https:\/\/github.com\/tsloughter\/epubnub$/;"	m
pkg_eqm_commit	deps/cowboy/erlang.mk	/^pkg_eqm_commit = master$/;"	m
pkg_eqm_description	deps/cowboy/erlang.mk	/^pkg_eqm_description = Erlang pub sub with supply-demand channels$/;"	m
pkg_eqm_fetch	deps/cowboy/erlang.mk	/^pkg_eqm_fetch = git$/;"	m
pkg_eqm_homepage	deps/cowboy/erlang.mk	/^pkg_eqm_homepage = https:\/\/github.com\/loucash\/eqm$/;"	m
pkg_eqm_name	deps/cowboy/erlang.mk	/^pkg_eqm_name = eqm$/;"	m
pkg_eqm_repo	deps/cowboy/erlang.mk	/^pkg_eqm_repo = https:\/\/github.com\/loucash\/eqm$/;"	m
pkg_eredis_commit	deps/cowboy/erlang.mk	/^pkg_eredis_commit = master$/;"	m
pkg_eredis_description	deps/cowboy/erlang.mk	/^pkg_eredis_description = Erlang Redis client$/;"	m
pkg_eredis_fetch	deps/cowboy/erlang.mk	/^pkg_eredis_fetch = git$/;"	m
pkg_eredis_homepage	deps/cowboy/erlang.mk	/^pkg_eredis_homepage = https:\/\/github.com\/wooga\/eredis$/;"	m
pkg_eredis_name	deps/cowboy/erlang.mk	/^pkg_eredis_name = eredis$/;"	m
pkg_eredis_pool_commit	deps/cowboy/erlang.mk	/^pkg_eredis_pool_commit = master$/;"	m
pkg_eredis_pool_description	deps/cowboy/erlang.mk	/^pkg_eredis_pool_description = eredis_pool is Pool of Redis clients, using eredis and poolboy.$/;"	m
pkg_eredis_pool_fetch	deps/cowboy/erlang.mk	/^pkg_eredis_pool_fetch = git$/;"	m
pkg_eredis_pool_homepage	deps/cowboy/erlang.mk	/^pkg_eredis_pool_homepage = https:\/\/github.com\/hiroeorz\/eredis_pool$/;"	m
pkg_eredis_pool_name	deps/cowboy/erlang.mk	/^pkg_eredis_pool_name = eredis_pool$/;"	m
pkg_eredis_pool_repo	deps/cowboy/erlang.mk	/^pkg_eredis_pool_repo = https:\/\/github.com\/hiroeorz\/eredis_pool$/;"	m
pkg_eredis_repo	deps/cowboy/erlang.mk	/^pkg_eredis_repo = https:\/\/github.com\/wooga\/eredis$/;"	m
pkg_erl_streams_commit	deps/cowboy/erlang.mk	/^pkg_erl_streams_commit = master$/;"	m
pkg_erl_streams_description	deps/cowboy/erlang.mk	/^pkg_erl_streams_description = Streams in Erlang$/;"	m
pkg_erl_streams_fetch	deps/cowboy/erlang.mk	/^pkg_erl_streams_fetch = git$/;"	m
pkg_erl_streams_homepage	deps/cowboy/erlang.mk	/^pkg_erl_streams_homepage = https:\/\/github.com\/epappas\/erl_streams$/;"	m
pkg_erl_streams_name	deps/cowboy/erlang.mk	/^pkg_erl_streams_name = erl_streams$/;"	m
pkg_erl_streams_repo	deps/cowboy/erlang.mk	/^pkg_erl_streams_repo = https:\/\/github.com\/epappas\/erl_streams$/;"	m
pkg_erlang_cep_commit	deps/cowboy/erlang.mk	/^pkg_erlang_cep_commit = master$/;"	m
pkg_erlang_cep_description	deps/cowboy/erlang.mk	/^pkg_erlang_cep_description = A basic CEP package written in erlang$/;"	m
pkg_erlang_cep_fetch	deps/cowboy/erlang.mk	/^pkg_erlang_cep_fetch = git$/;"	m
pkg_erlang_cep_homepage	deps/cowboy/erlang.mk	/^pkg_erlang_cep_homepage = https:\/\/github.com\/danmacklin\/erlang_cep$/;"	m
pkg_erlang_cep_name	deps/cowboy/erlang.mk	/^pkg_erlang_cep_name = erlang_cep$/;"	m
pkg_erlang_cep_repo	deps/cowboy/erlang.mk	/^pkg_erlang_cep_repo = https:\/\/github.com\/danmacklin\/erlang_cep$/;"	m
pkg_erlang_js_commit	deps/cowboy/erlang.mk	/^pkg_erlang_js_commit = master$/;"	m
pkg_erlang_js_description	deps/cowboy/erlang.mk	/^pkg_erlang_js_description = A linked-in driver for Erlang to Mozilla's Spidermonkey Javascript runtime.$/;"	m
pkg_erlang_js_fetch	deps/cowboy/erlang.mk	/^pkg_erlang_js_fetch = git$/;"	m
pkg_erlang_js_homepage	deps/cowboy/erlang.mk	/^pkg_erlang_js_homepage = https:\/\/github.com\/basho\/erlang_js$/;"	m
pkg_erlang_js_name	deps/cowboy/erlang.mk	/^pkg_erlang_js_name = erlang_js$/;"	m
pkg_erlang_js_repo	deps/cowboy/erlang.mk	/^pkg_erlang_js_repo = https:\/\/github.com\/basho\/erlang_js$/;"	m
pkg_erlang_localtime_commit	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_commit = master$/;"	m
pkg_erlang_localtime_description	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_description = Erlang library for conversion from one local time to another$/;"	m
pkg_erlang_localtime_fetch	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_fetch = git$/;"	m
pkg_erlang_localtime_homepage	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_homepage = https:\/\/github.com\/dmitryme\/erlang_localtime$/;"	m
pkg_erlang_localtime_name	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_name = erlang_localtime$/;"	m
pkg_erlang_localtime_repo	deps/cowboy/erlang.mk	/^pkg_erlang_localtime_repo = https:\/\/github.com\/dmitryme\/erlang_localtime$/;"	m
pkg_erlang_smtp_commit	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_commit = master$/;"	m
pkg_erlang_smtp_description	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_description = Erlang SMTP and POP3 server code.$/;"	m
pkg_erlang_smtp_fetch	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_fetch = git$/;"	m
pkg_erlang_smtp_homepage	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_homepage = https:\/\/github.com\/tonyg\/erlang-smtp$/;"	m
pkg_erlang_smtp_name	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_name = erlang_smtp$/;"	m
pkg_erlang_smtp_repo	deps/cowboy/erlang.mk	/^pkg_erlang_smtp_repo = https:\/\/github.com\/tonyg\/erlang-smtp$/;"	m
pkg_erlang_term_commit	deps/cowboy/erlang.mk	/^pkg_erlang_term_commit = master$/;"	m
pkg_erlang_term_description	deps/cowboy/erlang.mk	/^pkg_erlang_term_description = Erlang Term Info$/;"	m
pkg_erlang_term_fetch	deps/cowboy/erlang.mk	/^pkg_erlang_term_fetch = git$/;"	m
pkg_erlang_term_homepage	deps/cowboy/erlang.mk	/^pkg_erlang_term_homepage = https:\/\/github.com\/okeuday\/erlang_term$/;"	m
pkg_erlang_term_name	deps/cowboy/erlang.mk	/^pkg_erlang_term_name = erlang_term$/;"	m
pkg_erlang_term_repo	deps/cowboy/erlang.mk	/^pkg_erlang_term_repo = https:\/\/github.com\/okeuday\/erlang_term$/;"	m
pkg_erlastic_search_commit	deps/cowboy/erlang.mk	/^pkg_erlastic_search_commit = master$/;"	m
pkg_erlastic_search_description	deps/cowboy/erlang.mk	/^pkg_erlastic_search_description = An Erlang app for communicating with Elastic Search's rest interface.$/;"	m
pkg_erlastic_search_fetch	deps/cowboy/erlang.mk	/^pkg_erlastic_search_fetch = git$/;"	m
pkg_erlastic_search_homepage	deps/cowboy/erlang.mk	/^pkg_erlastic_search_homepage = https:\/\/github.com\/tsloughter\/erlastic_search$/;"	m
pkg_erlastic_search_name	deps/cowboy/erlang.mk	/^pkg_erlastic_search_name = erlastic_search$/;"	m
pkg_erlastic_search_repo	deps/cowboy/erlang.mk	/^pkg_erlastic_search_repo = https:\/\/github.com\/tsloughter\/erlastic_search$/;"	m
pkg_erlasticsearch_commit	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_commit = master$/;"	m
pkg_erlasticsearch_description	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_description = Erlang thrift interface to elastic_search$/;"	m
pkg_erlasticsearch_fetch	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_fetch = git$/;"	m
pkg_erlasticsearch_homepage	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_homepage = https:\/\/github.com\/dieswaytoofast\/erlasticsearch$/;"	m
pkg_erlasticsearch_name	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_name = erlasticsearch$/;"	m
pkg_erlasticsearch_repo	deps/cowboy/erlang.mk	/^pkg_erlasticsearch_repo = https:\/\/github.com\/dieswaytoofast\/erlasticsearch$/;"	m
pkg_erlbrake_commit	deps/cowboy/erlang.mk	/^pkg_erlbrake_commit = master$/;"	m
pkg_erlbrake_description	deps/cowboy/erlang.mk	/^pkg_erlbrake_description = Erlang Airbrake notification client$/;"	m
pkg_erlbrake_fetch	deps/cowboy/erlang.mk	/^pkg_erlbrake_fetch = git$/;"	m
pkg_erlbrake_homepage	deps/cowboy/erlang.mk	/^pkg_erlbrake_homepage = https:\/\/github.com\/kenpratt\/erlbrake$/;"	m
pkg_erlbrake_name	deps/cowboy/erlang.mk	/^pkg_erlbrake_name = erlbrake$/;"	m
pkg_erlbrake_repo	deps/cowboy/erlang.mk	/^pkg_erlbrake_repo = https:\/\/github.com\/kenpratt\/erlbrake$/;"	m
pkg_erlcloud_commit	deps/cowboy/erlang.mk	/^pkg_erlcloud_commit = master$/;"	m
pkg_erlcloud_description	deps/cowboy/erlang.mk	/^pkg_erlcloud_description = Cloud Computing library for erlang (Amazon EC2, S3, SQS, SimpleDB, Mechanical Turk, ELB)$/;"	m
pkg_erlcloud_fetch	deps/cowboy/erlang.mk	/^pkg_erlcloud_fetch = git$/;"	m
pkg_erlcloud_homepage	deps/cowboy/erlang.mk	/^pkg_erlcloud_homepage = https:\/\/github.com\/gleber\/erlcloud$/;"	m
pkg_erlcloud_name	deps/cowboy/erlang.mk	/^pkg_erlcloud_name = erlcloud$/;"	m
pkg_erlcloud_repo	deps/cowboy/erlang.mk	/^pkg_erlcloud_repo = https:\/\/github.com\/gleber\/erlcloud$/;"	m
pkg_erlcron_commit	deps/cowboy/erlang.mk	/^pkg_erlcron_commit = master$/;"	m
pkg_erlcron_description	deps/cowboy/erlang.mk	/^pkg_erlcron_description = Erlang cronish system$/;"	m
pkg_erlcron_fetch	deps/cowboy/erlang.mk	/^pkg_erlcron_fetch = git$/;"	m
pkg_erlcron_homepage	deps/cowboy/erlang.mk	/^pkg_erlcron_homepage = https:\/\/github.com\/erlware\/erlcron$/;"	m
pkg_erlcron_name	deps/cowboy/erlang.mk	/^pkg_erlcron_name = erlcron$/;"	m
pkg_erlcron_repo	deps/cowboy/erlang.mk	/^pkg_erlcron_repo = https:\/\/github.com\/erlware\/erlcron$/;"	m
pkg_erldb_commit	deps/cowboy/erlang.mk	/^pkg_erldb_commit = master$/;"	m
pkg_erldb_description	deps/cowboy/erlang.mk	/^pkg_erldb_description = ORM (Object-relational mapping) application implemented in Erlang$/;"	m
pkg_erldb_fetch	deps/cowboy/erlang.mk	/^pkg_erldb_fetch = git$/;"	m
pkg_erldb_homepage	deps/cowboy/erlang.mk	/^pkg_erldb_homepage = http:\/\/erldb.org$/;"	m
pkg_erldb_name	deps/cowboy/erlang.mk	/^pkg_erldb_name = erldb$/;"	m
pkg_erldb_repo	deps/cowboy/erlang.mk	/^pkg_erldb_repo = https:\/\/github.com\/erldb\/erldb$/;"	m
pkg_erldis_commit	deps/cowboy/erlang.mk	/^pkg_erldis_commit = master$/;"	m
pkg_erldis_description	deps/cowboy/erlang.mk	/^pkg_erldis_description = redis erlang client library$/;"	m
pkg_erldis_fetch	deps/cowboy/erlang.mk	/^pkg_erldis_fetch = git$/;"	m
pkg_erldis_homepage	deps/cowboy/erlang.mk	/^pkg_erldis_homepage = https:\/\/github.com\/cstar\/erldis$/;"	m
pkg_erldis_name	deps/cowboy/erlang.mk	/^pkg_erldis_name = erldis$/;"	m
pkg_erldis_repo	deps/cowboy/erlang.mk	/^pkg_erldis_repo = https:\/\/github.com\/cstar\/erldis$/;"	m
pkg_erldns_commit	deps/cowboy/erlang.mk	/^pkg_erldns_commit = master$/;"	m
pkg_erldns_description	deps/cowboy/erlang.mk	/^pkg_erldns_description = DNS server, in erlang.$/;"	m
pkg_erldns_fetch	deps/cowboy/erlang.mk	/^pkg_erldns_fetch = git$/;"	m
pkg_erldns_homepage	deps/cowboy/erlang.mk	/^pkg_erldns_homepage = https:\/\/github.com\/aetrion\/erl-dns$/;"	m
pkg_erldns_name	deps/cowboy/erlang.mk	/^pkg_erldns_name = erldns$/;"	m
pkg_erldns_repo	deps/cowboy/erlang.mk	/^pkg_erldns_repo = https:\/\/github.com\/aetrion\/erl-dns$/;"	m
pkg_erldocker_commit	deps/cowboy/erlang.mk	/^pkg_erldocker_commit = master$/;"	m
pkg_erldocker_description	deps/cowboy/erlang.mk	/^pkg_erldocker_description = Docker Remote API client for Erlang$/;"	m
pkg_erldocker_fetch	deps/cowboy/erlang.mk	/^pkg_erldocker_fetch = git$/;"	m
pkg_erldocker_homepage	deps/cowboy/erlang.mk	/^pkg_erldocker_homepage = https:\/\/github.com\/proger\/erldocker$/;"	m
pkg_erldocker_name	deps/cowboy/erlang.mk	/^pkg_erldocker_name = erldocker$/;"	m
pkg_erldocker_repo	deps/cowboy/erlang.mk	/^pkg_erldocker_repo = https:\/\/github.com\/proger\/erldocker$/;"	m
pkg_erlfsmon_commit	deps/cowboy/erlang.mk	/^pkg_erlfsmon_commit = master$/;"	m
pkg_erlfsmon_description	deps/cowboy/erlang.mk	/^pkg_erlfsmon_description = Erlang filesystem event watcher for Linux and OSX$/;"	m
pkg_erlfsmon_fetch	deps/cowboy/erlang.mk	/^pkg_erlfsmon_fetch = git$/;"	m
pkg_erlfsmon_homepage	deps/cowboy/erlang.mk	/^pkg_erlfsmon_homepage = https:\/\/github.com\/proger\/erlfsmon$/;"	m
pkg_erlfsmon_name	deps/cowboy/erlang.mk	/^pkg_erlfsmon_name = erlfsmon$/;"	m
pkg_erlfsmon_repo	deps/cowboy/erlang.mk	/^pkg_erlfsmon_repo = https:\/\/github.com\/proger\/erlfsmon$/;"	m
pkg_erlgit_commit	deps/cowboy/erlang.mk	/^pkg_erlgit_commit = master$/;"	m
pkg_erlgit_description	deps/cowboy/erlang.mk	/^pkg_erlgit_description = Erlang convenience wrapper around git executable$/;"	m
pkg_erlgit_fetch	deps/cowboy/erlang.mk	/^pkg_erlgit_fetch = git$/;"	m
pkg_erlgit_homepage	deps/cowboy/erlang.mk	/^pkg_erlgit_homepage = https:\/\/github.com\/gleber\/erlgit$/;"	m
pkg_erlgit_name	deps/cowboy/erlang.mk	/^pkg_erlgit_name = erlgit$/;"	m
pkg_erlgit_repo	deps/cowboy/erlang.mk	/^pkg_erlgit_repo = https:\/\/github.com\/gleber\/erlgit$/;"	m
pkg_erlguten_commit	deps/cowboy/erlang.mk	/^pkg_erlguten_commit = master$/;"	m
pkg_erlguten_description	deps/cowboy/erlang.mk	/^pkg_erlguten_description = ErlGuten is a system for high-quality typesetting, written purely in Erlang.$/;"	m
pkg_erlguten_fetch	deps/cowboy/erlang.mk	/^pkg_erlguten_fetch = git$/;"	m
pkg_erlguten_homepage	deps/cowboy/erlang.mk	/^pkg_erlguten_homepage = https:\/\/github.com\/richcarl\/erlguten$/;"	m
pkg_erlguten_name	deps/cowboy/erlang.mk	/^pkg_erlguten_name = erlguten$/;"	m
pkg_erlguten_repo	deps/cowboy/erlang.mk	/^pkg_erlguten_repo = https:\/\/github.com\/richcarl\/erlguten$/;"	m
pkg_erlmc_commit	deps/cowboy/erlang.mk	/^pkg_erlmc_commit = master$/;"	m
pkg_erlmc_description	deps/cowboy/erlang.mk	/^pkg_erlmc_description = Erlang memcached binary protocol client$/;"	m
pkg_erlmc_fetch	deps/cowboy/erlang.mk	/^pkg_erlmc_fetch = git$/;"	m
pkg_erlmc_homepage	deps/cowboy/erlang.mk	/^pkg_erlmc_homepage = https:\/\/github.com\/jkvor\/erlmc$/;"	m
pkg_erlmc_name	deps/cowboy/erlang.mk	/^pkg_erlmc_name = erlmc$/;"	m
pkg_erlmc_repo	deps/cowboy/erlang.mk	/^pkg_erlmc_repo = https:\/\/github.com\/jkvor\/erlmc$/;"	m
pkg_erlmongo_commit	deps/cowboy/erlang.mk	/^pkg_erlmongo_commit = master$/;"	m
pkg_erlmongo_description	deps/cowboy/erlang.mk	/^pkg_erlmongo_description = Record based Erlang driver for MongoDB with gridfs support$/;"	m
pkg_erlmongo_fetch	deps/cowboy/erlang.mk	/^pkg_erlmongo_fetch = git$/;"	m
pkg_erlmongo_homepage	deps/cowboy/erlang.mk	/^pkg_erlmongo_homepage = https:\/\/github.com\/SergejJurecko\/erlmongo$/;"	m
pkg_erlmongo_name	deps/cowboy/erlang.mk	/^pkg_erlmongo_name = erlmongo$/;"	m
pkg_erlmongo_repo	deps/cowboy/erlang.mk	/^pkg_erlmongo_repo = https:\/\/github.com\/SergejJurecko\/erlmongo$/;"	m
pkg_erlog_commit	deps/cowboy/erlang.mk	/^pkg_erlog_commit = master$/;"	m
pkg_erlog_description	deps/cowboy/erlang.mk	/^pkg_erlog_description = Prolog interpreter in and for Erlang$/;"	m
pkg_erlog_fetch	deps/cowboy/erlang.mk	/^pkg_erlog_fetch = git$/;"	m
pkg_erlog_homepage	deps/cowboy/erlang.mk	/^pkg_erlog_homepage = https:\/\/github.com\/rvirding\/erlog$/;"	m
pkg_erlog_name	deps/cowboy/erlang.mk	/^pkg_erlog_name = erlog$/;"	m
pkg_erlog_repo	deps/cowboy/erlang.mk	/^pkg_erlog_repo = https:\/\/github.com\/rvirding\/erlog$/;"	m
pkg_erlpass_commit	deps/cowboy/erlang.mk	/^pkg_erlpass_commit = master$/;"	m
pkg_erlpass_description	deps/cowboy/erlang.mk	/^pkg_erlpass_description = A library to handle password hashing and changing in a safe manner, independent from any kind of storage whatsoever.$/;"	m
pkg_erlpass_fetch	deps/cowboy/erlang.mk	/^pkg_erlpass_fetch = git$/;"	m
pkg_erlpass_homepage	deps/cowboy/erlang.mk	/^pkg_erlpass_homepage = https:\/\/github.com\/ferd\/erlpass$/;"	m
pkg_erlpass_name	deps/cowboy/erlang.mk	/^pkg_erlpass_name = erlpass$/;"	m
pkg_erlpass_repo	deps/cowboy/erlang.mk	/^pkg_erlpass_repo = https:\/\/github.com\/ferd\/erlpass$/;"	m
pkg_erlport_commit	deps/cowboy/erlang.mk	/^pkg_erlport_commit = master$/;"	m
pkg_erlport_description	deps/cowboy/erlang.mk	/^pkg_erlport_description = ErlPort - connect Erlang to other languages$/;"	m
pkg_erlport_fetch	deps/cowboy/erlang.mk	/^pkg_erlport_fetch = git$/;"	m
pkg_erlport_homepage	deps/cowboy/erlang.mk	/^pkg_erlport_homepage = https:\/\/github.com\/hdima\/erlport$/;"	m
pkg_erlport_name	deps/cowboy/erlang.mk	/^pkg_erlport_name = erlport$/;"	m
pkg_erlport_repo	deps/cowboy/erlang.mk	/^pkg_erlport_repo = https:\/\/github.com\/hdima\/erlport$/;"	m
pkg_erlsh_commit	deps/cowboy/erlang.mk	/^pkg_erlsh_commit = master$/;"	m
pkg_erlsh_description	deps/cowboy/erlang.mk	/^pkg_erlsh_description = Erlang shell tools$/;"	m
pkg_erlsh_fetch	deps/cowboy/erlang.mk	/^pkg_erlsh_fetch = git$/;"	m
pkg_erlsh_homepage	deps/cowboy/erlang.mk	/^pkg_erlsh_homepage = https:\/\/github.com\/proger\/erlsh$/;"	m
pkg_erlsh_name	deps/cowboy/erlang.mk	/^pkg_erlsh_name = erlsh$/;"	m
pkg_erlsh_repo	deps/cowboy/erlang.mk	/^pkg_erlsh_repo = https:\/\/github.com\/proger\/erlsh$/;"	m
pkg_erlsha2_commit	deps/cowboy/erlang.mk	/^pkg_erlsha2_commit = master$/;"	m
pkg_erlsha2_description	deps/cowboy/erlang.mk	/^pkg_erlsha2_description = SHA-224, SHA-256, SHA-384, SHA-512 implemented in Erlang NIFs.$/;"	m
pkg_erlsha2_fetch	deps/cowboy/erlang.mk	/^pkg_erlsha2_fetch = git$/;"	m
pkg_erlsha2_homepage	deps/cowboy/erlang.mk	/^pkg_erlsha2_homepage = https:\/\/github.com\/vinoski\/erlsha2$/;"	m
pkg_erlsha2_name	deps/cowboy/erlang.mk	/^pkg_erlsha2_name = erlsha2$/;"	m
pkg_erlsha2_repo	deps/cowboy/erlang.mk	/^pkg_erlsha2_repo = https:\/\/github.com\/vinoski\/erlsha2$/;"	m
pkg_erlsom_commit	deps/cowboy/erlang.mk	/^pkg_erlsom_commit = master$/;"	m
pkg_erlsom_description	deps/cowboy/erlang.mk	/^pkg_erlsom_description = XML parser for Erlang$/;"	m
pkg_erlsom_fetch	deps/cowboy/erlang.mk	/^pkg_erlsom_fetch = git$/;"	m
pkg_erlsom_homepage	deps/cowboy/erlang.mk	/^pkg_erlsom_homepage = https:\/\/github.com\/willemdj\/erlsom$/;"	m
pkg_erlsom_name	deps/cowboy/erlang.mk	/^pkg_erlsom_name = erlsom$/;"	m
pkg_erlsom_repo	deps/cowboy/erlang.mk	/^pkg_erlsom_repo = https:\/\/github.com\/willemdj\/erlsom$/;"	m
pkg_erlubi_commit	deps/cowboy/erlang.mk	/^pkg_erlubi_commit = master$/;"	m
pkg_erlubi_description	deps/cowboy/erlang.mk	/^pkg_erlubi_description = Ubigraph Erlang Client (and Process Visualizer)$/;"	m
pkg_erlubi_fetch	deps/cowboy/erlang.mk	/^pkg_erlubi_fetch = git$/;"	m
pkg_erlubi_homepage	deps/cowboy/erlang.mk	/^pkg_erlubi_homepage = https:\/\/github.com\/krestenkrab\/erlubi$/;"	m
pkg_erlubi_name	deps/cowboy/erlang.mk	/^pkg_erlubi_name = erlubi$/;"	m
pkg_erlubi_repo	deps/cowboy/erlang.mk	/^pkg_erlubi_repo = https:\/\/github.com\/krestenkrab\/erlubi$/;"	m
pkg_erlvolt_commit	deps/cowboy/erlang.mk	/^pkg_erlvolt_commit = master$/;"	m
pkg_erlvolt_description	deps/cowboy/erlang.mk	/^pkg_erlvolt_description = VoltDB Erlang Client Driver$/;"	m
pkg_erlvolt_fetch	deps/cowboy/erlang.mk	/^pkg_erlvolt_fetch = git$/;"	m
pkg_erlvolt_homepage	deps/cowboy/erlang.mk	/^pkg_erlvolt_homepage = https:\/\/github.com\/VoltDB\/voltdb-client-erlang$/;"	m
pkg_erlvolt_name	deps/cowboy/erlang.mk	/^pkg_erlvolt_name = erlvolt$/;"	m
pkg_erlvolt_repo	deps/cowboy/erlang.mk	/^pkg_erlvolt_repo = https:\/\/github.com\/VoltDB\/voltdb-client-erlang$/;"	m
pkg_erlware_commons_commit	deps/cowboy/erlang.mk	/^pkg_erlware_commons_commit = master$/;"	m
pkg_erlware_commons_description	deps/cowboy/erlang.mk	/^pkg_erlware_commons_description = Erlware Commons is an Erlware project focused on all aspects of reusable Erlang components.$/;"	m
pkg_erlware_commons_fetch	deps/cowboy/erlang.mk	/^pkg_erlware_commons_fetch = git$/;"	m
pkg_erlware_commons_homepage	deps/cowboy/erlang.mk	/^pkg_erlware_commons_homepage = https:\/\/github.com\/erlware\/erlware_commons$/;"	m
pkg_erlware_commons_name	deps/cowboy/erlang.mk	/^pkg_erlware_commons_name = erlware_commons$/;"	m
pkg_erlware_commons_repo	deps/cowboy/erlang.mk	/^pkg_erlware_commons_repo = https:\/\/github.com\/erlware\/erlware_commons$/;"	m
pkg_erlydtl_commit	deps/cowboy/erlang.mk	/^pkg_erlydtl_commit = master$/;"	m
pkg_erlydtl_description	deps/cowboy/erlang.mk	/^pkg_erlydtl_description = Django Template Language for Erlang.$/;"	m
pkg_erlydtl_fetch	deps/cowboy/erlang.mk	/^pkg_erlydtl_fetch = git$/;"	m
pkg_erlydtl_homepage	deps/cowboy/erlang.mk	/^pkg_erlydtl_homepage = https:\/\/github.com\/erlydtl\/erlydtl$/;"	m
pkg_erlydtl_name	deps/cowboy/erlang.mk	/^pkg_erlydtl_name = erlydtl$/;"	m
pkg_erlydtl_repo	deps/cowboy/erlang.mk	/^pkg_erlydtl_repo = https:\/\/github.com\/erlydtl\/erlydtl$/;"	m
pkg_errd_commit	deps/cowboy/erlang.mk	/^pkg_errd_commit = master$/;"	m
pkg_errd_description	deps/cowboy/erlang.mk	/^pkg_errd_description = Erlang RRDTool library$/;"	m
pkg_errd_fetch	deps/cowboy/erlang.mk	/^pkg_errd_fetch = git$/;"	m
pkg_errd_homepage	deps/cowboy/erlang.mk	/^pkg_errd_homepage = https:\/\/github.com\/archaelus\/errd$/;"	m
pkg_errd_name	deps/cowboy/erlang.mk	/^pkg_errd_name = errd$/;"	m
pkg_errd_repo	deps/cowboy/erlang.mk	/^pkg_errd_repo = https:\/\/github.com\/archaelus\/errd$/;"	m
pkg_erserve_commit	deps/cowboy/erlang.mk	/^pkg_erserve_commit = master$/;"	m
pkg_erserve_description	deps/cowboy/erlang.mk	/^pkg_erserve_description = Erlang\/Rserve communication interface$/;"	m
pkg_erserve_fetch	deps/cowboy/erlang.mk	/^pkg_erserve_fetch = git$/;"	m
pkg_erserve_homepage	deps/cowboy/erlang.mk	/^pkg_erserve_homepage = https:\/\/github.com\/del\/erserve$/;"	m
pkg_erserve_name	deps/cowboy/erlang.mk	/^pkg_erserve_name = erserve$/;"	m
pkg_erserve_repo	deps/cowboy/erlang.mk	/^pkg_erserve_repo = https:\/\/github.com\/del\/erserve$/;"	m
pkg_erwa_commit	deps/cowboy/erlang.mk	/^pkg_erwa_commit = 0.1.1$/;"	m
pkg_erwa_description	deps/cowboy/erlang.mk	/^pkg_erwa_description = A WAMP router and client written in Erlang.$/;"	m
pkg_erwa_fetch	deps/cowboy/erlang.mk	/^pkg_erwa_fetch = git$/;"	m
pkg_erwa_homepage	deps/cowboy/erlang.mk	/^pkg_erwa_homepage = https:\/\/github.com\/bwegh\/erwa$/;"	m
pkg_erwa_name	deps/cowboy/erlang.mk	/^pkg_erwa_name = erwa$/;"	m
pkg_erwa_repo	deps/cowboy/erlang.mk	/^pkg_erwa_repo = https:\/\/github.com\/bwegh\/erwa$/;"	m
pkg_espec_commit	deps/cowboy/erlang.mk	/^pkg_espec_commit = master$/;"	m
pkg_espec_description	deps/cowboy/erlang.mk	/^pkg_espec_description = ESpec: Behaviour driven development framework for Erlang$/;"	m
pkg_espec_fetch	deps/cowboy/erlang.mk	/^pkg_espec_fetch = git$/;"	m
pkg_espec_homepage	deps/cowboy/erlang.mk	/^pkg_espec_homepage = https:\/\/github.com\/lucaspiller\/espec$/;"	m
pkg_espec_name	deps/cowboy/erlang.mk	/^pkg_espec_name = espec$/;"	m
pkg_espec_repo	deps/cowboy/erlang.mk	/^pkg_espec_repo = https:\/\/github.com\/lucaspiller\/espec$/;"	m
pkg_estatsd_commit	deps/cowboy/erlang.mk	/^pkg_estatsd_commit = master$/;"	m
pkg_estatsd_description	deps/cowboy/erlang.mk	/^pkg_estatsd_description = Erlang stats aggregation app that periodically flushes data to graphite$/;"	m
pkg_estatsd_fetch	deps/cowboy/erlang.mk	/^pkg_estatsd_fetch = git$/;"	m
pkg_estatsd_homepage	deps/cowboy/erlang.mk	/^pkg_estatsd_homepage = https:\/\/github.com\/RJ\/estatsd$/;"	m
pkg_estatsd_name	deps/cowboy/erlang.mk	/^pkg_estatsd_name = estatsd$/;"	m
pkg_estatsd_repo	deps/cowboy/erlang.mk	/^pkg_estatsd_repo = https:\/\/github.com\/RJ\/estatsd$/;"	m
pkg_etap_commit	deps/cowboy/erlang.mk	/^pkg_etap_commit = master$/;"	m
pkg_etap_description	deps/cowboy/erlang.mk	/^pkg_etap_description = etap is a simple erlang testing library that provides TAP compliant output.$/;"	m
pkg_etap_fetch	deps/cowboy/erlang.mk	/^pkg_etap_fetch = git$/;"	m
pkg_etap_homepage	deps/cowboy/erlang.mk	/^pkg_etap_homepage = https:\/\/github.com\/ngerakines\/etap$/;"	m
pkg_etap_name	deps/cowboy/erlang.mk	/^pkg_etap_name = etap$/;"	m
pkg_etap_repo	deps/cowboy/erlang.mk	/^pkg_etap_repo = https:\/\/github.com\/ngerakines\/etap$/;"	m
pkg_etest_commit	deps/cowboy/erlang.mk	/^pkg_etest_commit = master$/;"	m
pkg_etest_description	deps/cowboy/erlang.mk	/^pkg_etest_description = A lightweight, convention over configuration test framework for Erlang$/;"	m
pkg_etest_fetch	deps/cowboy/erlang.mk	/^pkg_etest_fetch = git$/;"	m
pkg_etest_homepage	deps/cowboy/erlang.mk	/^pkg_etest_homepage = https:\/\/github.com\/wooga\/etest$/;"	m
pkg_etest_http_commit	deps/cowboy/erlang.mk	/^pkg_etest_http_commit = master$/;"	m
pkg_etest_http_description	deps/cowboy/erlang.mk	/^pkg_etest_http_description = etest Assertions around HTTP (client-side)$/;"	m
pkg_etest_http_fetch	deps/cowboy/erlang.mk	/^pkg_etest_http_fetch = git$/;"	m
pkg_etest_http_homepage	deps/cowboy/erlang.mk	/^pkg_etest_http_homepage = https:\/\/github.com\/wooga\/etest_http$/;"	m
pkg_etest_http_name	deps/cowboy/erlang.mk	/^pkg_etest_http_name = etest_http$/;"	m
pkg_etest_http_repo	deps/cowboy/erlang.mk	/^pkg_etest_http_repo = https:\/\/github.com\/wooga\/etest_http$/;"	m
pkg_etest_name	deps/cowboy/erlang.mk	/^pkg_etest_name = etest$/;"	m
pkg_etest_repo	deps/cowboy/erlang.mk	/^pkg_etest_repo = https:\/\/github.com\/wooga\/etest$/;"	m
pkg_etoml_commit	deps/cowboy/erlang.mk	/^pkg_etoml_commit = master$/;"	m
pkg_etoml_description	deps/cowboy/erlang.mk	/^pkg_etoml_description = TOML language erlang parser$/;"	m
pkg_etoml_fetch	deps/cowboy/erlang.mk	/^pkg_etoml_fetch = git$/;"	m
pkg_etoml_homepage	deps/cowboy/erlang.mk	/^pkg_etoml_homepage = https:\/\/github.com\/kalta\/etoml$/;"	m
pkg_etoml_name	deps/cowboy/erlang.mk	/^pkg_etoml_name = etoml$/;"	m
pkg_etoml_repo	deps/cowboy/erlang.mk	/^pkg_etoml_repo = https:\/\/github.com\/kalta\/etoml$/;"	m
pkg_eunit_commit	deps/cowboy/erlang.mk	/^pkg_eunit_commit = master$/;"	m
pkg_eunit_description	deps/cowboy/erlang.mk	/^pkg_eunit_description = The EUnit lightweight unit testing framework for Erlang - this is the canonical development repository.$/;"	m
pkg_eunit_fetch	deps/cowboy/erlang.mk	/^pkg_eunit_fetch = git$/;"	m
pkg_eunit_formatters_commit	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_commit = master$/;"	m
pkg_eunit_formatters_description	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_description = Because eunit's output sucks. Let's make it better.$/;"	m
pkg_eunit_formatters_fetch	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_fetch = git$/;"	m
pkg_eunit_formatters_homepage	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_homepage = https:\/\/github.com\/seancribbs\/eunit_formatters$/;"	m
pkg_eunit_formatters_name	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_name = eunit_formatters$/;"	m
pkg_eunit_formatters_repo	deps/cowboy/erlang.mk	/^pkg_eunit_formatters_repo = https:\/\/github.com\/seancribbs\/eunit_formatters$/;"	m
pkg_eunit_homepage	deps/cowboy/erlang.mk	/^pkg_eunit_homepage = https:\/\/github.com\/richcarl\/eunit$/;"	m
pkg_eunit_name	deps/cowboy/erlang.mk	/^pkg_eunit_name = eunit$/;"	m
pkg_eunit_repo	deps/cowboy/erlang.mk	/^pkg_eunit_repo = https:\/\/github.com\/richcarl\/eunit$/;"	m
pkg_euthanasia_commit	deps/cowboy/erlang.mk	/^pkg_euthanasia_commit = master$/;"	m
pkg_euthanasia_description	deps/cowboy/erlang.mk	/^pkg_euthanasia_description = Merciful killer for your Erlang processes$/;"	m
pkg_euthanasia_fetch	deps/cowboy/erlang.mk	/^pkg_euthanasia_fetch = git$/;"	m
pkg_euthanasia_homepage	deps/cowboy/erlang.mk	/^pkg_euthanasia_homepage = https:\/\/github.com\/doubleyou\/euthanasia$/;"	m
pkg_euthanasia_name	deps/cowboy/erlang.mk	/^pkg_euthanasia_name = euthanasia$/;"	m
pkg_euthanasia_repo	deps/cowboy/erlang.mk	/^pkg_euthanasia_repo = https:\/\/github.com\/doubleyou\/euthanasia$/;"	m
pkg_evum_commit	deps/cowboy/erlang.mk	/^pkg_evum_commit = master$/;"	m
pkg_evum_description	deps/cowboy/erlang.mk	/^pkg_evum_description = Spawn Linux VMs as Erlang processes in the Erlang VM$/;"	m
pkg_evum_fetch	deps/cowboy/erlang.mk	/^pkg_evum_fetch = git$/;"	m
pkg_evum_homepage	deps/cowboy/erlang.mk	/^pkg_evum_homepage = https:\/\/github.com\/msantos\/evum$/;"	m
pkg_evum_name	deps/cowboy/erlang.mk	/^pkg_evum_name = evum$/;"	m
pkg_evum_repo	deps/cowboy/erlang.mk	/^pkg_evum_repo = https:\/\/github.com\/msantos\/evum$/;"	m
pkg_exec_commit	deps/cowboy/erlang.mk	/^pkg_exec_commit = master$/;"	m
pkg_exec_description	deps/cowboy/erlang.mk	/^pkg_exec_description = Execute and control OS processes from Erlang\/OTP.$/;"	m
pkg_exec_fetch	deps/cowboy/erlang.mk	/^pkg_exec_fetch = git$/;"	m
pkg_exec_homepage	deps/cowboy/erlang.mk	/^pkg_exec_homepage = http:\/\/saleyn.github.com\/erlexec$/;"	m
pkg_exec_name	deps/cowboy/erlang.mk	/^pkg_exec_name = exec$/;"	m
pkg_exec_repo	deps/cowboy/erlang.mk	/^pkg_exec_repo = https:\/\/github.com\/saleyn\/erlexec$/;"	m
pkg_exml_commit	deps/cowboy/erlang.mk	/^pkg_exml_commit = master$/;"	m
pkg_exml_description	deps/cowboy/erlang.mk	/^pkg_exml_description = XML parsing library in Erlang$/;"	m
pkg_exml_fetch	deps/cowboy/erlang.mk	/^pkg_exml_fetch = git$/;"	m
pkg_exml_homepage	deps/cowboy/erlang.mk	/^pkg_exml_homepage = https:\/\/github.com\/paulgray\/exml$/;"	m
pkg_exml_name	deps/cowboy/erlang.mk	/^pkg_exml_name = exml$/;"	m
pkg_exml_repo	deps/cowboy/erlang.mk	/^pkg_exml_repo = https:\/\/github.com\/paulgray\/exml$/;"	m
pkg_exometer_commit	deps/cowboy/erlang.mk	/^pkg_exometer_commit = 1.2$/;"	m
pkg_exometer_description	deps/cowboy/erlang.mk	/^pkg_exometer_description = Basic measurement objects and probe behavior$/;"	m
pkg_exometer_fetch	deps/cowboy/erlang.mk	/^pkg_exometer_fetch = git$/;"	m
pkg_exometer_homepage	deps/cowboy/erlang.mk	/^pkg_exometer_homepage = https:\/\/github.com\/Feuerlabs\/exometer$/;"	m
pkg_exometer_name	deps/cowboy/erlang.mk	/^pkg_exometer_name = exometer$/;"	m
pkg_exometer_repo	deps/cowboy/erlang.mk	/^pkg_exometer_repo = https:\/\/github.com\/Feuerlabs\/exometer$/;"	m
pkg_exs1024_commit	deps/cowboy/erlang.mk	/^pkg_exs1024_commit = master$/;"	m
pkg_exs1024_description	deps/cowboy/erlang.mk	/^pkg_exs1024_description = Xorshift1024star pseudo random number generator for Erlang.$/;"	m
pkg_exs1024_fetch	deps/cowboy/erlang.mk	/^pkg_exs1024_fetch = git$/;"	m
pkg_exs1024_homepage	deps/cowboy/erlang.mk	/^pkg_exs1024_homepage = https:\/\/github.com\/jj1bdx\/exs1024$/;"	m
pkg_exs1024_name	deps/cowboy/erlang.mk	/^pkg_exs1024_name = exs1024$/;"	m
pkg_exs1024_repo	deps/cowboy/erlang.mk	/^pkg_exs1024_repo = https:\/\/github.com\/jj1bdx\/exs1024$/;"	m
pkg_exs64_commit	deps/cowboy/erlang.mk	/^pkg_exs64_commit = master$/;"	m
pkg_exs64_description	deps/cowboy/erlang.mk	/^pkg_exs64_description = Xorshift64star pseudo random number generator for Erlang.$/;"	m
pkg_exs64_fetch	deps/cowboy/erlang.mk	/^pkg_exs64_fetch = git$/;"	m
pkg_exs64_homepage	deps/cowboy/erlang.mk	/^pkg_exs64_homepage = https:\/\/github.com\/jj1bdx\/exs64$/;"	m
pkg_exs64_name	deps/cowboy/erlang.mk	/^pkg_exs64_name = exs64$/;"	m
pkg_exs64_repo	deps/cowboy/erlang.mk	/^pkg_exs64_repo = https:\/\/github.com\/jj1bdx\/exs64$/;"	m
pkg_exsplus116_commit	deps/cowboy/erlang.mk	/^pkg_exsplus116_commit = master$/;"	m
pkg_exsplus116_description	deps/cowboy/erlang.mk	/^pkg_exsplus116_description = Xorshift116plus for Erlang$/;"	m
pkg_exsplus116_fetch	deps/cowboy/erlang.mk	/^pkg_exsplus116_fetch = git$/;"	m
pkg_exsplus116_homepage	deps/cowboy/erlang.mk	/^pkg_exsplus116_homepage = https:\/\/github.com\/jj1bdx\/exsplus116$/;"	m
pkg_exsplus116_name	deps/cowboy/erlang.mk	/^pkg_exsplus116_name = exsplus116$/;"	m
pkg_exsplus116_repo	deps/cowboy/erlang.mk	/^pkg_exsplus116_repo = https:\/\/github.com\/jj1bdx\/exsplus116$/;"	m
pkg_exsplus128_commit	deps/cowboy/erlang.mk	/^pkg_exsplus128_commit = master$/;"	m
pkg_exsplus128_description	deps/cowboy/erlang.mk	/^pkg_exsplus128_description = Xorshift128plus pseudo random number generator for Erlang.$/;"	m
pkg_exsplus128_fetch	deps/cowboy/erlang.mk	/^pkg_exsplus128_fetch = git$/;"	m
pkg_exsplus128_homepage	deps/cowboy/erlang.mk	/^pkg_exsplus128_homepage = https:\/\/github.com\/jj1bdx\/exsplus128$/;"	m
pkg_exsplus128_name	deps/cowboy/erlang.mk	/^pkg_exsplus128_name = exsplus128$/;"	m
pkg_exsplus128_repo	deps/cowboy/erlang.mk	/^pkg_exsplus128_repo = https:\/\/github.com\/jj1bdx\/exsplus128$/;"	m
pkg_ezmq_commit	deps/cowboy/erlang.mk	/^pkg_ezmq_commit = master$/;"	m
pkg_ezmq_description	deps/cowboy/erlang.mk	/^pkg_ezmq_description = zMQ implemented in Erlang$/;"	m
pkg_ezmq_fetch	deps/cowboy/erlang.mk	/^pkg_ezmq_fetch = git$/;"	m
pkg_ezmq_homepage	deps/cowboy/erlang.mk	/^pkg_ezmq_homepage = https:\/\/github.com\/RoadRunnr\/ezmq$/;"	m
pkg_ezmq_name	deps/cowboy/erlang.mk	/^pkg_ezmq_name = ezmq$/;"	m
pkg_ezmq_repo	deps/cowboy/erlang.mk	/^pkg_ezmq_repo = https:\/\/github.com\/RoadRunnr\/ezmq$/;"	m
pkg_ezmtp_commit	deps/cowboy/erlang.mk	/^pkg_ezmtp_commit = master$/;"	m
pkg_ezmtp_description	deps/cowboy/erlang.mk	/^pkg_ezmtp_description = ZMTP protocol in pure Erlang.$/;"	m
pkg_ezmtp_fetch	deps/cowboy/erlang.mk	/^pkg_ezmtp_fetch = git$/;"	m
pkg_ezmtp_homepage	deps/cowboy/erlang.mk	/^pkg_ezmtp_homepage = https:\/\/github.com\/a13x\/ezmtp$/;"	m
pkg_ezmtp_name	deps/cowboy/erlang.mk	/^pkg_ezmtp_name = ezmtp$/;"	m
pkg_ezmtp_repo	deps/cowboy/erlang.mk	/^pkg_ezmtp_repo = https:\/\/github.com\/a13x\/ezmtp$/;"	m
pkg_fast_disk_log_commit	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_commit = master$/;"	m
pkg_fast_disk_log_description	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_description = Pool-based asynchronous Erlang disk logger$/;"	m
pkg_fast_disk_log_fetch	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_fetch = git$/;"	m
pkg_fast_disk_log_homepage	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_homepage = https:\/\/github.com\/lpgauth\/fast_disk_log$/;"	m
pkg_fast_disk_log_name	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_name = fast_disk_log$/;"	m
pkg_fast_disk_log_repo	deps/cowboy/erlang.mk	/^pkg_fast_disk_log_repo = https:\/\/github.com\/lpgauth\/fast_disk_log$/;"	m
pkg_feeder_commit	deps/cowboy/erlang.mk	/^pkg_feeder_commit = v1.4.6$/;"	m
pkg_feeder_description	deps/cowboy/erlang.mk	/^pkg_feeder_description = Stream parse RSS and Atom formatted XML feeds.$/;"	m
pkg_feeder_fetch	deps/cowboy/erlang.mk	/^pkg_feeder_fetch = git$/;"	m
pkg_feeder_homepage	deps/cowboy/erlang.mk	/^pkg_feeder_homepage = https:\/\/github.com\/michaelnisi\/feeder$/;"	m
pkg_feeder_name	deps/cowboy/erlang.mk	/^pkg_feeder_name = feeder$/;"	m
pkg_feeder_repo	deps/cowboy/erlang.mk	/^pkg_feeder_repo = https:\/\/github.com\/michaelnisi\/feeder$/;"	m
pkg_fix_commit	deps/cowboy/erlang.mk	/^pkg_fix_commit = master$/;"	m
pkg_fix_description	deps/cowboy/erlang.mk	/^pkg_fix_description = http:\/\/fixprotocol.org\/ implementation.$/;"	m
pkg_fix_fetch	deps/cowboy/erlang.mk	/^pkg_fix_fetch = git$/;"	m
pkg_fix_homepage	deps/cowboy/erlang.mk	/^pkg_fix_homepage = https:\/\/github.com\/maxlapshin\/fix$/;"	m
pkg_fix_name	deps/cowboy/erlang.mk	/^pkg_fix_name = fix$/;"	m
pkg_fix_repo	deps/cowboy/erlang.mk	/^pkg_fix_repo = https:\/\/github.com\/maxlapshin\/fix$/;"	m
pkg_flower_commit	deps/cowboy/erlang.mk	/^pkg_flower_commit = master$/;"	m
pkg_flower_description	deps/cowboy/erlang.mk	/^pkg_flower_description = FlowER - a Erlang OpenFlow development platform$/;"	m
pkg_flower_fetch	deps/cowboy/erlang.mk	/^pkg_flower_fetch = git$/;"	m
pkg_flower_homepage	deps/cowboy/erlang.mk	/^pkg_flower_homepage = https:\/\/github.com\/travelping\/flower$/;"	m
pkg_flower_name	deps/cowboy/erlang.mk	/^pkg_flower_name = flower$/;"	m
pkg_flower_repo	deps/cowboy/erlang.mk	/^pkg_flower_repo = https:\/\/github.com\/travelping\/flower$/;"	m
pkg_fn_commit	deps/cowboy/erlang.mk	/^pkg_fn_commit = master$/;"	m
pkg_fn_description	deps/cowboy/erlang.mk	/^pkg_fn_description = Function utilities for Erlang$/;"	m
pkg_fn_fetch	deps/cowboy/erlang.mk	/^pkg_fn_fetch = git$/;"	m
pkg_fn_homepage	deps/cowboy/erlang.mk	/^pkg_fn_homepage = https:\/\/github.com\/reiddraper\/fn$/;"	m
pkg_fn_name	deps/cowboy/erlang.mk	/^pkg_fn_name = fn$/;"	m
pkg_fn_repo	deps/cowboy/erlang.mk	/^pkg_fn_repo = https:\/\/github.com\/reiddraper\/fn$/;"	m
pkg_folsom_commit	deps/cowboy/erlang.mk	/^pkg_folsom_commit = master$/;"	m
pkg_folsom_cowboy_commit	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_commit = master$/;"	m
pkg_folsom_cowboy_description	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_description = A Cowboy based Folsom HTTP Wrapper.$/;"	m
pkg_folsom_cowboy_fetch	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_fetch = git$/;"	m
pkg_folsom_cowboy_homepage	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_homepage = https:\/\/github.com\/boundary\/folsom_cowboy$/;"	m
pkg_folsom_cowboy_name	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_name = folsom_cowboy$/;"	m
pkg_folsom_cowboy_repo	deps/cowboy/erlang.mk	/^pkg_folsom_cowboy_repo = https:\/\/github.com\/boundary\/folsom_cowboy$/;"	m
pkg_folsom_description	deps/cowboy/erlang.mk	/^pkg_folsom_description = Expose Erlang Events and Metrics$/;"	m
pkg_folsom_fetch	deps/cowboy/erlang.mk	/^pkg_folsom_fetch = git$/;"	m
pkg_folsom_homepage	deps/cowboy/erlang.mk	/^pkg_folsom_homepage = https:\/\/github.com\/boundary\/folsom$/;"	m
pkg_folsom_name	deps/cowboy/erlang.mk	/^pkg_folsom_name = folsom$/;"	m
pkg_folsom_repo	deps/cowboy/erlang.mk	/^pkg_folsom_repo = https:\/\/github.com\/boundary\/folsom$/;"	m
pkg_folsomite_commit	deps/cowboy/erlang.mk	/^pkg_folsomite_commit = master$/;"	m
pkg_folsomite_description	deps/cowboy/erlang.mk	/^pkg_folsomite_description = blow up your graphite \/ riemann server with folsom metrics$/;"	m
pkg_folsomite_fetch	deps/cowboy/erlang.mk	/^pkg_folsomite_fetch = git$/;"	m
pkg_folsomite_homepage	deps/cowboy/erlang.mk	/^pkg_folsomite_homepage = https:\/\/github.com\/campanja\/folsomite$/;"	m
pkg_folsomite_name	deps/cowboy/erlang.mk	/^pkg_folsomite_name = folsomite$/;"	m
pkg_folsomite_repo	deps/cowboy/erlang.mk	/^pkg_folsomite_repo = https:\/\/github.com\/campanja\/folsomite$/;"	m
pkg_fs_commit	deps/cowboy/erlang.mk	/^pkg_fs_commit = master$/;"	m
pkg_fs_description	deps/cowboy/erlang.mk	/^pkg_fs_description = Erlang FileSystem Listener$/;"	m
pkg_fs_fetch	deps/cowboy/erlang.mk	/^pkg_fs_fetch = git$/;"	m
pkg_fs_homepage	deps/cowboy/erlang.mk	/^pkg_fs_homepage = https:\/\/github.com\/synrc\/fs$/;"	m
pkg_fs_name	deps/cowboy/erlang.mk	/^pkg_fs_name = fs$/;"	m
pkg_fs_repo	deps/cowboy/erlang.mk	/^pkg_fs_repo = https:\/\/github.com\/synrc\/fs$/;"	m
pkg_fuse_commit	deps/cowboy/erlang.mk	/^pkg_fuse_commit = master$/;"	m
pkg_fuse_description	deps/cowboy/erlang.mk	/^pkg_fuse_description = A Circuit Breaker for Erlang$/;"	m
pkg_fuse_fetch	deps/cowboy/erlang.mk	/^pkg_fuse_fetch = git$/;"	m
pkg_fuse_homepage	deps/cowboy/erlang.mk	/^pkg_fuse_homepage = https:\/\/github.com\/jlouis\/fuse$/;"	m
pkg_fuse_name	deps/cowboy/erlang.mk	/^pkg_fuse_name = fuse$/;"	m
pkg_fuse_repo	deps/cowboy/erlang.mk	/^pkg_fuse_repo = https:\/\/github.com\/jlouis\/fuse$/;"	m
pkg_gcm_commit	deps/cowboy/erlang.mk	/^pkg_gcm_commit = master$/;"	m
pkg_gcm_description	deps/cowboy/erlang.mk	/^pkg_gcm_description = An Erlang application for Google Cloud Messaging$/;"	m
pkg_gcm_fetch	deps/cowboy/erlang.mk	/^pkg_gcm_fetch = git$/;"	m
pkg_gcm_homepage	deps/cowboy/erlang.mk	/^pkg_gcm_homepage = https:\/\/github.com\/pdincau\/gcm-erlang$/;"	m
pkg_gcm_name	deps/cowboy/erlang.mk	/^pkg_gcm_name = gcm$/;"	m
pkg_gcm_repo	deps/cowboy/erlang.mk	/^pkg_gcm_repo = https:\/\/github.com\/pdincau\/gcm-erlang$/;"	m
pkg_gcprof_commit	deps/cowboy/erlang.mk	/^pkg_gcprof_commit = master$/;"	m
pkg_gcprof_description	deps/cowboy/erlang.mk	/^pkg_gcprof_description = Garbage Collection profiler for Erlang$/;"	m
pkg_gcprof_fetch	deps/cowboy/erlang.mk	/^pkg_gcprof_fetch = git$/;"	m
pkg_gcprof_homepage	deps/cowboy/erlang.mk	/^pkg_gcprof_homepage = https:\/\/github.com\/knutin\/gcprof$/;"	m
pkg_gcprof_name	deps/cowboy/erlang.mk	/^pkg_gcprof_name = gcprof$/;"	m
pkg_gcprof_repo	deps/cowboy/erlang.mk	/^pkg_gcprof_repo = https:\/\/github.com\/knutin\/gcprof$/;"	m
pkg_geas_commit	deps/cowboy/erlang.mk	/^pkg_geas_commit = master$/;"	m
pkg_geas_description	deps/cowboy/erlang.mk	/^pkg_geas_description = Guess Erlang Application Scattering$/;"	m
pkg_geas_fetch	deps/cowboy/erlang.mk	/^pkg_geas_fetch = git$/;"	m
pkg_geas_homepage	deps/cowboy/erlang.mk	/^pkg_geas_homepage = https:\/\/github.com\/crownedgrouse\/geas$/;"	m
pkg_geas_name	deps/cowboy/erlang.mk	/^pkg_geas_name = geas$/;"	m
pkg_geas_repo	deps/cowboy/erlang.mk	/^pkg_geas_repo = https:\/\/github.com\/crownedgrouse\/geas$/;"	m
pkg_geef_commit	deps/cowboy/erlang.mk	/^pkg_geef_commit = master$/;"	m
pkg_geef_description	deps/cowboy/erlang.mk	/^pkg_geef_description = Git NEEEEF (Erlang NIF)$/;"	m
pkg_geef_fetch	deps/cowboy/erlang.mk	/^pkg_geef_fetch = git$/;"	m
pkg_geef_homepage	deps/cowboy/erlang.mk	/^pkg_geef_homepage = https:\/\/github.com\/carlosmn\/geef$/;"	m
pkg_geef_name	deps/cowboy/erlang.mk	/^pkg_geef_name = geef$/;"	m
pkg_geef_repo	deps/cowboy/erlang.mk	/^pkg_geef_repo = https:\/\/github.com\/carlosmn\/geef$/;"	m
pkg_gen_cycle_commit	deps/cowboy/erlang.mk	/^pkg_gen_cycle_commit = develop$/;"	m
pkg_gen_cycle_description	deps/cowboy/erlang.mk	/^pkg_gen_cycle_description = Simple, generic OTP behaviour for recurring tasks$/;"	m
pkg_gen_cycle_fetch	deps/cowboy/erlang.mk	/^pkg_gen_cycle_fetch = git$/;"	m
pkg_gen_cycle_homepage	deps/cowboy/erlang.mk	/^pkg_gen_cycle_homepage = https:\/\/github.com\/aerosol\/gen_cycle$/;"	m
pkg_gen_cycle_name	deps/cowboy/erlang.mk	/^pkg_gen_cycle_name = gen_cycle$/;"	m
pkg_gen_cycle_repo	deps/cowboy/erlang.mk	/^pkg_gen_cycle_repo = https:\/\/github.com\/aerosol\/gen_cycle$/;"	m
pkg_gen_icmp_commit	deps/cowboy/erlang.mk	/^pkg_gen_icmp_commit = master$/;"	m
pkg_gen_icmp_description	deps/cowboy/erlang.mk	/^pkg_gen_icmp_description = Erlang interface to ICMP sockets$/;"	m
pkg_gen_icmp_fetch	deps/cowboy/erlang.mk	/^pkg_gen_icmp_fetch = git$/;"	m
pkg_gen_icmp_homepage	deps/cowboy/erlang.mk	/^pkg_gen_icmp_homepage = https:\/\/github.com\/msantos\/gen_icmp$/;"	m
pkg_gen_icmp_name	deps/cowboy/erlang.mk	/^pkg_gen_icmp_name = gen_icmp$/;"	m
pkg_gen_icmp_repo	deps/cowboy/erlang.mk	/^pkg_gen_icmp_repo = https:\/\/github.com\/msantos\/gen_icmp$/;"	m
pkg_gen_nb_server_commit	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_commit = master$/;"	m
pkg_gen_nb_server_description	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_description = OTP behavior for writing non-blocking servers$/;"	m
pkg_gen_nb_server_fetch	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_fetch = git$/;"	m
pkg_gen_nb_server_homepage	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_homepage = https:\/\/github.com\/kevsmith\/gen_nb_server$/;"	m
pkg_gen_nb_server_name	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_name = gen_nb_server$/;"	m
pkg_gen_nb_server_repo	deps/cowboy/erlang.mk	/^pkg_gen_nb_server_repo = https:\/\/github.com\/kevsmith\/gen_nb_server$/;"	m
pkg_gen_paxos_commit	deps/cowboy/erlang.mk	/^pkg_gen_paxos_commit = master$/;"	m
pkg_gen_paxos_description	deps/cowboy/erlang.mk	/^pkg_gen_paxos_description = An Erlang\/OTP-style implementation of the PAXOS distributed consensus protocol$/;"	m
pkg_gen_paxos_fetch	deps/cowboy/erlang.mk	/^pkg_gen_paxos_fetch = git$/;"	m
pkg_gen_paxos_homepage	deps/cowboy/erlang.mk	/^pkg_gen_paxos_homepage = https:\/\/github.com\/gburd\/gen_paxos$/;"	m
pkg_gen_paxos_name	deps/cowboy/erlang.mk	/^pkg_gen_paxos_name = gen_paxos$/;"	m
pkg_gen_paxos_repo	deps/cowboy/erlang.mk	/^pkg_gen_paxos_repo = https:\/\/github.com\/gburd\/gen_paxos$/;"	m
pkg_gen_smtp_commit	deps/cowboy/erlang.mk	/^pkg_gen_smtp_commit = master$/;"	m
pkg_gen_smtp_description	deps/cowboy/erlang.mk	/^pkg_gen_smtp_description = A generic Erlang SMTP server and client that can be extended via callback modules$/;"	m
pkg_gen_smtp_fetch	deps/cowboy/erlang.mk	/^pkg_gen_smtp_fetch = git$/;"	m
pkg_gen_smtp_homepage	deps/cowboy/erlang.mk	/^pkg_gen_smtp_homepage = https:\/\/github.com\/Vagabond\/gen_smtp$/;"	m
pkg_gen_smtp_name	deps/cowboy/erlang.mk	/^pkg_gen_smtp_name = gen_smtp$/;"	m
pkg_gen_smtp_repo	deps/cowboy/erlang.mk	/^pkg_gen_smtp_repo = https:\/\/github.com\/Vagabond\/gen_smtp$/;"	m
pkg_gen_tracker_commit	deps/cowboy/erlang.mk	/^pkg_gen_tracker_commit = master$/;"	m
pkg_gen_tracker_description	deps/cowboy/erlang.mk	/^pkg_gen_tracker_description = supervisor with ets handling of children and their metadata$/;"	m
pkg_gen_tracker_fetch	deps/cowboy/erlang.mk	/^pkg_gen_tracker_fetch = git$/;"	m
pkg_gen_tracker_homepage	deps/cowboy/erlang.mk	/^pkg_gen_tracker_homepage = https:\/\/github.com\/erlyvideo\/gen_tracker$/;"	m
pkg_gen_tracker_name	deps/cowboy/erlang.mk	/^pkg_gen_tracker_name = gen_tracker$/;"	m
pkg_gen_tracker_repo	deps/cowboy/erlang.mk	/^pkg_gen_tracker_repo = https:\/\/github.com\/erlyvideo\/gen_tracker$/;"	m
pkg_gen_unix_commit	deps/cowboy/erlang.mk	/^pkg_gen_unix_commit = master$/;"	m
pkg_gen_unix_description	deps/cowboy/erlang.mk	/^pkg_gen_unix_description = Erlang Unix socket interface$/;"	m
pkg_gen_unix_fetch	deps/cowboy/erlang.mk	/^pkg_gen_unix_fetch = git$/;"	m
pkg_gen_unix_homepage	deps/cowboy/erlang.mk	/^pkg_gen_unix_homepage = https:\/\/github.com\/msantos\/gen_unix$/;"	m
pkg_gen_unix_name	deps/cowboy/erlang.mk	/^pkg_gen_unix_name = gen_unix$/;"	m
pkg_gen_unix_repo	deps/cowboy/erlang.mk	/^pkg_gen_unix_repo = https:\/\/github.com\/msantos\/gen_unix$/;"	m
pkg_getopt_commit	deps/cowboy/erlang.mk	/^pkg_getopt_commit = master$/;"	m
pkg_getopt_description	deps/cowboy/erlang.mk	/^pkg_getopt_description = Module to parse command line arguments using the GNU getopt syntax$/;"	m
pkg_getopt_fetch	deps/cowboy/erlang.mk	/^pkg_getopt_fetch = git$/;"	m
pkg_getopt_homepage	deps/cowboy/erlang.mk	/^pkg_getopt_homepage = https:\/\/github.com\/jcomellas\/getopt$/;"	m
pkg_getopt_name	deps/cowboy/erlang.mk	/^pkg_getopt_name = getopt$/;"	m
pkg_getopt_repo	deps/cowboy/erlang.mk	/^pkg_getopt_repo = https:\/\/github.com\/jcomellas\/getopt$/;"	m
pkg_gettext_commit	deps/cowboy/erlang.mk	/^pkg_gettext_commit = master$/;"	m
pkg_gettext_description	deps/cowboy/erlang.mk	/^pkg_gettext_description = Erlang internationalization library.$/;"	m
pkg_gettext_fetch	deps/cowboy/erlang.mk	/^pkg_gettext_fetch = git$/;"	m
pkg_gettext_homepage	deps/cowboy/erlang.mk	/^pkg_gettext_homepage = https:\/\/github.com\/etnt\/gettext$/;"	m
pkg_gettext_name	deps/cowboy/erlang.mk	/^pkg_gettext_name = gettext$/;"	m
pkg_gettext_repo	deps/cowboy/erlang.mk	/^pkg_gettext_repo = https:\/\/github.com\/etnt\/gettext$/;"	m
pkg_giallo_commit	deps/cowboy/erlang.mk	/^pkg_giallo_commit = master$/;"	m
pkg_giallo_description	deps/cowboy/erlang.mk	/^pkg_giallo_description = Small and flexible web framework on top of Cowboy$/;"	m
pkg_giallo_fetch	deps/cowboy/erlang.mk	/^pkg_giallo_fetch = git$/;"	m
pkg_giallo_homepage	deps/cowboy/erlang.mk	/^pkg_giallo_homepage = https:\/\/github.com\/kivra\/giallo$/;"	m
pkg_giallo_name	deps/cowboy/erlang.mk	/^pkg_giallo_name = giallo$/;"	m
pkg_giallo_repo	deps/cowboy/erlang.mk	/^pkg_giallo_repo = https:\/\/github.com\/kivra\/giallo$/;"	m
pkg_gin_commit	deps/cowboy/erlang.mk	/^pkg_gin_commit = master$/;"	m
pkg_gin_description	deps/cowboy/erlang.mk	/^pkg_gin_description = The guards  and  for Erlang parse_transform$/;"	m
pkg_gin_fetch	deps/cowboy/erlang.mk	/^pkg_gin_fetch = git$/;"	m
pkg_gin_homepage	deps/cowboy/erlang.mk	/^pkg_gin_homepage = https:\/\/github.com\/mad-cocktail\/gin$/;"	m
pkg_gin_name	deps/cowboy/erlang.mk	/^pkg_gin_name = gin$/;"	m
pkg_gin_repo	deps/cowboy/erlang.mk	/^pkg_gin_repo = https:\/\/github.com\/mad-cocktail\/gin$/;"	m
pkg_gitty_commit	deps/cowboy/erlang.mk	/^pkg_gitty_commit = master$/;"	m
pkg_gitty_description	deps/cowboy/erlang.mk	/^pkg_gitty_description = Git access in erlang$/;"	m
pkg_gitty_fetch	deps/cowboy/erlang.mk	/^pkg_gitty_fetch = git$/;"	m
pkg_gitty_homepage	deps/cowboy/erlang.mk	/^pkg_gitty_homepage = https:\/\/github.com\/maxlapshin\/gitty$/;"	m
pkg_gitty_name	deps/cowboy/erlang.mk	/^pkg_gitty_name = gitty$/;"	m
pkg_gitty_repo	deps/cowboy/erlang.mk	/^pkg_gitty_repo = https:\/\/github.com\/maxlapshin\/gitty$/;"	m
pkg_gold_fever_commit	deps/cowboy/erlang.mk	/^pkg_gold_fever_commit = master$/;"	m
pkg_gold_fever_description	deps/cowboy/erlang.mk	/^pkg_gold_fever_description = A Treasure Hunt for Erlangers$/;"	m
pkg_gold_fever_fetch	deps/cowboy/erlang.mk	/^pkg_gold_fever_fetch = git$/;"	m
pkg_gold_fever_homepage	deps/cowboy/erlang.mk	/^pkg_gold_fever_homepage = https:\/\/github.com\/inaka\/gold_fever$/;"	m
pkg_gold_fever_name	deps/cowboy/erlang.mk	/^pkg_gold_fever_name = gold_fever$/;"	m
pkg_gold_fever_repo	deps/cowboy/erlang.mk	/^pkg_gold_fever_repo = https:\/\/github.com\/inaka\/gold_fever$/;"	m
pkg_gossiperl_commit	deps/cowboy/erlang.mk	/^pkg_gossiperl_commit = master$/;"	m
pkg_gossiperl_description	deps/cowboy/erlang.mk	/^pkg_gossiperl_description = Gossip middleware in Erlang$/;"	m
pkg_gossiperl_fetch	deps/cowboy/erlang.mk	/^pkg_gossiperl_fetch = git$/;"	m
pkg_gossiperl_homepage	deps/cowboy/erlang.mk	/^pkg_gossiperl_homepage = http:\/\/gossiperl.com\/$/;"	m
pkg_gossiperl_name	deps/cowboy/erlang.mk	/^pkg_gossiperl_name = gossiperl$/;"	m
pkg_gossiperl_repo	deps/cowboy/erlang.mk	/^pkg_gossiperl_repo = https:\/\/github.com\/gossiperl\/gossiperl$/;"	m
pkg_gpb_commit	deps/cowboy/erlang.mk	/^pkg_gpb_commit = master$/;"	m
pkg_gpb_description	deps/cowboy/erlang.mk	/^pkg_gpb_description = A Google Protobuf implementation for Erlang$/;"	m
pkg_gpb_fetch	deps/cowboy/erlang.mk	/^pkg_gpb_fetch = git$/;"	m
pkg_gpb_homepage	deps/cowboy/erlang.mk	/^pkg_gpb_homepage = https:\/\/github.com\/tomas-abrahamsson\/gpb$/;"	m
pkg_gpb_name	deps/cowboy/erlang.mk	/^pkg_gpb_name = gpb$/;"	m
pkg_gpb_repo	deps/cowboy/erlang.mk	/^pkg_gpb_repo = https:\/\/github.com\/tomas-abrahamsson\/gpb$/;"	m
pkg_gproc_commit	deps/cowboy/erlang.mk	/^pkg_gproc_commit = master$/;"	m
pkg_gproc_description	deps/cowboy/erlang.mk	/^pkg_gproc_description = Extended process registry for Erlang$/;"	m
pkg_gproc_fetch	deps/cowboy/erlang.mk	/^pkg_gproc_fetch = git$/;"	m
pkg_gproc_homepage	deps/cowboy/erlang.mk	/^pkg_gproc_homepage = https:\/\/github.com\/uwiger\/gproc$/;"	m
pkg_gproc_name	deps/cowboy/erlang.mk	/^pkg_gproc_name = gproc$/;"	m
pkg_gproc_repo	deps/cowboy/erlang.mk	/^pkg_gproc_repo = https:\/\/github.com\/uwiger\/gproc$/;"	m
pkg_grapherl_commit	deps/cowboy/erlang.mk	/^pkg_grapherl_commit = master$/;"	m
pkg_grapherl_description	deps/cowboy/erlang.mk	/^pkg_grapherl_description = Create graphs of Erlang systems and programs$/;"	m
pkg_grapherl_fetch	deps/cowboy/erlang.mk	/^pkg_grapherl_fetch = git$/;"	m
pkg_grapherl_homepage	deps/cowboy/erlang.mk	/^pkg_grapherl_homepage = https:\/\/github.com\/eproxus\/grapherl$/;"	m
pkg_grapherl_name	deps/cowboy/erlang.mk	/^pkg_grapherl_name = grapherl$/;"	m
pkg_grapherl_repo	deps/cowboy/erlang.mk	/^pkg_grapherl_repo = https:\/\/github.com\/eproxus\/grapherl$/;"	m
pkg_gun_commit	deps/cowboy/erlang.mk	/^pkg_gun_commit = master$/;"	m
pkg_gun_description	deps/cowboy/erlang.mk	/^pkg_gun_description = Asynchronous SPDY, HTTP and Websocket client written in Erlang.$/;"	m
pkg_gun_fetch	deps/cowboy/erlang.mk	/^pkg_gun_fetch = git$/;"	m
pkg_gun_homepage	deps/cowboy/erlang.mk	/^pkg_gun_homepage = http\/\/ninenines.eu$/;"	m
pkg_gun_name	deps/cowboy/erlang.mk	/^pkg_gun_name = gun$/;"	m
pkg_gun_repo	deps/cowboy/erlang.mk	/^pkg_gun_repo = https:\/\/github.com\/ninenines\/gun$/;"	m
pkg_gut_commit	deps/cowboy/erlang.mk	/^pkg_gut_commit = master$/;"	m
pkg_gut_description	deps/cowboy/erlang.mk	/^pkg_gut_description = gut is a template printing, aka scaffolding, tool for Erlang. Like rails generate or yeoman$/;"	m
pkg_gut_fetch	deps/cowboy/erlang.mk	/^pkg_gut_fetch = git$/;"	m
pkg_gut_homepage	deps/cowboy/erlang.mk	/^pkg_gut_homepage = https:\/\/github.com\/unbalancedparentheses\/gut$/;"	m
pkg_gut_name	deps/cowboy/erlang.mk	/^pkg_gut_name = gut$/;"	m
pkg_gut_repo	deps/cowboy/erlang.mk	/^pkg_gut_repo = https:\/\/github.com\/unbalancedparentheses\/gut$/;"	m
pkg_hackney_commit	deps/cowboy/erlang.mk	/^pkg_hackney_commit = master$/;"	m
pkg_hackney_description	deps/cowboy/erlang.mk	/^pkg_hackney_description = simple HTTP client in Erlang$/;"	m
pkg_hackney_fetch	deps/cowboy/erlang.mk	/^pkg_hackney_fetch = git$/;"	m
pkg_hackney_homepage	deps/cowboy/erlang.mk	/^pkg_hackney_homepage = https:\/\/github.com\/benoitc\/hackney$/;"	m
pkg_hackney_name	deps/cowboy/erlang.mk	/^pkg_hackney_name = hackney$/;"	m
pkg_hackney_repo	deps/cowboy/erlang.mk	/^pkg_hackney_repo = https:\/\/github.com\/benoitc\/hackney$/;"	m
pkg_hamcrest_commit	deps/cowboy/erlang.mk	/^pkg_hamcrest_commit = master$/;"	m
pkg_hamcrest_description	deps/cowboy/erlang.mk	/^pkg_hamcrest_description = Erlang port of Hamcrest$/;"	m
pkg_hamcrest_fetch	deps/cowboy/erlang.mk	/^pkg_hamcrest_fetch = git$/;"	m
pkg_hamcrest_homepage	deps/cowboy/erlang.mk	/^pkg_hamcrest_homepage = https:\/\/github.com\/hyperthunk\/hamcrest-erlang$/;"	m
pkg_hamcrest_name	deps/cowboy/erlang.mk	/^pkg_hamcrest_name = hamcrest$/;"	m
pkg_hamcrest_repo	deps/cowboy/erlang.mk	/^pkg_hamcrest_repo = https:\/\/github.com\/hyperthunk\/hamcrest-erlang$/;"	m
pkg_hanoidb_commit	deps/cowboy/erlang.mk	/^pkg_hanoidb_commit = master$/;"	m
pkg_hanoidb_description	deps/cowboy/erlang.mk	/^pkg_hanoidb_description = Erlang LSM BTree Storage$/;"	m
pkg_hanoidb_fetch	deps/cowboy/erlang.mk	/^pkg_hanoidb_fetch = git$/;"	m
pkg_hanoidb_homepage	deps/cowboy/erlang.mk	/^pkg_hanoidb_homepage = https:\/\/github.com\/krestenkrab\/hanoidb$/;"	m
pkg_hanoidb_name	deps/cowboy/erlang.mk	/^pkg_hanoidb_name = hanoidb$/;"	m
pkg_hanoidb_repo	deps/cowboy/erlang.mk	/^pkg_hanoidb_repo = https:\/\/github.com\/krestenkrab\/hanoidb$/;"	m
pkg_hottub_commit	deps/cowboy/erlang.mk	/^pkg_hottub_commit = master$/;"	m
pkg_hottub_description	deps/cowboy/erlang.mk	/^pkg_hottub_description = Permanent Erlang Worker Pool$/;"	m
pkg_hottub_fetch	deps/cowboy/erlang.mk	/^pkg_hottub_fetch = git$/;"	m
pkg_hottub_homepage	deps/cowboy/erlang.mk	/^pkg_hottub_homepage = https:\/\/github.com\/bfrog\/hottub$/;"	m
pkg_hottub_name	deps/cowboy/erlang.mk	/^pkg_hottub_name = hottub$/;"	m
pkg_hottub_repo	deps/cowboy/erlang.mk	/^pkg_hottub_repo = https:\/\/github.com\/bfrog\/hottub$/;"	m
pkg_hpack_commit	deps/cowboy/erlang.mk	/^pkg_hpack_commit = master$/;"	m
pkg_hpack_description	deps/cowboy/erlang.mk	/^pkg_hpack_description = HPACK Implementation for Erlang$/;"	m
pkg_hpack_fetch	deps/cowboy/erlang.mk	/^pkg_hpack_fetch = git$/;"	m
pkg_hpack_homepage	deps/cowboy/erlang.mk	/^pkg_hpack_homepage = https:\/\/github.com\/joedevivo\/hpack$/;"	m
pkg_hpack_name	deps/cowboy/erlang.mk	/^pkg_hpack_name = hpack$/;"	m
pkg_hpack_repo	deps/cowboy/erlang.mk	/^pkg_hpack_repo = https:\/\/github.com\/joedevivo\/hpack$/;"	m
pkg_hyper_commit	deps/cowboy/erlang.mk	/^pkg_hyper_commit = master$/;"	m
pkg_hyper_description	deps/cowboy/erlang.mk	/^pkg_hyper_description = Erlang implementation of HyperLogLog$/;"	m
pkg_hyper_fetch	deps/cowboy/erlang.mk	/^pkg_hyper_fetch = git$/;"	m
pkg_hyper_homepage	deps/cowboy/erlang.mk	/^pkg_hyper_homepage = https:\/\/github.com\/GameAnalytics\/hyper$/;"	m
pkg_hyper_name	deps/cowboy/erlang.mk	/^pkg_hyper_name = hyper$/;"	m
pkg_hyper_repo	deps/cowboy/erlang.mk	/^pkg_hyper_repo = https:\/\/github.com\/GameAnalytics\/hyper$/;"	m
pkg_ibrowse_commit	deps/cowboy/erlang.mk	/^pkg_ibrowse_commit = v4.1.1$/;"	m
pkg_ibrowse_description	deps/cowboy/erlang.mk	/^pkg_ibrowse_description = Erlang HTTP client$/;"	m
pkg_ibrowse_fetch	deps/cowboy/erlang.mk	/^pkg_ibrowse_fetch = git$/;"	m
pkg_ibrowse_homepage	deps/cowboy/erlang.mk	/^pkg_ibrowse_homepage = https:\/\/github.com\/cmullaparthi\/ibrowse$/;"	m
pkg_ibrowse_name	deps/cowboy/erlang.mk	/^pkg_ibrowse_name = ibrowse$/;"	m
pkg_ibrowse_repo	deps/cowboy/erlang.mk	/^pkg_ibrowse_repo = https:\/\/github.com\/cmullaparthi\/ibrowse$/;"	m
pkg_ierlang_commit	deps/cowboy/erlang.mk	/^pkg_ierlang_commit = master$/;"	m
pkg_ierlang_description	deps/cowboy/erlang.mk	/^pkg_ierlang_description = An Erlang language kernel for IPython.$/;"	m
pkg_ierlang_fetch	deps/cowboy/erlang.mk	/^pkg_ierlang_fetch = git$/;"	m
pkg_ierlang_homepage	deps/cowboy/erlang.mk	/^pkg_ierlang_homepage = https:\/\/github.com\/robbielynch\/ierlang$/;"	m
pkg_ierlang_name	deps/cowboy/erlang.mk	/^pkg_ierlang_name = ierlang$/;"	m
pkg_ierlang_repo	deps/cowboy/erlang.mk	/^pkg_ierlang_repo = https:\/\/github.com\/robbielynch\/ierlang$/;"	m
pkg_iota_commit	deps/cowboy/erlang.mk	/^pkg_iota_commit = master$/;"	m
pkg_iota_description	deps/cowboy/erlang.mk	/^pkg_iota_description = iota (Inter-dependency Objective Testing Apparatus) - a tool to enforce clean separation of responsibilities in Erlang code$/;"	m
pkg_iota_fetch	deps/cowboy/erlang.mk	/^pkg_iota_fetch = git$/;"	m
pkg_iota_homepage	deps/cowboy/erlang.mk	/^pkg_iota_homepage = https:\/\/github.com\/jpgneves\/iota$/;"	m
pkg_iota_name	deps/cowboy/erlang.mk	/^pkg_iota_name = iota$/;"	m
pkg_iota_repo	deps/cowboy/erlang.mk	/^pkg_iota_repo = https:\/\/github.com\/jpgneves\/iota$/;"	m
pkg_irc_lib_commit	deps/cowboy/erlang.mk	/^pkg_irc_lib_commit = master$/;"	m
pkg_irc_lib_description	deps/cowboy/erlang.mk	/^pkg_irc_lib_description = Erlang irc client library$/;"	m
pkg_irc_lib_fetch	deps/cowboy/erlang.mk	/^pkg_irc_lib_fetch = git$/;"	m
pkg_irc_lib_homepage	deps/cowboy/erlang.mk	/^pkg_irc_lib_homepage = https:\/\/github.com\/OtpChatBot\/irc_lib$/;"	m
pkg_irc_lib_name	deps/cowboy/erlang.mk	/^pkg_irc_lib_name = irc_lib$/;"	m
pkg_irc_lib_repo	deps/cowboy/erlang.mk	/^pkg_irc_lib_repo = https:\/\/github.com\/OtpChatBot\/irc_lib$/;"	m
pkg_ircd_commit	deps/cowboy/erlang.mk	/^pkg_ircd_commit = master$/;"	m
pkg_ircd_description	deps/cowboy/erlang.mk	/^pkg_ircd_description = A pluggable IRC daemon application\/library for Erlang.$/;"	m
pkg_ircd_fetch	deps/cowboy/erlang.mk	/^pkg_ircd_fetch = git$/;"	m
pkg_ircd_homepage	deps/cowboy/erlang.mk	/^pkg_ircd_homepage = https:\/\/github.com\/tonyg\/erlang-ircd$/;"	m
pkg_ircd_name	deps/cowboy/erlang.mk	/^pkg_ircd_name = ircd$/;"	m
pkg_ircd_repo	deps/cowboy/erlang.mk	/^pkg_ircd_repo = https:\/\/github.com\/tonyg\/erlang-ircd$/;"	m
pkg_iris_commit	deps/cowboy/erlang.mk	/^pkg_iris_commit = master$/;"	m
pkg_iris_description	deps/cowboy/erlang.mk	/^pkg_iris_description = Iris Erlang binding$/;"	m
pkg_iris_fetch	deps/cowboy/erlang.mk	/^pkg_iris_fetch = git$/;"	m
pkg_iris_homepage	deps/cowboy/erlang.mk	/^pkg_iris_homepage = https:\/\/github.com\/project-iris\/iris-erl$/;"	m
pkg_iris_name	deps/cowboy/erlang.mk	/^pkg_iris_name = iris$/;"	m
pkg_iris_repo	deps/cowboy/erlang.mk	/^pkg_iris_repo = https:\/\/github.com\/project-iris\/iris-erl$/;"	m
pkg_iso8601_commit	deps/cowboy/erlang.mk	/^pkg_iso8601_commit = master$/;"	m
pkg_iso8601_description	deps/cowboy/erlang.mk	/^pkg_iso8601_description = Erlang ISO 8601 date formatter\/parser$/;"	m
pkg_iso8601_fetch	deps/cowboy/erlang.mk	/^pkg_iso8601_fetch = git$/;"	m
pkg_iso8601_homepage	deps/cowboy/erlang.mk	/^pkg_iso8601_homepage = https:\/\/github.com\/seansawyer\/erlang_iso8601$/;"	m
pkg_iso8601_name	deps/cowboy/erlang.mk	/^pkg_iso8601_name = iso8601$/;"	m
pkg_iso8601_repo	deps/cowboy/erlang.mk	/^pkg_iso8601_repo = https:\/\/github.com\/seansawyer\/erlang_iso8601$/;"	m
pkg_itweet_commit	deps/cowboy/erlang.mk	/^pkg_itweet_commit = v2.0$/;"	m
pkg_itweet_description	deps/cowboy/erlang.mk	/^pkg_itweet_description = Twitter Stream API on ibrowse$/;"	m
pkg_itweet_fetch	deps/cowboy/erlang.mk	/^pkg_itweet_fetch = git$/;"	m
pkg_itweet_homepage	deps/cowboy/erlang.mk	/^pkg_itweet_homepage = http:\/\/inaka.github.com\/itweet\/$/;"	m
pkg_itweet_name	deps/cowboy/erlang.mk	/^pkg_itweet_name = itweet$/;"	m
pkg_itweet_repo	deps/cowboy/erlang.mk	/^pkg_itweet_repo = https:\/\/github.com\/inaka\/itweet$/;"	m
pkg_jerg_commit	deps/cowboy/erlang.mk	/^pkg_jerg_commit = master$/;"	m
pkg_jerg_description	deps/cowboy/erlang.mk	/^pkg_jerg_description = JSON Schema to Erlang Records Generator$/;"	m
pkg_jerg_fetch	deps/cowboy/erlang.mk	/^pkg_jerg_fetch = git$/;"	m
pkg_jerg_homepage	deps/cowboy/erlang.mk	/^pkg_jerg_homepage = https:\/\/github.com\/ddossot\/jerg$/;"	m
pkg_jerg_name	deps/cowboy/erlang.mk	/^pkg_jerg_name = jerg$/;"	m
pkg_jerg_repo	deps/cowboy/erlang.mk	/^pkg_jerg_repo = https:\/\/github.com\/ddossot\/jerg$/;"	m
pkg_jesse_commit	deps/cowboy/erlang.mk	/^pkg_jesse_commit = master$/;"	m
pkg_jesse_description	deps/cowboy/erlang.mk	/^pkg_jesse_description = jesse (JSon Schema Erlang) is an implementation of a json schema validator for Erlang.$/;"	m
pkg_jesse_fetch	deps/cowboy/erlang.mk	/^pkg_jesse_fetch = git$/;"	m
pkg_jesse_homepage	deps/cowboy/erlang.mk	/^pkg_jesse_homepage = https:\/\/github.com\/klarna\/jesse$/;"	m
pkg_jesse_name	deps/cowboy/erlang.mk	/^pkg_jesse_name = jesse$/;"	m
pkg_jesse_repo	deps/cowboy/erlang.mk	/^pkg_jesse_repo = https:\/\/github.com\/klarna\/jesse$/;"	m
pkg_jiffy_commit	deps/cowboy/erlang.mk	/^pkg_jiffy_commit = master$/;"	m
pkg_jiffy_description	deps/cowboy/erlang.mk	/^pkg_jiffy_description = JSON NIFs for Erlang.$/;"	m
pkg_jiffy_fetch	deps/cowboy/erlang.mk	/^pkg_jiffy_fetch = git$/;"	m
pkg_jiffy_homepage	deps/cowboy/erlang.mk	/^pkg_jiffy_homepage = https:\/\/github.com\/davisp\/jiffy$/;"	m
pkg_jiffy_name	deps/cowboy/erlang.mk	/^pkg_jiffy_name = jiffy$/;"	m
pkg_jiffy_repo	deps/cowboy/erlang.mk	/^pkg_jiffy_repo = https:\/\/github.com\/davisp\/jiffy$/;"	m
pkg_jiffy_v_commit	deps/cowboy/erlang.mk	/^pkg_jiffy_v_commit = 0.3.3$/;"	m
pkg_jiffy_v_description	deps/cowboy/erlang.mk	/^pkg_jiffy_v_description = JSON validation utility$/;"	m
pkg_jiffy_v_fetch	deps/cowboy/erlang.mk	/^pkg_jiffy_v_fetch = git$/;"	m
pkg_jiffy_v_homepage	deps/cowboy/erlang.mk	/^pkg_jiffy_v_homepage = https:\/\/github.com\/shizzard\/jiffy-v$/;"	m
pkg_jiffy_v_name	deps/cowboy/erlang.mk	/^pkg_jiffy_v_name = jiffy_v$/;"	m
pkg_jiffy_v_repo	deps/cowboy/erlang.mk	/^pkg_jiffy_v_repo = https:\/\/github.com\/shizzard\/jiffy-v$/;"	m
pkg_jobs_commit	deps/cowboy/erlang.mk	/^pkg_jobs_commit = 0.3$/;"	m
pkg_jobs_description	deps/cowboy/erlang.mk	/^pkg_jobs_description = a Job scheduler for load regulation$/;"	m
pkg_jobs_fetch	deps/cowboy/erlang.mk	/^pkg_jobs_fetch = git$/;"	m
pkg_jobs_homepage	deps/cowboy/erlang.mk	/^pkg_jobs_homepage = https:\/\/github.com\/esl\/jobs$/;"	m
pkg_jobs_name	deps/cowboy/erlang.mk	/^pkg_jobs_name = jobs$/;"	m
pkg_jobs_repo	deps/cowboy/erlang.mk	/^pkg_jobs_repo = https:\/\/github.com\/esl\/jobs$/;"	m
pkg_joxa_commit	deps/cowboy/erlang.mk	/^pkg_joxa_commit = master$/;"	m
pkg_joxa_description	deps/cowboy/erlang.mk	/^pkg_joxa_description = A Modern Lisp for the Erlang VM$/;"	m
pkg_joxa_fetch	deps/cowboy/erlang.mk	/^pkg_joxa_fetch = git$/;"	m
pkg_joxa_homepage	deps/cowboy/erlang.mk	/^pkg_joxa_homepage = https:\/\/github.com\/joxa\/joxa$/;"	m
pkg_joxa_name	deps/cowboy/erlang.mk	/^pkg_joxa_name = joxa$/;"	m
pkg_joxa_repo	deps/cowboy/erlang.mk	/^pkg_joxa_repo = https:\/\/github.com\/joxa\/joxa$/;"	m
pkg_json_commit	deps/cowboy/erlang.mk	/^pkg_json_commit = master$/;"	m
pkg_json_description	deps/cowboy/erlang.mk	/^pkg_json_description = a high level json library for erlang (17.0+)$/;"	m
pkg_json_fetch	deps/cowboy/erlang.mk	/^pkg_json_fetch = git$/;"	m
pkg_json_homepage	deps/cowboy/erlang.mk	/^pkg_json_homepage = https:\/\/github.com\/talentdeficit\/json$/;"	m
pkg_json_name	deps/cowboy/erlang.mk	/^pkg_json_name = json$/;"	m
pkg_json_rec_commit	deps/cowboy/erlang.mk	/^pkg_json_rec_commit = master$/;"	m
pkg_json_rec_description	deps/cowboy/erlang.mk	/^pkg_json_rec_description = JSON to erlang record$/;"	m
pkg_json_rec_fetch	deps/cowboy/erlang.mk	/^pkg_json_rec_fetch = git$/;"	m
pkg_json_rec_homepage	deps/cowboy/erlang.mk	/^pkg_json_rec_homepage = https:\/\/github.com\/justinkirby\/json_rec$/;"	m
pkg_json_rec_name	deps/cowboy/erlang.mk	/^pkg_json_rec_name = json_rec$/;"	m
pkg_json_rec_repo	deps/cowboy/erlang.mk	/^pkg_json_rec_repo = https:\/\/github.com\/justinkirby\/json_rec$/;"	m
pkg_json_repo	deps/cowboy/erlang.mk	/^pkg_json_repo = https:\/\/github.com\/talentdeficit\/json$/;"	m
pkg_jsonerl_commit	deps/cowboy/erlang.mk	/^pkg_jsonerl_commit = master$/;"	m
pkg_jsonerl_description	deps/cowboy/erlang.mk	/^pkg_jsonerl_description = yet another but slightly different erlang <-> json encoder\/decoder$/;"	m
pkg_jsonerl_fetch	deps/cowboy/erlang.mk	/^pkg_jsonerl_fetch = git$/;"	m
pkg_jsonerl_homepage	deps/cowboy/erlang.mk	/^pkg_jsonerl_homepage = https:\/\/github.com\/lambder\/jsonerl$/;"	m
pkg_jsonerl_name	deps/cowboy/erlang.mk	/^pkg_jsonerl_name = jsonerl$/;"	m
pkg_jsonerl_repo	deps/cowboy/erlang.mk	/^pkg_jsonerl_repo = https:\/\/github.com\/lambder\/jsonerl$/;"	m
pkg_jsonpath_commit	deps/cowboy/erlang.mk	/^pkg_jsonpath_commit = master$/;"	m
pkg_jsonpath_description	deps/cowboy/erlang.mk	/^pkg_jsonpath_description = Fast Erlang JSON data retrieval and updates via javascript-like notation$/;"	m
pkg_jsonpath_fetch	deps/cowboy/erlang.mk	/^pkg_jsonpath_fetch = git$/;"	m
pkg_jsonpath_homepage	deps/cowboy/erlang.mk	/^pkg_jsonpath_homepage = https:\/\/github.com\/GeneStevens\/jsonpath$/;"	m
pkg_jsonpath_name	deps/cowboy/erlang.mk	/^pkg_jsonpath_name = jsonpath$/;"	m
pkg_jsonpath_repo	deps/cowboy/erlang.mk	/^pkg_jsonpath_repo = https:\/\/github.com\/GeneStevens\/jsonpath$/;"	m
pkg_jsonx_commit	deps/cowboy/erlang.mk	/^pkg_jsonx_commit = master$/;"	m
pkg_jsonx_description	deps/cowboy/erlang.mk	/^pkg_jsonx_description = JSONX is an Erlang library for efficient decode and encode JSON, written in C.$/;"	m
pkg_jsonx_fetch	deps/cowboy/erlang.mk	/^pkg_jsonx_fetch = git$/;"	m
pkg_jsonx_homepage	deps/cowboy/erlang.mk	/^pkg_jsonx_homepage = https:\/\/github.com\/iskra\/jsonx$/;"	m
pkg_jsonx_name	deps/cowboy/erlang.mk	/^pkg_jsonx_name = jsonx$/;"	m
pkg_jsonx_repo	deps/cowboy/erlang.mk	/^pkg_jsonx_repo = https:\/\/github.com\/iskra\/jsonx$/;"	m
pkg_jsx_commit	deps/cowboy/erlang.mk	/^pkg_jsx_commit = master$/;"	m
pkg_jsx_description	deps/cowboy/erlang.mk	/^pkg_jsx_description = An Erlang application for consuming, producing and manipulating JSON.$/;"	m
pkg_jsx_fetch	deps/cowboy/erlang.mk	/^pkg_jsx_fetch = git$/;"	m
pkg_jsx_homepage	deps/cowboy/erlang.mk	/^pkg_jsx_homepage = https:\/\/github.com\/talentdeficit\/jsx$/;"	m
pkg_jsx_name	deps/cowboy/erlang.mk	/^pkg_jsx_name = jsx$/;"	m
pkg_jsx_repo	deps/cowboy/erlang.mk	/^pkg_jsx_repo = https:\/\/github.com\/talentdeficit\/jsx$/;"	m
pkg_kafka_commit	deps/cowboy/erlang.mk	/^pkg_kafka_commit = master$/;"	m
pkg_kafka_description	deps/cowboy/erlang.mk	/^pkg_kafka_description = Kafka consumer and producer in Erlang$/;"	m
pkg_kafka_fetch	deps/cowboy/erlang.mk	/^pkg_kafka_fetch = git$/;"	m
pkg_kafka_homepage	deps/cowboy/erlang.mk	/^pkg_kafka_homepage = https:\/\/github.com\/wooga\/kafka-erlang$/;"	m
pkg_kafka_name	deps/cowboy/erlang.mk	/^pkg_kafka_name = kafka$/;"	m
pkg_kafka_repo	deps/cowboy/erlang.mk	/^pkg_kafka_repo = https:\/\/github.com\/wooga\/kafka-erlang$/;"	m
pkg_kai_commit	deps/cowboy/erlang.mk	/^pkg_kai_commit = master$/;"	m
pkg_kai_description	deps/cowboy/erlang.mk	/^pkg_kai_description = DHT storage by Takeshi Inoue$/;"	m
pkg_kai_fetch	deps/cowboy/erlang.mk	/^pkg_kai_fetch = git$/;"	m
pkg_kai_homepage	deps/cowboy/erlang.mk	/^pkg_kai_homepage = https:\/\/github.com\/synrc\/kai$/;"	m
pkg_kai_name	deps/cowboy/erlang.mk	/^pkg_kai_name = kai$/;"	m
pkg_kai_repo	deps/cowboy/erlang.mk	/^pkg_kai_repo = https:\/\/github.com\/synrc\/kai$/;"	m
pkg_katja_commit	deps/cowboy/erlang.mk	/^pkg_katja_commit = master$/;"	m
pkg_katja_description	deps/cowboy/erlang.mk	/^pkg_katja_description = A simple Riemann client written in Erlang.$/;"	m
pkg_katja_fetch	deps/cowboy/erlang.mk	/^pkg_katja_fetch = git$/;"	m
pkg_katja_homepage	deps/cowboy/erlang.mk	/^pkg_katja_homepage = https:\/\/github.com\/nifoc\/katja$/;"	m
pkg_katja_name	deps/cowboy/erlang.mk	/^pkg_katja_name = katja$/;"	m
pkg_katja_repo	deps/cowboy/erlang.mk	/^pkg_katja_repo = https:\/\/github.com\/nifoc\/katja$/;"	m
pkg_kdht_commit	deps/cowboy/erlang.mk	/^pkg_kdht_commit = master$/;"	m
pkg_kdht_description	deps/cowboy/erlang.mk	/^pkg_kdht_description = kdht is an erlang DHT implementation$/;"	m
pkg_kdht_fetch	deps/cowboy/erlang.mk	/^pkg_kdht_fetch = git$/;"	m
pkg_kdht_homepage	deps/cowboy/erlang.mk	/^pkg_kdht_homepage = https:\/\/github.com\/kevinlynx\/kdht$/;"	m
pkg_kdht_name	deps/cowboy/erlang.mk	/^pkg_kdht_name = kdht$/;"	m
pkg_kdht_repo	deps/cowboy/erlang.mk	/^pkg_kdht_repo = https:\/\/github.com\/kevinlynx\/kdht$/;"	m
pkg_key2value_commit	deps/cowboy/erlang.mk	/^pkg_key2value_commit = master$/;"	m
pkg_key2value_description	deps/cowboy/erlang.mk	/^pkg_key2value_description = Erlang 2-way map$/;"	m
pkg_key2value_fetch	deps/cowboy/erlang.mk	/^pkg_key2value_fetch = git$/;"	m
pkg_key2value_homepage	deps/cowboy/erlang.mk	/^pkg_key2value_homepage = https:\/\/github.com\/okeuday\/key2value$/;"	m
pkg_key2value_name	deps/cowboy/erlang.mk	/^pkg_key2value_name = key2value$/;"	m
pkg_key2value_repo	deps/cowboy/erlang.mk	/^pkg_key2value_repo = https:\/\/github.com\/okeuday\/key2value$/;"	m
pkg_keys1value_commit	deps/cowboy/erlang.mk	/^pkg_keys1value_commit = master$/;"	m
pkg_keys1value_description	deps/cowboy/erlang.mk	/^pkg_keys1value_description = Erlang set associative map for key lists$/;"	m
pkg_keys1value_fetch	deps/cowboy/erlang.mk	/^pkg_keys1value_fetch = git$/;"	m
pkg_keys1value_homepage	deps/cowboy/erlang.mk	/^pkg_keys1value_homepage = https:\/\/github.com\/okeuday\/keys1value$/;"	m
pkg_keys1value_name	deps/cowboy/erlang.mk	/^pkg_keys1value_name = keys1value$/;"	m
pkg_keys1value_repo	deps/cowboy/erlang.mk	/^pkg_keys1value_repo = https:\/\/github.com\/okeuday\/keys1value$/;"	m
pkg_kinetic_commit	deps/cowboy/erlang.mk	/^pkg_kinetic_commit = master$/;"	m
pkg_kinetic_description	deps/cowboy/erlang.mk	/^pkg_kinetic_description = Erlang Kinesis Client$/;"	m
pkg_kinetic_fetch	deps/cowboy/erlang.mk	/^pkg_kinetic_fetch = git$/;"	m
pkg_kinetic_homepage	deps/cowboy/erlang.mk	/^pkg_kinetic_homepage = https:\/\/github.com\/AdRoll\/kinetic$/;"	m
pkg_kinetic_name	deps/cowboy/erlang.mk	/^pkg_kinetic_name = kinetic$/;"	m
pkg_kinetic_repo	deps/cowboy/erlang.mk	/^pkg_kinetic_repo = https:\/\/github.com\/AdRoll\/kinetic$/;"	m
pkg_kjell_commit	deps/cowboy/erlang.mk	/^pkg_kjell_commit = master$/;"	m
pkg_kjell_description	deps/cowboy/erlang.mk	/^pkg_kjell_description = Erlang Shell$/;"	m
pkg_kjell_fetch	deps/cowboy/erlang.mk	/^pkg_kjell_fetch = git$/;"	m
pkg_kjell_homepage	deps/cowboy/erlang.mk	/^pkg_kjell_homepage = https:\/\/github.com\/karlll\/kjell$/;"	m
pkg_kjell_name	deps/cowboy/erlang.mk	/^pkg_kjell_name = kjell$/;"	m
pkg_kjell_repo	deps/cowboy/erlang.mk	/^pkg_kjell_repo = https:\/\/github.com\/karlll\/kjell$/;"	m
pkg_kraken_commit	deps/cowboy/erlang.mk	/^pkg_kraken_commit = master$/;"	m
pkg_kraken_description	deps/cowboy/erlang.mk	/^pkg_kraken_description = Distributed Pubsub Server for Realtime Apps$/;"	m
pkg_kraken_fetch	deps/cowboy/erlang.mk	/^pkg_kraken_fetch = git$/;"	m
pkg_kraken_homepage	deps/cowboy/erlang.mk	/^pkg_kraken_homepage = https:\/\/github.com\/Asana\/kraken$/;"	m
pkg_kraken_name	deps/cowboy/erlang.mk	/^pkg_kraken_name = kraken$/;"	m
pkg_kraken_repo	deps/cowboy/erlang.mk	/^pkg_kraken_repo = https:\/\/github.com\/Asana\/kraken$/;"	m
pkg_kucumberl_commit	deps/cowboy/erlang.mk	/^pkg_kucumberl_commit = master$/;"	m
pkg_kucumberl_description	deps/cowboy/erlang.mk	/^pkg_kucumberl_description = A pure-erlang, open-source, implementation of Cucumber$/;"	m
pkg_kucumberl_fetch	deps/cowboy/erlang.mk	/^pkg_kucumberl_fetch = git$/;"	m
pkg_kucumberl_homepage	deps/cowboy/erlang.mk	/^pkg_kucumberl_homepage = https:\/\/github.com\/openshine\/kucumberl$/;"	m
pkg_kucumberl_name	deps/cowboy/erlang.mk	/^pkg_kucumberl_name = kucumberl$/;"	m
pkg_kucumberl_repo	deps/cowboy/erlang.mk	/^pkg_kucumberl_repo = https:\/\/github.com\/openshine\/kucumberl$/;"	m
pkg_kvc_commit	deps/cowboy/erlang.mk	/^pkg_kvc_commit = master$/;"	m
pkg_kvc_description	deps/cowboy/erlang.mk	/^pkg_kvc_description = KVC - Key Value Coding for Erlang data structures$/;"	m
pkg_kvc_fetch	deps/cowboy/erlang.mk	/^pkg_kvc_fetch = git$/;"	m
pkg_kvc_homepage	deps/cowboy/erlang.mk	/^pkg_kvc_homepage = https:\/\/github.com\/etrepum\/kvc$/;"	m
pkg_kvc_name	deps/cowboy/erlang.mk	/^pkg_kvc_name = kvc$/;"	m
pkg_kvc_repo	deps/cowboy/erlang.mk	/^pkg_kvc_repo = https:\/\/github.com\/etrepum\/kvc$/;"	m
pkg_kvlists_commit	deps/cowboy/erlang.mk	/^pkg_kvlists_commit = master$/;"	m
pkg_kvlists_description	deps/cowboy/erlang.mk	/^pkg_kvlists_description = Lists of key-value pairs (decoded JSON) in Erlang$/;"	m
pkg_kvlists_fetch	deps/cowboy/erlang.mk	/^pkg_kvlists_fetch = git$/;"	m
pkg_kvlists_homepage	deps/cowboy/erlang.mk	/^pkg_kvlists_homepage = https:\/\/github.com\/jcomellas\/kvlists$/;"	m
pkg_kvlists_name	deps/cowboy/erlang.mk	/^pkg_kvlists_name = kvlists$/;"	m
pkg_kvlists_repo	deps/cowboy/erlang.mk	/^pkg_kvlists_repo = https:\/\/github.com\/jcomellas\/kvlists$/;"	m
pkg_kvs_commit	deps/cowboy/erlang.mk	/^pkg_kvs_commit = master$/;"	m
pkg_kvs_description	deps/cowboy/erlang.mk	/^pkg_kvs_description = Container and Iterator$/;"	m
pkg_kvs_fetch	deps/cowboy/erlang.mk	/^pkg_kvs_fetch = git$/;"	m
pkg_kvs_homepage	deps/cowboy/erlang.mk	/^pkg_kvs_homepage = https:\/\/github.com\/synrc\/kvs$/;"	m
pkg_kvs_name	deps/cowboy/erlang.mk	/^pkg_kvs_name = kvs$/;"	m
pkg_kvs_repo	deps/cowboy/erlang.mk	/^pkg_kvs_repo = https:\/\/github.com\/synrc\/kvs$/;"	m
pkg_lager_amqp_backend_commit	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_commit = master$/;"	m
pkg_lager_amqp_backend_description	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_description = AMQP RabbitMQ Lager backend$/;"	m
pkg_lager_amqp_backend_fetch	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_fetch = git$/;"	m
pkg_lager_amqp_backend_homepage	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_homepage = https:\/\/github.com\/jbrisbin\/lager_amqp_backend$/;"	m
pkg_lager_amqp_backend_name	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_name = lager_amqp_backend$/;"	m
pkg_lager_amqp_backend_repo	deps/cowboy/erlang.mk	/^pkg_lager_amqp_backend_repo = https:\/\/github.com\/jbrisbin\/lager_amqp_backend$/;"	m
pkg_lager_commit	deps/cowboy/erlang.mk	/^pkg_lager_commit = master$/;"	m
pkg_lager_description	deps/cowboy/erlang.mk	/^pkg_lager_description = A logging framework for Erlang\/OTP.$/;"	m
pkg_lager_fetch	deps/cowboy/erlang.mk	/^pkg_lager_fetch = git$/;"	m
pkg_lager_homepage	deps/cowboy/erlang.mk	/^pkg_lager_homepage = https:\/\/github.com\/basho\/lager$/;"	m
pkg_lager_name	deps/cowboy/erlang.mk	/^pkg_lager_name = lager$/;"	m
pkg_lager_repo	deps/cowboy/erlang.mk	/^pkg_lager_repo = https:\/\/github.com\/basho\/lager$/;"	m
pkg_lager_syslog_commit	deps/cowboy/erlang.mk	/^pkg_lager_syslog_commit = master$/;"	m
pkg_lager_syslog_description	deps/cowboy/erlang.mk	/^pkg_lager_syslog_description = Syslog backend for lager$/;"	m
pkg_lager_syslog_fetch	deps/cowboy/erlang.mk	/^pkg_lager_syslog_fetch = git$/;"	m
pkg_lager_syslog_homepage	deps/cowboy/erlang.mk	/^pkg_lager_syslog_homepage = https:\/\/github.com\/basho\/lager_syslog$/;"	m
pkg_lager_syslog_name	deps/cowboy/erlang.mk	/^pkg_lager_syslog_name = lager_syslog$/;"	m
pkg_lager_syslog_repo	deps/cowboy/erlang.mk	/^pkg_lager_syslog_repo = https:\/\/github.com\/basho\/lager_syslog$/;"	m
pkg_lambdapad_commit	deps/cowboy/erlang.mk	/^pkg_lambdapad_commit = master$/;"	m
pkg_lambdapad_description	deps/cowboy/erlang.mk	/^pkg_lambdapad_description = Static site generator using Erlang. Yes, Erlang.$/;"	m
pkg_lambdapad_fetch	deps/cowboy/erlang.mk	/^pkg_lambdapad_fetch = git$/;"	m
pkg_lambdapad_homepage	deps/cowboy/erlang.mk	/^pkg_lambdapad_homepage = https:\/\/github.com\/gar1t\/lambdapad$/;"	m
pkg_lambdapad_name	deps/cowboy/erlang.mk	/^pkg_lambdapad_name = lambdapad$/;"	m
pkg_lambdapad_repo	deps/cowboy/erlang.mk	/^pkg_lambdapad_repo = https:\/\/github.com\/gar1t\/lambdapad$/;"	m
pkg_lasp_commit	deps/cowboy/erlang.mk	/^pkg_lasp_commit = master$/;"	m
pkg_lasp_description	deps/cowboy/erlang.mk	/^pkg_lasp_description = A Language for Distributed, Eventually Consistent Computations$/;"	m
pkg_lasp_fetch	deps/cowboy/erlang.mk	/^pkg_lasp_fetch = git$/;"	m
pkg_lasp_homepage	deps/cowboy/erlang.mk	/^pkg_lasp_homepage = http:\/\/lasp-lang.org\/$/;"	m
pkg_lasp_name	deps/cowboy/erlang.mk	/^pkg_lasp_name = lasp$/;"	m
pkg_lasp_repo	deps/cowboy/erlang.mk	/^pkg_lasp_repo = https:\/\/github.com\/lasp-lang\/lasp$/;"	m
pkg_lasse_commit	deps/cowboy/erlang.mk	/^pkg_lasse_commit = 0.1.0$/;"	m
pkg_lasse_description	deps/cowboy/erlang.mk	/^pkg_lasse_description = SSE handler for Cowboy$/;"	m
pkg_lasse_fetch	deps/cowboy/erlang.mk	/^pkg_lasse_fetch = git$/;"	m
pkg_lasse_homepage	deps/cowboy/erlang.mk	/^pkg_lasse_homepage = https:\/\/github.com\/inaka\/lasse$/;"	m
pkg_lasse_name	deps/cowboy/erlang.mk	/^pkg_lasse_name = lasse$/;"	m
pkg_lasse_repo	deps/cowboy/erlang.mk	/^pkg_lasse_repo = https:\/\/github.com\/inaka\/lasse$/;"	m
pkg_ldap_commit	deps/cowboy/erlang.mk	/^pkg_ldap_commit = master$/;"	m
pkg_ldap_description	deps/cowboy/erlang.mk	/^pkg_ldap_description = LDAP server written in Erlang$/;"	m
pkg_ldap_fetch	deps/cowboy/erlang.mk	/^pkg_ldap_fetch = git$/;"	m
pkg_ldap_homepage	deps/cowboy/erlang.mk	/^pkg_ldap_homepage = https:\/\/github.com\/spawnproc\/ldap$/;"	m
pkg_ldap_name	deps/cowboy/erlang.mk	/^pkg_ldap_name = ldap$/;"	m
pkg_ldap_repo	deps/cowboy/erlang.mk	/^pkg_ldap_repo = https:\/\/github.com\/spawnproc\/ldap$/;"	m
pkg_lethink_commit	deps/cowboy/erlang.mk	/^pkg_lethink_commit = master$/;"	m
pkg_lethink_description	deps/cowboy/erlang.mk	/^pkg_lethink_description = erlang driver for rethinkdb$/;"	m
pkg_lethink_fetch	deps/cowboy/erlang.mk	/^pkg_lethink_fetch = git$/;"	m
pkg_lethink_homepage	deps/cowboy/erlang.mk	/^pkg_lethink_homepage = https:\/\/github.com\/taybin\/lethink$/;"	m
pkg_lethink_name	deps/cowboy/erlang.mk	/^pkg_lethink_name = lethink$/;"	m
pkg_lethink_repo	deps/cowboy/erlang.mk	/^pkg_lethink_repo = https:\/\/github.com\/taybin\/lethink$/;"	m
pkg_lfe_commit	deps/cowboy/erlang.mk	/^pkg_lfe_commit = master$/;"	m
pkg_lfe_description	deps/cowboy/erlang.mk	/^pkg_lfe_description = Lisp Flavoured Erlang (LFE)$/;"	m
pkg_lfe_fetch	deps/cowboy/erlang.mk	/^pkg_lfe_fetch = git$/;"	m
pkg_lfe_homepage	deps/cowboy/erlang.mk	/^pkg_lfe_homepage = https:\/\/github.com\/rvirding\/lfe$/;"	m
pkg_lfe_name	deps/cowboy/erlang.mk	/^pkg_lfe_name = lfe$/;"	m
pkg_lfe_repo	deps/cowboy/erlang.mk	/^pkg_lfe_repo = https:\/\/github.com\/rvirding\/lfe$/;"	m
pkg_ling_commit	deps/cowboy/erlang.mk	/^pkg_ling_commit = master$/;"	m
pkg_ling_description	deps/cowboy/erlang.mk	/^pkg_ling_description = Erlang on Xen$/;"	m
pkg_ling_fetch	deps/cowboy/erlang.mk	/^pkg_ling_fetch = git$/;"	m
pkg_ling_homepage	deps/cowboy/erlang.mk	/^pkg_ling_homepage = https:\/\/github.com\/cloudozer\/ling$/;"	m
pkg_ling_name	deps/cowboy/erlang.mk	/^pkg_ling_name = ling$/;"	m
pkg_ling_repo	deps/cowboy/erlang.mk	/^pkg_ling_repo = https:\/\/github.com\/cloudozer\/ling$/;"	m
pkg_live_commit	deps/cowboy/erlang.mk	/^pkg_live_commit = master$/;"	m
pkg_live_description	deps/cowboy/erlang.mk	/^pkg_live_description = Automated module and configuration reloader.$/;"	m
pkg_live_fetch	deps/cowboy/erlang.mk	/^pkg_live_fetch = git$/;"	m
pkg_live_homepage	deps/cowboy/erlang.mk	/^pkg_live_homepage = http:\/\/ninenines.eu$/;"	m
pkg_live_name	deps/cowboy/erlang.mk	/^pkg_live_name = live$/;"	m
pkg_live_repo	deps/cowboy/erlang.mk	/^pkg_live_repo = https:\/\/github.com\/ninenines\/live$/;"	m
pkg_lmq_commit	deps/cowboy/erlang.mk	/^pkg_lmq_commit = master$/;"	m
pkg_lmq_description	deps/cowboy/erlang.mk	/^pkg_lmq_description = Lightweight Message Queue$/;"	m
pkg_lmq_fetch	deps/cowboy/erlang.mk	/^pkg_lmq_fetch = git$/;"	m
pkg_lmq_homepage	deps/cowboy/erlang.mk	/^pkg_lmq_homepage = https:\/\/github.com\/iij\/lmq$/;"	m
pkg_lmq_name	deps/cowboy/erlang.mk	/^pkg_lmq_name = lmq$/;"	m
pkg_lmq_repo	deps/cowboy/erlang.mk	/^pkg_lmq_repo = https:\/\/github.com\/iij\/lmq$/;"	m
pkg_locker_commit	deps/cowboy/erlang.mk	/^pkg_locker_commit = master$/;"	m
pkg_locker_description	deps/cowboy/erlang.mk	/^pkg_locker_description = Atomic distributed 'check and set' for short-lived keys$/;"	m
pkg_locker_fetch	deps/cowboy/erlang.mk	/^pkg_locker_fetch = git$/;"	m
pkg_locker_homepage	deps/cowboy/erlang.mk	/^pkg_locker_homepage = https:\/\/github.com\/wooga\/locker$/;"	m
pkg_locker_name	deps/cowboy/erlang.mk	/^pkg_locker_name = locker$/;"	m
pkg_locker_repo	deps/cowboy/erlang.mk	/^pkg_locker_repo = https:\/\/github.com\/wooga\/locker$/;"	m
pkg_locks_commit	deps/cowboy/erlang.mk	/^pkg_locks_commit = master$/;"	m
pkg_locks_description	deps/cowboy/erlang.mk	/^pkg_locks_description = A scalable, deadlock-resolving resource locker$/;"	m
pkg_locks_fetch	deps/cowboy/erlang.mk	/^pkg_locks_fetch = git$/;"	m
pkg_locks_homepage	deps/cowboy/erlang.mk	/^pkg_locks_homepage = https:\/\/github.com\/uwiger\/locks$/;"	m
pkg_locks_name	deps/cowboy/erlang.mk	/^pkg_locks_name = locks$/;"	m
pkg_locks_repo	deps/cowboy/erlang.mk	/^pkg_locks_repo = https:\/\/github.com\/uwiger\/locks$/;"	m
pkg_log4erl_commit	deps/cowboy/erlang.mk	/^pkg_log4erl_commit = master$/;"	m
pkg_log4erl_description	deps/cowboy/erlang.mk	/^pkg_log4erl_description = A logger for erlang in the spirit of Log4J.$/;"	m
pkg_log4erl_fetch	deps/cowboy/erlang.mk	/^pkg_log4erl_fetch = git$/;"	m
pkg_log4erl_homepage	deps/cowboy/erlang.mk	/^pkg_log4erl_homepage = https:\/\/github.com\/ahmednawras\/log4erl$/;"	m
pkg_log4erl_name	deps/cowboy/erlang.mk	/^pkg_log4erl_name = log4erl$/;"	m
pkg_log4erl_repo	deps/cowboy/erlang.mk	/^pkg_log4erl_repo = https:\/\/github.com\/ahmednawras\/log4erl$/;"	m
pkg_lol_commit	deps/cowboy/erlang.mk	/^pkg_lol_commit = master$/;"	m
pkg_lol_description	deps/cowboy/erlang.mk	/^pkg_lol_description = Lisp on erLang, and programming is fun again$/;"	m
pkg_lol_fetch	deps/cowboy/erlang.mk	/^pkg_lol_fetch = git$/;"	m
pkg_lol_homepage	deps/cowboy/erlang.mk	/^pkg_lol_homepage = https:\/\/github.com\/b0oh\/lol$/;"	m
pkg_lol_name	deps/cowboy/erlang.mk	/^pkg_lol_name = lol$/;"	m
pkg_lol_repo	deps/cowboy/erlang.mk	/^pkg_lol_repo = https:\/\/github.com\/b0oh\/lol$/;"	m
pkg_lucid_commit	deps/cowboy/erlang.mk	/^pkg_lucid_commit = master$/;"	m
pkg_lucid_description	deps/cowboy/erlang.mk	/^pkg_lucid_description = HTTP\/2 server written in Erlang$/;"	m
pkg_lucid_fetch	deps/cowboy/erlang.mk	/^pkg_lucid_fetch = git$/;"	m
pkg_lucid_homepage	deps/cowboy/erlang.mk	/^pkg_lucid_homepage = https:\/\/github.com\/tatsuhiro-t\/lucid$/;"	m
pkg_lucid_name	deps/cowboy/erlang.mk	/^pkg_lucid_name = lucid$/;"	m
pkg_lucid_repo	deps/cowboy/erlang.mk	/^pkg_lucid_repo = https:\/\/github.com\/tatsuhiro-t\/lucid$/;"	m
pkg_luerl_commit	deps/cowboy/erlang.mk	/^pkg_luerl_commit = develop$/;"	m
pkg_luerl_description	deps/cowboy/erlang.mk	/^pkg_luerl_description = Lua in Erlang$/;"	m
pkg_luerl_fetch	deps/cowboy/erlang.mk	/^pkg_luerl_fetch = git$/;"	m
pkg_luerl_homepage	deps/cowboy/erlang.mk	/^pkg_luerl_homepage = https:\/\/github.com\/rvirding\/luerl$/;"	m
pkg_luerl_name	deps/cowboy/erlang.mk	/^pkg_luerl_name = luerl$/;"	m
pkg_luerl_repo	deps/cowboy/erlang.mk	/^pkg_luerl_repo = https:\/\/github.com\/rvirding\/luerl$/;"	m
pkg_luwak_commit	deps/cowboy/erlang.mk	/^pkg_luwak_commit = master$/;"	m
pkg_luwak_description	deps/cowboy/erlang.mk	/^pkg_luwak_description = Large-object storage interface for Riak$/;"	m
pkg_luwak_fetch	deps/cowboy/erlang.mk	/^pkg_luwak_fetch = git$/;"	m
pkg_luwak_homepage	deps/cowboy/erlang.mk	/^pkg_luwak_homepage = https:\/\/github.com\/basho\/luwak$/;"	m
pkg_luwak_name	deps/cowboy/erlang.mk	/^pkg_luwak_name = luwak$/;"	m
pkg_luwak_repo	deps/cowboy/erlang.mk	/^pkg_luwak_repo = https:\/\/github.com\/basho\/luwak$/;"	m
pkg_lux_commit	deps/cowboy/erlang.mk	/^pkg_lux_commit = master$/;"	m
pkg_lux_description	deps/cowboy/erlang.mk	/^pkg_lux_description = Lux (LUcid eXpect scripting) simplifies test automation and provides an Expect-style execution of commands$/;"	m
pkg_lux_fetch	deps/cowboy/erlang.mk	/^pkg_lux_fetch = git$/;"	m
pkg_lux_homepage	deps/cowboy/erlang.mk	/^pkg_lux_homepage = https:\/\/github.com\/hawk\/lux$/;"	m
pkg_lux_name	deps/cowboy/erlang.mk	/^pkg_lux_name = lux$/;"	m
pkg_lux_repo	deps/cowboy/erlang.mk	/^pkg_lux_repo = https:\/\/github.com\/hawk\/lux$/;"	m
pkg_machi_commit	deps/cowboy/erlang.mk	/^pkg_machi_commit = master$/;"	m
pkg_machi_description	deps/cowboy/erlang.mk	/^pkg_machi_description = Machi file store$/;"	m
pkg_machi_fetch	deps/cowboy/erlang.mk	/^pkg_machi_fetch = git$/;"	m
pkg_machi_homepage	deps/cowboy/erlang.mk	/^pkg_machi_homepage = https:\/\/github.com\/basho\/machi$/;"	m
pkg_machi_name	deps/cowboy/erlang.mk	/^pkg_machi_name = machi$/;"	m
pkg_machi_repo	deps/cowboy/erlang.mk	/^pkg_machi_repo = https:\/\/github.com\/basho\/machi$/;"	m
pkg_mad_commit	deps/cowboy/erlang.mk	/^pkg_mad_commit = master$/;"	m
pkg_mad_description	deps/cowboy/erlang.mk	/^pkg_mad_description = Small and Fast Rebar Replacement$/;"	m
pkg_mad_fetch	deps/cowboy/erlang.mk	/^pkg_mad_fetch = git$/;"	m
pkg_mad_homepage	deps/cowboy/erlang.mk	/^pkg_mad_homepage = https:\/\/github.com\/synrc\/mad$/;"	m
pkg_mad_name	deps/cowboy/erlang.mk	/^pkg_mad_name = mad$/;"	m
pkg_mad_repo	deps/cowboy/erlang.mk	/^pkg_mad_repo = https:\/\/github.com\/synrc\/mad$/;"	m
pkg_marina_commit	deps/cowboy/erlang.mk	/^pkg_marina_commit = master$/;"	m
pkg_marina_description	deps/cowboy/erlang.mk	/^pkg_marina_description = Non-blocking Erlang Cassandra CQL3 client$/;"	m
pkg_marina_fetch	deps/cowboy/erlang.mk	/^pkg_marina_fetch = git$/;"	m
pkg_marina_homepage	deps/cowboy/erlang.mk	/^pkg_marina_homepage = https:\/\/github.com\/lpgauth\/marina$/;"	m
pkg_marina_name	deps/cowboy/erlang.mk	/^pkg_marina_name = marina$/;"	m
pkg_marina_repo	deps/cowboy/erlang.mk	/^pkg_marina_repo = https:\/\/github.com\/lpgauth\/marina$/;"	m
pkg_mavg_commit	deps/cowboy/erlang.mk	/^pkg_mavg_commit = master$/;"	m
pkg_mavg_description	deps/cowboy/erlang.mk	/^pkg_mavg_description = Erlang :: Exponential moving average library$/;"	m
pkg_mavg_fetch	deps/cowboy/erlang.mk	/^pkg_mavg_fetch = git$/;"	m
pkg_mavg_homepage	deps/cowboy/erlang.mk	/^pkg_mavg_homepage = https:\/\/github.com\/EchoTeam\/mavg$/;"	m
pkg_mavg_name	deps/cowboy/erlang.mk	/^pkg_mavg_name = mavg$/;"	m
pkg_mavg_repo	deps/cowboy/erlang.mk	/^pkg_mavg_repo = https:\/\/github.com\/EchoTeam\/mavg$/;"	m
pkg_mc_erl_commit	deps/cowboy/erlang.mk	/^pkg_mc_erl_commit = master$/;"	m
pkg_mc_erl_description	deps/cowboy/erlang.mk	/^pkg_mc_erl_description = mc-erl is a server for Minecraft 1.4.7 written in Erlang.$/;"	m
pkg_mc_erl_fetch	deps/cowboy/erlang.mk	/^pkg_mc_erl_fetch = git$/;"	m
pkg_mc_erl_homepage	deps/cowboy/erlang.mk	/^pkg_mc_erl_homepage = https:\/\/github.com\/clonejo\/mc-erl$/;"	m
pkg_mc_erl_name	deps/cowboy/erlang.mk	/^pkg_mc_erl_name = mc_erl$/;"	m
pkg_mc_erl_repo	deps/cowboy/erlang.mk	/^pkg_mc_erl_repo = https:\/\/github.com\/clonejo\/mc-erl$/;"	m
pkg_mcd_commit	deps/cowboy/erlang.mk	/^pkg_mcd_commit = master$/;"	m
pkg_mcd_description	deps/cowboy/erlang.mk	/^pkg_mcd_description = Fast memcached protocol client in pure Erlang$/;"	m
pkg_mcd_fetch	deps/cowboy/erlang.mk	/^pkg_mcd_fetch = git$/;"	m
pkg_mcd_homepage	deps/cowboy/erlang.mk	/^pkg_mcd_homepage = https:\/\/github.com\/EchoTeam\/mcd$/;"	m
pkg_mcd_name	deps/cowboy/erlang.mk	/^pkg_mcd_name = mcd$/;"	m
pkg_mcd_repo	deps/cowboy/erlang.mk	/^pkg_mcd_repo = https:\/\/github.com\/EchoTeam\/mcd$/;"	m
pkg_mcerlang_commit	deps/cowboy/erlang.mk	/^pkg_mcerlang_commit = master$/;"	m
pkg_mcerlang_description	deps/cowboy/erlang.mk	/^pkg_mcerlang_description = The McErlang model checker for Erlang$/;"	m
pkg_mcerlang_fetch	deps/cowboy/erlang.mk	/^pkg_mcerlang_fetch = git$/;"	m
pkg_mcerlang_homepage	deps/cowboy/erlang.mk	/^pkg_mcerlang_homepage = https:\/\/github.com\/fredlund\/McErlang$/;"	m
pkg_mcerlang_name	deps/cowboy/erlang.mk	/^pkg_mcerlang_name = mcerlang$/;"	m
pkg_mcerlang_repo	deps/cowboy/erlang.mk	/^pkg_mcerlang_repo = https:\/\/github.com\/fredlund\/McErlang$/;"	m
pkg_meck_commit	deps/cowboy/erlang.mk	/^pkg_meck_commit = master$/;"	m
pkg_meck_description	deps/cowboy/erlang.mk	/^pkg_meck_description = A mocking library for Erlang$/;"	m
pkg_meck_fetch	deps/cowboy/erlang.mk	/^pkg_meck_fetch = git$/;"	m
pkg_meck_homepage	deps/cowboy/erlang.mk	/^pkg_meck_homepage = https:\/\/github.com\/eproxus\/meck$/;"	m
pkg_meck_name	deps/cowboy/erlang.mk	/^pkg_meck_name = meck$/;"	m
pkg_meck_repo	deps/cowboy/erlang.mk	/^pkg_meck_repo = https:\/\/github.com\/eproxus\/meck$/;"	m
pkg_mekao_commit	deps/cowboy/erlang.mk	/^pkg_mekao_commit = master$/;"	m
pkg_mekao_description	deps/cowboy/erlang.mk	/^pkg_mekao_description = SQL constructor$/;"	m
pkg_mekao_fetch	deps/cowboy/erlang.mk	/^pkg_mekao_fetch = git$/;"	m
pkg_mekao_homepage	deps/cowboy/erlang.mk	/^pkg_mekao_homepage = https:\/\/github.com\/ddosia\/mekao$/;"	m
pkg_mekao_name	deps/cowboy/erlang.mk	/^pkg_mekao_name = mekao$/;"	m
pkg_mekao_repo	deps/cowboy/erlang.mk	/^pkg_mekao_repo = https:\/\/github.com\/ddosia\/mekao$/;"	m
pkg_memo_commit	deps/cowboy/erlang.mk	/^pkg_memo_commit = master$/;"	m
pkg_memo_description	deps/cowboy/erlang.mk	/^pkg_memo_description = Erlang memoization server$/;"	m
pkg_memo_fetch	deps/cowboy/erlang.mk	/^pkg_memo_fetch = git$/;"	m
pkg_memo_homepage	deps/cowboy/erlang.mk	/^pkg_memo_homepage = https:\/\/github.com\/tuncer\/memo$/;"	m
pkg_memo_name	deps/cowboy/erlang.mk	/^pkg_memo_name = memo$/;"	m
pkg_memo_repo	deps/cowboy/erlang.mk	/^pkg_memo_repo = https:\/\/github.com\/tuncer\/memo$/;"	m
pkg_merge_index_commit	deps/cowboy/erlang.mk	/^pkg_merge_index_commit = master$/;"	m
pkg_merge_index_description	deps/cowboy/erlang.mk	/^pkg_merge_index_description = MergeIndex is an Erlang library for storing ordered sets on disk. It is very similar to an SSTable (in Google's Bigtable) or an HFile (in Hadoop).$/;"	m
pkg_merge_index_fetch	deps/cowboy/erlang.mk	/^pkg_merge_index_fetch = git$/;"	m
pkg_merge_index_homepage	deps/cowboy/erlang.mk	/^pkg_merge_index_homepage = https:\/\/github.com\/basho\/merge_index$/;"	m
pkg_merge_index_name	deps/cowboy/erlang.mk	/^pkg_merge_index_name = merge_index$/;"	m
pkg_merge_index_repo	deps/cowboy/erlang.mk	/^pkg_merge_index_repo = https:\/\/github.com\/basho\/merge_index$/;"	m
pkg_merl_commit	deps/cowboy/erlang.mk	/^pkg_merl_commit = master$/;"	m
pkg_merl_description	deps/cowboy/erlang.mk	/^pkg_merl_description = Metaprogramming in Erlang$/;"	m
pkg_merl_fetch	deps/cowboy/erlang.mk	/^pkg_merl_fetch = git$/;"	m
pkg_merl_homepage	deps/cowboy/erlang.mk	/^pkg_merl_homepage = https:\/\/github.com\/richcarl\/merl$/;"	m
pkg_merl_name	deps/cowboy/erlang.mk	/^pkg_merl_name = merl$/;"	m
pkg_merl_repo	deps/cowboy/erlang.mk	/^pkg_merl_repo = https:\/\/github.com\/richcarl\/merl$/;"	m
pkg_mimetypes_commit	deps/cowboy/erlang.mk	/^pkg_mimetypes_commit = master$/;"	m
pkg_mimetypes_description	deps/cowboy/erlang.mk	/^pkg_mimetypes_description = Erlang MIME types library$/;"	m
pkg_mimetypes_fetch	deps/cowboy/erlang.mk	/^pkg_mimetypes_fetch = git$/;"	m
pkg_mimetypes_homepage	deps/cowboy/erlang.mk	/^pkg_mimetypes_homepage = https:\/\/github.com\/spawngrid\/mimetypes$/;"	m
pkg_mimetypes_name	deps/cowboy/erlang.mk	/^pkg_mimetypes_name = mimetypes$/;"	m
pkg_mimetypes_repo	deps/cowboy/erlang.mk	/^pkg_mimetypes_repo = https:\/\/github.com\/spawngrid\/mimetypes$/;"	m
pkg_mixer_commit	deps/cowboy/erlang.mk	/^pkg_mixer_commit = master$/;"	m
pkg_mixer_description	deps/cowboy/erlang.mk	/^pkg_mixer_description = Mix in functions from other modules$/;"	m
pkg_mixer_fetch	deps/cowboy/erlang.mk	/^pkg_mixer_fetch = git$/;"	m
pkg_mixer_homepage	deps/cowboy/erlang.mk	/^pkg_mixer_homepage = https:\/\/github.com\/chef\/mixer$/;"	m
pkg_mixer_name	deps/cowboy/erlang.mk	/^pkg_mixer_name = mixer$/;"	m
pkg_mixer_repo	deps/cowboy/erlang.mk	/^pkg_mixer_repo = https:\/\/github.com\/chef\/mixer$/;"	m
pkg_mochiweb_commit	deps/cowboy/erlang.mk	/^pkg_mochiweb_commit = master$/;"	m
pkg_mochiweb_description	deps/cowboy/erlang.mk	/^pkg_mochiweb_description = MochiWeb is an Erlang library for building lightweight HTTP servers.$/;"	m
pkg_mochiweb_fetch	deps/cowboy/erlang.mk	/^pkg_mochiweb_fetch = git$/;"	m
pkg_mochiweb_homepage	deps/cowboy/erlang.mk	/^pkg_mochiweb_homepage = https:\/\/github.com\/mochi\/mochiweb$/;"	m
pkg_mochiweb_name	deps/cowboy/erlang.mk	/^pkg_mochiweb_name = mochiweb$/;"	m
pkg_mochiweb_repo	deps/cowboy/erlang.mk	/^pkg_mochiweb_repo = https:\/\/github.com\/mochi\/mochiweb$/;"	m
pkg_mochiweb_xpath_commit	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_commit = master$/;"	m
pkg_mochiweb_xpath_description	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_description = XPath support for mochiweb's html parser$/;"	m
pkg_mochiweb_xpath_fetch	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_fetch = git$/;"	m
pkg_mochiweb_xpath_homepage	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_homepage = https:\/\/github.com\/retnuh\/mochiweb_xpath$/;"	m
pkg_mochiweb_xpath_name	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_name = mochiweb_xpath$/;"	m
pkg_mochiweb_xpath_repo	deps/cowboy/erlang.mk	/^pkg_mochiweb_xpath_repo = https:\/\/github.com\/retnuh\/mochiweb_xpath$/;"	m
pkg_mockgyver_commit	deps/cowboy/erlang.mk	/^pkg_mockgyver_commit = master$/;"	m
pkg_mockgyver_description	deps/cowboy/erlang.mk	/^pkg_mockgyver_description = A mocking library for Erlang$/;"	m
pkg_mockgyver_fetch	deps/cowboy/erlang.mk	/^pkg_mockgyver_fetch = git$/;"	m
pkg_mockgyver_homepage	deps/cowboy/erlang.mk	/^pkg_mockgyver_homepage = https:\/\/github.com\/klajo\/mockgyver$/;"	m
pkg_mockgyver_name	deps/cowboy/erlang.mk	/^pkg_mockgyver_name = mockgyver$/;"	m
pkg_mockgyver_repo	deps/cowboy/erlang.mk	/^pkg_mockgyver_repo = https:\/\/github.com\/klajo\/mockgyver$/;"	m
pkg_modlib_commit	deps/cowboy/erlang.mk	/^pkg_modlib_commit = master$/;"	m
pkg_modlib_description	deps/cowboy/erlang.mk	/^pkg_modlib_description = Web framework based on Erlang's inets httpd$/;"	m
pkg_modlib_fetch	deps/cowboy/erlang.mk	/^pkg_modlib_fetch = git$/;"	m
pkg_modlib_homepage	deps/cowboy/erlang.mk	/^pkg_modlib_homepage = https:\/\/github.com\/gar1t\/modlib$/;"	m
pkg_modlib_name	deps/cowboy/erlang.mk	/^pkg_modlib_name = modlib$/;"	m
pkg_modlib_repo	deps/cowboy/erlang.mk	/^pkg_modlib_repo = https:\/\/github.com\/gar1t\/modlib$/;"	m
pkg_mongodb_commit	deps/cowboy/erlang.mk	/^pkg_mongodb_commit = master$/;"	m
pkg_mongodb_description	deps/cowboy/erlang.mk	/^pkg_mongodb_description = MongoDB driver for Erlang$/;"	m
pkg_mongodb_fetch	deps/cowboy/erlang.mk	/^pkg_mongodb_fetch = git$/;"	m
pkg_mongodb_homepage	deps/cowboy/erlang.mk	/^pkg_mongodb_homepage = https:\/\/github.com\/comtihon\/mongodb-erlang$/;"	m
pkg_mongodb_name	deps/cowboy/erlang.mk	/^pkg_mongodb_name = mongodb$/;"	m
pkg_mongodb_repo	deps/cowboy/erlang.mk	/^pkg_mongodb_repo = https:\/\/github.com\/comtihon\/mongodb-erlang$/;"	m
pkg_mongooseim_commit	deps/cowboy/erlang.mk	/^pkg_mongooseim_commit = master$/;"	m
pkg_mongooseim_description	deps/cowboy/erlang.mk	/^pkg_mongooseim_description = Jabber \/ XMPP server with focus on performance and scalability, by Erlang Solutions$/;"	m
pkg_mongooseim_fetch	deps/cowboy/erlang.mk	/^pkg_mongooseim_fetch = git$/;"	m
pkg_mongooseim_homepage	deps/cowboy/erlang.mk	/^pkg_mongooseim_homepage = https:\/\/www.erlang-solutions.com\/products\/mongooseim-massively-scalable-ejabberd-platform$/;"	m
pkg_mongooseim_name	deps/cowboy/erlang.mk	/^pkg_mongooseim_name = mongooseim$/;"	m
pkg_mongooseim_repo	deps/cowboy/erlang.mk	/^pkg_mongooseim_repo = https:\/\/github.com\/esl\/MongooseIM$/;"	m
pkg_moyo_commit	deps/cowboy/erlang.mk	/^pkg_moyo_commit = master$/;"	m
pkg_moyo_description	deps/cowboy/erlang.mk	/^pkg_moyo_description = Erlang utility functions library$/;"	m
pkg_moyo_fetch	deps/cowboy/erlang.mk	/^pkg_moyo_fetch = git$/;"	m
pkg_moyo_homepage	deps/cowboy/erlang.mk	/^pkg_moyo_homepage = https:\/\/github.com\/dwango\/moyo$/;"	m
pkg_moyo_name	deps/cowboy/erlang.mk	/^pkg_moyo_name = moyo$/;"	m
pkg_moyo_repo	deps/cowboy/erlang.mk	/^pkg_moyo_repo = https:\/\/github.com\/dwango\/moyo$/;"	m
pkg_msgpack_commit	deps/cowboy/erlang.mk	/^pkg_msgpack_commit = master$/;"	m
pkg_msgpack_description	deps/cowboy/erlang.mk	/^pkg_msgpack_description = MessagePack (de)serializer implementation for Erlang$/;"	m
pkg_msgpack_fetch	deps/cowboy/erlang.mk	/^pkg_msgpack_fetch = git$/;"	m
pkg_msgpack_homepage	deps/cowboy/erlang.mk	/^pkg_msgpack_homepage = https:\/\/github.com\/msgpack\/msgpack-erlang$/;"	m
pkg_msgpack_name	deps/cowboy/erlang.mk	/^pkg_msgpack_name = msgpack$/;"	m
pkg_msgpack_repo	deps/cowboy/erlang.mk	/^pkg_msgpack_repo = https:\/\/github.com\/msgpack\/msgpack-erlang$/;"	m
pkg_mu2_commit	deps/cowboy/erlang.mk	/^pkg_mu2_commit = master$/;"	m
pkg_mu2_description	deps/cowboy/erlang.mk	/^pkg_mu2_description = Erlang mutation testing tool$/;"	m
pkg_mu2_fetch	deps/cowboy/erlang.mk	/^pkg_mu2_fetch = git$/;"	m
pkg_mu2_homepage	deps/cowboy/erlang.mk	/^pkg_mu2_homepage = https:\/\/github.com\/ramsay-t\/mu2$/;"	m
pkg_mu2_name	deps/cowboy/erlang.mk	/^pkg_mu2_name = mu2$/;"	m
pkg_mu2_repo	deps/cowboy/erlang.mk	/^pkg_mu2_repo = https:\/\/github.com\/ramsay-t\/mu2$/;"	m
pkg_mustache_commit	deps/cowboy/erlang.mk	/^pkg_mustache_commit = master$/;"	m
pkg_mustache_description	deps/cowboy/erlang.mk	/^pkg_mustache_description = Mustache template engine for Erlang.$/;"	m
pkg_mustache_fetch	deps/cowboy/erlang.mk	/^pkg_mustache_fetch = git$/;"	m
pkg_mustache_homepage	deps/cowboy/erlang.mk	/^pkg_mustache_homepage = https:\/\/github.com\/mojombo\/mustache.erl$/;"	m
pkg_mustache_name	deps/cowboy/erlang.mk	/^pkg_mustache_name = mustache$/;"	m
pkg_mustache_repo	deps/cowboy/erlang.mk	/^pkg_mustache_repo = https:\/\/github.com\/mojombo\/mustache.erl$/;"	m
pkg_myproto_commit	deps/cowboy/erlang.mk	/^pkg_myproto_commit = master$/;"	m
pkg_myproto_description	deps/cowboy/erlang.mk	/^pkg_myproto_description = MySQL Server Protocol in Erlang$/;"	m
pkg_myproto_fetch	deps/cowboy/erlang.mk	/^pkg_myproto_fetch = git$/;"	m
pkg_myproto_homepage	deps/cowboy/erlang.mk	/^pkg_myproto_homepage = https:\/\/github.com\/altenwald\/myproto$/;"	m
pkg_myproto_name	deps/cowboy/erlang.mk	/^pkg_myproto_name = myproto$/;"	m
pkg_myproto_repo	deps/cowboy/erlang.mk	/^pkg_myproto_repo = https:\/\/github.com\/altenwald\/myproto$/;"	m
pkg_mysql_commit	deps/cowboy/erlang.mk	/^pkg_mysql_commit = master$/;"	m
pkg_mysql_description	deps/cowboy/erlang.mk	/^pkg_mysql_description = Erlang MySQL Driver (from code.google.com)$/;"	m
pkg_mysql_fetch	deps/cowboy/erlang.mk	/^pkg_mysql_fetch = git$/;"	m
pkg_mysql_homepage	deps/cowboy/erlang.mk	/^pkg_mysql_homepage = https:\/\/github.com\/dizzyd\/erlang-mysql-driver$/;"	m
pkg_mysql_name	deps/cowboy/erlang.mk	/^pkg_mysql_name = mysql$/;"	m
pkg_mysql_repo	deps/cowboy/erlang.mk	/^pkg_mysql_repo = https:\/\/github.com\/dizzyd\/erlang-mysql-driver$/;"	m
pkg_n2o_commit	deps/cowboy/erlang.mk	/^pkg_n2o_commit = master$/;"	m
pkg_n2o_description	deps/cowboy/erlang.mk	/^pkg_n2o_description = WebSocket Application Server$/;"	m
pkg_n2o_fetch	deps/cowboy/erlang.mk	/^pkg_n2o_fetch = git$/;"	m
pkg_n2o_homepage	deps/cowboy/erlang.mk	/^pkg_n2o_homepage = https:\/\/github.com\/5HT\/n2o$/;"	m
pkg_n2o_name	deps/cowboy/erlang.mk	/^pkg_n2o_name = n2o$/;"	m
pkg_n2o_repo	deps/cowboy/erlang.mk	/^pkg_n2o_repo = https:\/\/github.com\/5HT\/n2o$/;"	m
pkg_nat_upnp_commit	deps/cowboy/erlang.mk	/^pkg_nat_upnp_commit = master$/;"	m
pkg_nat_upnp_description	deps/cowboy/erlang.mk	/^pkg_nat_upnp_description = Erlang library to map your internal port to an external using UNP IGD$/;"	m
pkg_nat_upnp_fetch	deps/cowboy/erlang.mk	/^pkg_nat_upnp_fetch = git$/;"	m
pkg_nat_upnp_homepage	deps/cowboy/erlang.mk	/^pkg_nat_upnp_homepage = https:\/\/github.com\/benoitc\/nat_upnp$/;"	m
pkg_nat_upnp_name	deps/cowboy/erlang.mk	/^pkg_nat_upnp_name = nat_upnp$/;"	m
pkg_nat_upnp_repo	deps/cowboy/erlang.mk	/^pkg_nat_upnp_repo = https:\/\/github.com\/benoitc\/nat_upnp$/;"	m
pkg_neo4j_commit	deps/cowboy/erlang.mk	/^pkg_neo4j_commit = master$/;"	m
pkg_neo4j_description	deps/cowboy/erlang.mk	/^pkg_neo4j_description = Erlang client library for Neo4J.$/;"	m
pkg_neo4j_fetch	deps/cowboy/erlang.mk	/^pkg_neo4j_fetch = git$/;"	m
pkg_neo4j_homepage	deps/cowboy/erlang.mk	/^pkg_neo4j_homepage = https:\/\/github.com\/dmitriid\/neo4j-erlang$/;"	m
pkg_neo4j_name	deps/cowboy/erlang.mk	/^pkg_neo4j_name = neo4j$/;"	m
pkg_neo4j_repo	deps/cowboy/erlang.mk	/^pkg_neo4j_repo = https:\/\/github.com\/dmitriid\/neo4j-erlang$/;"	m
pkg_neotoma_commit	deps/cowboy/erlang.mk	/^pkg_neotoma_commit = master$/;"	m
pkg_neotoma_description	deps/cowboy/erlang.mk	/^pkg_neotoma_description = Erlang library and packrat parser-generator for parsing expression grammars.$/;"	m
pkg_neotoma_fetch	deps/cowboy/erlang.mk	/^pkg_neotoma_fetch = git$/;"	m
pkg_neotoma_homepage	deps/cowboy/erlang.mk	/^pkg_neotoma_homepage = https:\/\/github.com\/seancribbs\/neotoma$/;"	m
pkg_neotoma_name	deps/cowboy/erlang.mk	/^pkg_neotoma_name = neotoma$/;"	m
pkg_neotoma_repo	deps/cowboy/erlang.mk	/^pkg_neotoma_repo = https:\/\/github.com\/seancribbs\/neotoma$/;"	m
pkg_newrelic_commit	deps/cowboy/erlang.mk	/^pkg_newrelic_commit = master$/;"	m
pkg_newrelic_description	deps/cowboy/erlang.mk	/^pkg_newrelic_description = Erlang library for sending metrics to New Relic$/;"	m
pkg_newrelic_fetch	deps/cowboy/erlang.mk	/^pkg_newrelic_fetch = git$/;"	m
pkg_newrelic_homepage	deps/cowboy/erlang.mk	/^pkg_newrelic_homepage = https:\/\/github.com\/wooga\/newrelic-erlang$/;"	m
pkg_newrelic_name	deps/cowboy/erlang.mk	/^pkg_newrelic_name = newrelic$/;"	m
pkg_newrelic_repo	deps/cowboy/erlang.mk	/^pkg_newrelic_repo = https:\/\/github.com\/wooga\/newrelic-erlang$/;"	m
pkg_nifty_commit	deps/cowboy/erlang.mk	/^pkg_nifty_commit = master$/;"	m
pkg_nifty_description	deps/cowboy/erlang.mk	/^pkg_nifty_description = Erlang NIF wrapper generator$/;"	m
pkg_nifty_fetch	deps/cowboy/erlang.mk	/^pkg_nifty_fetch = git$/;"	m
pkg_nifty_homepage	deps/cowboy/erlang.mk	/^pkg_nifty_homepage = https:\/\/github.com\/parapluu\/nifty$/;"	m
pkg_nifty_name	deps/cowboy/erlang.mk	/^pkg_nifty_name = nifty$/;"	m
pkg_nifty_repo	deps/cowboy/erlang.mk	/^pkg_nifty_repo = https:\/\/github.com\/parapluu\/nifty$/;"	m
pkg_nitrogen_core_commit	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_commit = master$/;"	m
pkg_nitrogen_core_description	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_description = The core Nitrogen library.$/;"	m
pkg_nitrogen_core_fetch	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_fetch = git$/;"	m
pkg_nitrogen_core_homepage	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_homepage = http:\/\/nitrogenproject.com\/$/;"	m
pkg_nitrogen_core_name	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_name = nitrogen_core$/;"	m
pkg_nitrogen_core_repo	deps/cowboy/erlang.mk	/^pkg_nitrogen_core_repo = https:\/\/github.com\/nitrogen\/nitrogen_core$/;"	m
pkg_nkbase_commit	deps/cowboy/erlang.mk	/^pkg_nkbase_commit = develop$/;"	m
pkg_nkbase_description	deps/cowboy/erlang.mk	/^pkg_nkbase_description = NkBASE distributed database$/;"	m
pkg_nkbase_fetch	deps/cowboy/erlang.mk	/^pkg_nkbase_fetch = git$/;"	m
pkg_nkbase_homepage	deps/cowboy/erlang.mk	/^pkg_nkbase_homepage = https:\/\/github.com\/Nekso\/nkbase$/;"	m
pkg_nkbase_name	deps/cowboy/erlang.mk	/^pkg_nkbase_name = nkbase$/;"	m
pkg_nkbase_repo	deps/cowboy/erlang.mk	/^pkg_nkbase_repo = https:\/\/github.com\/Nekso\/nkbase$/;"	m
pkg_nkdocker_commit	deps/cowboy/erlang.mk	/^pkg_nkdocker_commit = master$/;"	m
pkg_nkdocker_description	deps/cowboy/erlang.mk	/^pkg_nkdocker_description = Erlang Docker client$/;"	m
pkg_nkdocker_fetch	deps/cowboy/erlang.mk	/^pkg_nkdocker_fetch = git$/;"	m
pkg_nkdocker_homepage	deps/cowboy/erlang.mk	/^pkg_nkdocker_homepage = https:\/\/github.com\/Nekso\/nkdocker$/;"	m
pkg_nkdocker_name	deps/cowboy/erlang.mk	/^pkg_nkdocker_name = nkdocker$/;"	m
pkg_nkdocker_repo	deps/cowboy/erlang.mk	/^pkg_nkdocker_repo = https:\/\/github.com\/Nekso\/nkdocker$/;"	m
pkg_nkpacket_commit	deps/cowboy/erlang.mk	/^pkg_nkpacket_commit = master$/;"	m
pkg_nkpacket_description	deps/cowboy/erlang.mk	/^pkg_nkpacket_description = Generic Erlang transport layer$/;"	m
pkg_nkpacket_fetch	deps/cowboy/erlang.mk	/^pkg_nkpacket_fetch = git$/;"	m
pkg_nkpacket_homepage	deps/cowboy/erlang.mk	/^pkg_nkpacket_homepage = https:\/\/github.com\/Nekso\/nkpacket$/;"	m
pkg_nkpacket_name	deps/cowboy/erlang.mk	/^pkg_nkpacket_name = nkpacket$/;"	m
pkg_nkpacket_repo	deps/cowboy/erlang.mk	/^pkg_nkpacket_repo = https:\/\/github.com\/Nekso\/nkpacket$/;"	m
pkg_nodefinder_commit	deps/cowboy/erlang.mk	/^pkg_nodefinder_commit = master$/;"	m
pkg_nodefinder_description	deps/cowboy/erlang.mk	/^pkg_nodefinder_description = automatic node discovery via UDP multicast$/;"	m
pkg_nodefinder_fetch	deps/cowboy/erlang.mk	/^pkg_nodefinder_fetch = git$/;"	m
pkg_nodefinder_homepage	deps/cowboy/erlang.mk	/^pkg_nodefinder_homepage = https:\/\/github.com\/erlanger\/nodefinder$/;"	m
pkg_nodefinder_name	deps/cowboy/erlang.mk	/^pkg_nodefinder_name = nodefinder$/;"	m
pkg_nodefinder_repo	deps/cowboy/erlang.mk	/^pkg_nodefinder_repo = https:\/\/github.com\/okeuday\/nodefinder$/;"	m
pkg_nprocreg_commit	deps/cowboy/erlang.mk	/^pkg_nprocreg_commit = master$/;"	m
pkg_nprocreg_description	deps/cowboy/erlang.mk	/^pkg_nprocreg_description = Minimal Distributed Erlang Process Registry$/;"	m
pkg_nprocreg_fetch	deps/cowboy/erlang.mk	/^pkg_nprocreg_fetch = git$/;"	m
pkg_nprocreg_homepage	deps/cowboy/erlang.mk	/^pkg_nprocreg_homepage = http:\/\/nitrogenproject.com\/$/;"	m
pkg_nprocreg_name	deps/cowboy/erlang.mk	/^pkg_nprocreg_name = nprocreg$/;"	m
pkg_nprocreg_repo	deps/cowboy/erlang.mk	/^pkg_nprocreg_repo = https:\/\/github.com\/nitrogen\/nprocreg$/;"	m
pkg_oauth2_commit	deps/cowboy/erlang.mk	/^pkg_oauth2_commit = master$/;"	m
pkg_oauth2_description	deps/cowboy/erlang.mk	/^pkg_oauth2_description = Erlang Oauth2 implementation$/;"	m
pkg_oauth2_fetch	deps/cowboy/erlang.mk	/^pkg_oauth2_fetch = git$/;"	m
pkg_oauth2_homepage	deps/cowboy/erlang.mk	/^pkg_oauth2_homepage = https:\/\/github.com\/kivra\/oauth2$/;"	m
pkg_oauth2_name	deps/cowboy/erlang.mk	/^pkg_oauth2_name = oauth2$/;"	m
pkg_oauth2_repo	deps/cowboy/erlang.mk	/^pkg_oauth2_repo = https:\/\/github.com\/kivra\/oauth2$/;"	m
pkg_oauth2c_commit	deps/cowboy/erlang.mk	/^pkg_oauth2c_commit = master$/;"	m
pkg_oauth2c_description	deps/cowboy/erlang.mk	/^pkg_oauth2c_description = Erlang OAuth2 Client$/;"	m
pkg_oauth2c_fetch	deps/cowboy/erlang.mk	/^pkg_oauth2c_fetch = git$/;"	m
pkg_oauth2c_homepage	deps/cowboy/erlang.mk	/^pkg_oauth2c_homepage = https:\/\/github.com\/kivra\/oauth2_client$/;"	m
pkg_oauth2c_name	deps/cowboy/erlang.mk	/^pkg_oauth2c_name = oauth2c$/;"	m
pkg_oauth2c_repo	deps/cowboy/erlang.mk	/^pkg_oauth2c_repo = https:\/\/github.com\/kivra\/oauth2_client$/;"	m
pkg_oauth_commit	deps/cowboy/erlang.mk	/^pkg_oauth_commit = master$/;"	m
pkg_oauth_description	deps/cowboy/erlang.mk	/^pkg_oauth_description = An Erlang OAuth 1.0 implementation$/;"	m
pkg_oauth_fetch	deps/cowboy/erlang.mk	/^pkg_oauth_fetch = git$/;"	m
pkg_oauth_homepage	deps/cowboy/erlang.mk	/^pkg_oauth_homepage = https:\/\/github.com\/tim\/erlang-oauth$/;"	m
pkg_oauth_name	deps/cowboy/erlang.mk	/^pkg_oauth_name = oauth$/;"	m
pkg_oauth_repo	deps/cowboy/erlang.mk	/^pkg_oauth_repo = https:\/\/github.com\/tim\/erlang-oauth$/;"	m
pkg_of_protocol_commit	deps/cowboy/erlang.mk	/^pkg_of_protocol_commit = master$/;"	m
pkg_of_protocol_description	deps/cowboy/erlang.mk	/^pkg_of_protocol_description = OpenFlow Protocol Library for Erlang$/;"	m
pkg_of_protocol_fetch	deps/cowboy/erlang.mk	/^pkg_of_protocol_fetch = git$/;"	m
pkg_of_protocol_homepage	deps/cowboy/erlang.mk	/^pkg_of_protocol_homepage = https:\/\/github.com\/FlowForwarding\/of_protocol$/;"	m
pkg_of_protocol_name	deps/cowboy/erlang.mk	/^pkg_of_protocol_name = of_protocol$/;"	m
pkg_of_protocol_repo	deps/cowboy/erlang.mk	/^pkg_of_protocol_repo = https:\/\/github.com\/FlowForwarding\/of_protocol$/;"	m
pkg_openflow_commit	deps/cowboy/erlang.mk	/^pkg_openflow_commit = master$/;"	m
pkg_openflow_description	deps/cowboy/erlang.mk	/^pkg_openflow_description = An OpenFlow controller written in pure erlang$/;"	m
pkg_openflow_fetch	deps/cowboy/erlang.mk	/^pkg_openflow_fetch = git$/;"	m
pkg_openflow_homepage	deps/cowboy/erlang.mk	/^pkg_openflow_homepage = https:\/\/github.com\/renatoaguiar\/erlang-openflow$/;"	m
pkg_openflow_name	deps/cowboy/erlang.mk	/^pkg_openflow_name = openflow$/;"	m
pkg_openflow_repo	deps/cowboy/erlang.mk	/^pkg_openflow_repo = https:\/\/github.com\/renatoaguiar\/erlang-openflow$/;"	m
pkg_openid_commit	deps/cowboy/erlang.mk	/^pkg_openid_commit = master$/;"	m
pkg_openid_description	deps/cowboy/erlang.mk	/^pkg_openid_description = Erlang OpenID$/;"	m
pkg_openid_fetch	deps/cowboy/erlang.mk	/^pkg_openid_fetch = git$/;"	m
pkg_openid_homepage	deps/cowboy/erlang.mk	/^pkg_openid_homepage = https:\/\/github.com\/brendonh\/erl_openid$/;"	m
pkg_openid_name	deps/cowboy/erlang.mk	/^pkg_openid_name = openid$/;"	m
pkg_openid_repo	deps/cowboy/erlang.mk	/^pkg_openid_repo = https:\/\/github.com\/brendonh\/erl_openid$/;"	m
pkg_openpoker_commit	deps/cowboy/erlang.mk	/^pkg_openpoker_commit = master$/;"	m
pkg_openpoker_description	deps/cowboy/erlang.mk	/^pkg_openpoker_description = Genesis Texas hold'em Game Server$/;"	m
pkg_openpoker_fetch	deps/cowboy/erlang.mk	/^pkg_openpoker_fetch = git$/;"	m
pkg_openpoker_homepage	deps/cowboy/erlang.mk	/^pkg_openpoker_homepage = https:\/\/github.com\/hpyhacking\/openpoker$/;"	m
pkg_openpoker_name	deps/cowboy/erlang.mk	/^pkg_openpoker_name = openpoker$/;"	m
pkg_openpoker_repo	deps/cowboy/erlang.mk	/^pkg_openpoker_repo = https:\/\/github.com\/hpyhacking\/openpoker$/;"	m
pkg_pal_commit	deps/cowboy/erlang.mk	/^pkg_pal_commit = master$/;"	m
pkg_pal_description	deps/cowboy/erlang.mk	/^pkg_pal_description = Pragmatic Authentication Library$/;"	m
pkg_pal_fetch	deps/cowboy/erlang.mk	/^pkg_pal_fetch = git$/;"	m
pkg_pal_homepage	deps/cowboy/erlang.mk	/^pkg_pal_homepage = https:\/\/github.com\/manifest\/pal$/;"	m
pkg_pal_name	deps/cowboy/erlang.mk	/^pkg_pal_name = pal$/;"	m
pkg_pal_repo	deps/cowboy/erlang.mk	/^pkg_pal_repo = https:\/\/github.com\/manifest\/pal$/;"	m
pkg_parse_trans_commit	deps/cowboy/erlang.mk	/^pkg_parse_trans_commit = master$/;"	m
pkg_parse_trans_description	deps/cowboy/erlang.mk	/^pkg_parse_trans_description = Parse transform utilities for Erlang$/;"	m
pkg_parse_trans_fetch	deps/cowboy/erlang.mk	/^pkg_parse_trans_fetch = git$/;"	m
pkg_parse_trans_homepage	deps/cowboy/erlang.mk	/^pkg_parse_trans_homepage = https:\/\/github.com\/uwiger\/parse_trans$/;"	m
pkg_parse_trans_name	deps/cowboy/erlang.mk	/^pkg_parse_trans_name = parse_trans$/;"	m
pkg_parse_trans_repo	deps/cowboy/erlang.mk	/^pkg_parse_trans_repo = https:\/\/github.com\/uwiger\/parse_trans$/;"	m
pkg_parsexml_commit	deps/cowboy/erlang.mk	/^pkg_parsexml_commit = master$/;"	m
pkg_parsexml_description	deps/cowboy/erlang.mk	/^pkg_parsexml_description = Simple DOM XML parser with convenient and very simple API$/;"	m
pkg_parsexml_fetch	deps/cowboy/erlang.mk	/^pkg_parsexml_fetch = git$/;"	m
pkg_parsexml_homepage	deps/cowboy/erlang.mk	/^pkg_parsexml_homepage = https:\/\/github.com\/maxlapshin\/parsexml$/;"	m
pkg_parsexml_name	deps/cowboy/erlang.mk	/^pkg_parsexml_name = parsexml$/;"	m
pkg_parsexml_repo	deps/cowboy/erlang.mk	/^pkg_parsexml_repo = https:\/\/github.com\/maxlapshin\/parsexml$/;"	m
pkg_pegjs_commit	deps/cowboy/erlang.mk	/^pkg_pegjs_commit = 0.3$/;"	m
pkg_pegjs_description	deps/cowboy/erlang.mk	/^pkg_pegjs_description = An implementation of PEG.js grammar for Erlang.$/;"	m
pkg_pegjs_fetch	deps/cowboy/erlang.mk	/^pkg_pegjs_fetch = git$/;"	m
pkg_pegjs_homepage	deps/cowboy/erlang.mk	/^pkg_pegjs_homepage = https:\/\/github.com\/dmitriid\/pegjs$/;"	m
pkg_pegjs_name	deps/cowboy/erlang.mk	/^pkg_pegjs_name = pegjs$/;"	m
pkg_pegjs_repo	deps/cowboy/erlang.mk	/^pkg_pegjs_repo = https:\/\/github.com\/dmitriid\/pegjs$/;"	m
pkg_percept2_commit	deps/cowboy/erlang.mk	/^pkg_percept2_commit = master$/;"	m
pkg_percept2_description	deps/cowboy/erlang.mk	/^pkg_percept2_description = Concurrent profiling tool for Erlang$/;"	m
pkg_percept2_fetch	deps/cowboy/erlang.mk	/^pkg_percept2_fetch = git$/;"	m
pkg_percept2_homepage	deps/cowboy/erlang.mk	/^pkg_percept2_homepage = https:\/\/github.com\/huiqing\/percept2$/;"	m
pkg_percept2_name	deps/cowboy/erlang.mk	/^pkg_percept2_name = percept2$/;"	m
pkg_percept2_repo	deps/cowboy/erlang.mk	/^pkg_percept2_repo = https:\/\/github.com\/huiqing\/percept2$/;"	m
pkg_pgsql_commit	deps/cowboy/erlang.mk	/^pkg_pgsql_commit = master$/;"	m
pkg_pgsql_description	deps/cowboy/erlang.mk	/^pkg_pgsql_description = Erlang PostgreSQL driver$/;"	m
pkg_pgsql_fetch	deps/cowboy/erlang.mk	/^pkg_pgsql_fetch = git$/;"	m
pkg_pgsql_homepage	deps/cowboy/erlang.mk	/^pkg_pgsql_homepage = https:\/\/github.com\/semiocast\/pgsql$/;"	m
pkg_pgsql_name	deps/cowboy/erlang.mk	/^pkg_pgsql_name = pgsql$/;"	m
pkg_pgsql_repo	deps/cowboy/erlang.mk	/^pkg_pgsql_repo = https:\/\/github.com\/semiocast\/pgsql$/;"	m
pkg_pkgx_commit	deps/cowboy/erlang.mk	/^pkg_pkgx_commit = master$/;"	m
pkg_pkgx_description	deps/cowboy/erlang.mk	/^pkg_pkgx_description = Build .deb packages from Erlang releases$/;"	m
pkg_pkgx_fetch	deps/cowboy/erlang.mk	/^pkg_pkgx_fetch = git$/;"	m
pkg_pkgx_homepage	deps/cowboy/erlang.mk	/^pkg_pkgx_homepage = https:\/\/github.com\/arjan\/pkgx$/;"	m
pkg_pkgx_name	deps/cowboy/erlang.mk	/^pkg_pkgx_name = pkgx$/;"	m
pkg_pkgx_repo	deps/cowboy/erlang.mk	/^pkg_pkgx_repo = https:\/\/github.com\/arjan\/pkgx$/;"	m
pkg_pkt_commit	deps/cowboy/erlang.mk	/^pkg_pkt_commit = master$/;"	m
pkg_pkt_description	deps/cowboy/erlang.mk	/^pkg_pkt_description = Erlang network protocol library$/;"	m
pkg_pkt_fetch	deps/cowboy/erlang.mk	/^pkg_pkt_fetch = git$/;"	m
pkg_pkt_homepage	deps/cowboy/erlang.mk	/^pkg_pkt_homepage = https:\/\/github.com\/msantos\/pkt$/;"	m
pkg_pkt_name	deps/cowboy/erlang.mk	/^pkg_pkt_name = pkt$/;"	m
pkg_pkt_repo	deps/cowboy/erlang.mk	/^pkg_pkt_repo = https:\/\/github.com\/msantos\/pkt$/;"	m
pkg_plain_fsm_commit	deps/cowboy/erlang.mk	/^pkg_plain_fsm_commit = master$/;"	m
pkg_plain_fsm_description	deps/cowboy/erlang.mk	/^pkg_plain_fsm_description = A behaviour\/support library for writing plain Erlang FSMs.$/;"	m
pkg_plain_fsm_fetch	deps/cowboy/erlang.mk	/^pkg_plain_fsm_fetch = git$/;"	m
pkg_plain_fsm_homepage	deps/cowboy/erlang.mk	/^pkg_plain_fsm_homepage = https:\/\/github.com\/uwiger\/plain_fsm$/;"	m
pkg_plain_fsm_name	deps/cowboy/erlang.mk	/^pkg_plain_fsm_name = plain_fsm$/;"	m
pkg_plain_fsm_repo	deps/cowboy/erlang.mk	/^pkg_plain_fsm_repo = https:\/\/github.com\/uwiger\/plain_fsm$/;"	m
pkg_plumtree_commit	deps/cowboy/erlang.mk	/^pkg_plumtree_commit = master$/;"	m
pkg_plumtree_description	deps/cowboy/erlang.mk	/^pkg_plumtree_description = Epidemic Broadcast Trees$/;"	m
pkg_plumtree_fetch	deps/cowboy/erlang.mk	/^pkg_plumtree_fetch = git$/;"	m
pkg_plumtree_homepage	deps/cowboy/erlang.mk	/^pkg_plumtree_homepage = https:\/\/github.com\/helium\/plumtree$/;"	m
pkg_plumtree_name	deps/cowboy/erlang.mk	/^pkg_plumtree_name = plumtree$/;"	m
pkg_plumtree_repo	deps/cowboy/erlang.mk	/^pkg_plumtree_repo = https:\/\/github.com\/helium\/plumtree$/;"	m
pkg_pmod_transform_commit	deps/cowboy/erlang.mk	/^pkg_pmod_transform_commit = master$/;"	m
pkg_pmod_transform_description	deps/cowboy/erlang.mk	/^pkg_pmod_transform_description = Parse transform for parameterized modules$/;"	m
pkg_pmod_transform_fetch	deps/cowboy/erlang.mk	/^pkg_pmod_transform_fetch = git$/;"	m
pkg_pmod_transform_homepage	deps/cowboy/erlang.mk	/^pkg_pmod_transform_homepage = https:\/\/github.com\/erlang\/pmod_transform$/;"	m
pkg_pmod_transform_name	deps/cowboy/erlang.mk	/^pkg_pmod_transform_name = pmod_transform$/;"	m
pkg_pmod_transform_repo	deps/cowboy/erlang.mk	/^pkg_pmod_transform_repo = https:\/\/github.com\/erlang\/pmod_transform$/;"	m
pkg_pobox_commit	deps/cowboy/erlang.mk	/^pkg_pobox_commit = master$/;"	m
pkg_pobox_description	deps/cowboy/erlang.mk	/^pkg_pobox_description = External buffer processes to protect against mailbox overflow in Erlang$/;"	m
pkg_pobox_fetch	deps/cowboy/erlang.mk	/^pkg_pobox_fetch = git$/;"	m
pkg_pobox_homepage	deps/cowboy/erlang.mk	/^pkg_pobox_homepage = https:\/\/github.com\/ferd\/pobox$/;"	m
pkg_pobox_name	deps/cowboy/erlang.mk	/^pkg_pobox_name = pobox$/;"	m
pkg_pobox_repo	deps/cowboy/erlang.mk	/^pkg_pobox_repo = https:\/\/github.com\/ferd\/pobox$/;"	m
pkg_ponos_commit	deps/cowboy/erlang.mk	/^pkg_ponos_commit = master$/;"	m
pkg_ponos_description	deps/cowboy/erlang.mk	/^pkg_ponos_description = ponos is a simple yet powerful load generator written in erlang$/;"	m
pkg_ponos_fetch	deps/cowboy/erlang.mk	/^pkg_ponos_fetch = git$/;"	m
pkg_ponos_homepage	deps/cowboy/erlang.mk	/^pkg_ponos_homepage = https:\/\/github.com\/klarna\/ponos$/;"	m
pkg_ponos_name	deps/cowboy/erlang.mk	/^pkg_ponos_name = ponos$/;"	m
pkg_ponos_repo	deps/cowboy/erlang.mk	/^pkg_ponos_repo = https:\/\/github.com\/klarna\/ponos$/;"	m
pkg_poolboy_commit	deps/cowboy/erlang.mk	/^pkg_poolboy_commit = master$/;"	m
pkg_poolboy_description	deps/cowboy/erlang.mk	/^pkg_poolboy_description = A hunky Erlang worker pool factory$/;"	m
pkg_poolboy_fetch	deps/cowboy/erlang.mk	/^pkg_poolboy_fetch = git$/;"	m
pkg_poolboy_homepage	deps/cowboy/erlang.mk	/^pkg_poolboy_homepage = https:\/\/github.com\/devinus\/poolboy$/;"	m
pkg_poolboy_name	deps/cowboy/erlang.mk	/^pkg_poolboy_name = poolboy$/;"	m
pkg_poolboy_repo	deps/cowboy/erlang.mk	/^pkg_poolboy_repo = https:\/\/github.com\/devinus\/poolboy$/;"	m
pkg_pooler_commit	deps/cowboy/erlang.mk	/^pkg_pooler_commit = master$/;"	m
pkg_pooler_description	deps/cowboy/erlang.mk	/^pkg_pooler_description = An OTP Process Pool Application$/;"	m
pkg_pooler_fetch	deps/cowboy/erlang.mk	/^pkg_pooler_fetch = git$/;"	m
pkg_pooler_homepage	deps/cowboy/erlang.mk	/^pkg_pooler_homepage = https:\/\/github.com\/seth\/pooler$/;"	m
pkg_pooler_name	deps/cowboy/erlang.mk	/^pkg_pooler_name = pooler$/;"	m
pkg_pooler_repo	deps/cowboy/erlang.mk	/^pkg_pooler_repo = https:\/\/github.com\/seth\/pooler$/;"	m
pkg_pqueue_commit	deps/cowboy/erlang.mk	/^pkg_pqueue_commit = master$/;"	m
pkg_pqueue_description	deps/cowboy/erlang.mk	/^pkg_pqueue_description = Erlang Priority Queues$/;"	m
pkg_pqueue_fetch	deps/cowboy/erlang.mk	/^pkg_pqueue_fetch = git$/;"	m
pkg_pqueue_homepage	deps/cowboy/erlang.mk	/^pkg_pqueue_homepage = https:\/\/github.com\/okeuday\/pqueue$/;"	m
pkg_pqueue_name	deps/cowboy/erlang.mk	/^pkg_pqueue_name = pqueue$/;"	m
pkg_pqueue_repo	deps/cowboy/erlang.mk	/^pkg_pqueue_repo = https:\/\/github.com\/okeuday\/pqueue$/;"	m
pkg_print	deps/cowboy/erlang.mk	/^define pkg_print$/;"	m
pkg_procket_commit	deps/cowboy/erlang.mk	/^pkg_procket_commit = master$/;"	m
pkg_procket_description	deps/cowboy/erlang.mk	/^pkg_procket_description = Erlang interface to low level socket operations$/;"	m
pkg_procket_fetch	deps/cowboy/erlang.mk	/^pkg_procket_fetch = git$/;"	m
pkg_procket_homepage	deps/cowboy/erlang.mk	/^pkg_procket_homepage = http:\/\/blog.listincomprehension.com\/search\/label\/procket$/;"	m
pkg_procket_name	deps/cowboy/erlang.mk	/^pkg_procket_name = procket$/;"	m
pkg_procket_repo	deps/cowboy/erlang.mk	/^pkg_procket_repo = https:\/\/github.com\/msantos\/procket$/;"	m
pkg_prop_commit	deps/cowboy/erlang.mk	/^pkg_prop_commit = master$/;"	m
pkg_prop_description	deps/cowboy/erlang.mk	/^pkg_prop_description = An Erlang code scaffolding and generator system.$/;"	m
pkg_prop_fetch	deps/cowboy/erlang.mk	/^pkg_prop_fetch = git$/;"	m
pkg_prop_homepage	deps/cowboy/erlang.mk	/^pkg_prop_homepage = https:\/\/github.com\/nuex\/prop$/;"	m
pkg_prop_name	deps/cowboy/erlang.mk	/^pkg_prop_name = prop$/;"	m
pkg_prop_repo	deps/cowboy/erlang.mk	/^pkg_prop_repo = https:\/\/github.com\/nuex\/prop$/;"	m
pkg_proper_commit	deps/cowboy/erlang.mk	/^pkg_proper_commit = master$/;"	m
pkg_proper_description	deps/cowboy/erlang.mk	/^pkg_proper_description = PropEr: a QuickCheck-inspired property-based testing tool for Erlang.$/;"	m
pkg_proper_fetch	deps/cowboy/erlang.mk	/^pkg_proper_fetch = git$/;"	m
pkg_proper_homepage	deps/cowboy/erlang.mk	/^pkg_proper_homepage = http:\/\/proper.softlab.ntua.gr$/;"	m
pkg_proper_name	deps/cowboy/erlang.mk	/^pkg_proper_name = proper$/;"	m
pkg_proper_repo	deps/cowboy/erlang.mk	/^pkg_proper_repo = https:\/\/github.com\/manopapad\/proper$/;"	m
pkg_props_commit	deps/cowboy/erlang.mk	/^pkg_props_commit = master$/;"	m
pkg_props_description	deps/cowboy/erlang.mk	/^pkg_props_description = Property structure library$/;"	m
pkg_props_fetch	deps/cowboy/erlang.mk	/^pkg_props_fetch = git$/;"	m
pkg_props_homepage	deps/cowboy/erlang.mk	/^pkg_props_homepage = https:\/\/github.com\/greyarea\/props$/;"	m
pkg_props_name	deps/cowboy/erlang.mk	/^pkg_props_name = props$/;"	m
pkg_props_repo	deps/cowboy/erlang.mk	/^pkg_props_repo = https:\/\/github.com\/greyarea\/props$/;"	m
pkg_protobuffs_commit	deps/cowboy/erlang.mk	/^pkg_protobuffs_commit = master$/;"	m
pkg_protobuffs_description	deps/cowboy/erlang.mk	/^pkg_protobuffs_description = An implementation of Google's Protocol Buffers for Erlang, based on ngerakines\/erlang_protobuffs.$/;"	m
pkg_protobuffs_fetch	deps/cowboy/erlang.mk	/^pkg_protobuffs_fetch = git$/;"	m
pkg_protobuffs_homepage	deps/cowboy/erlang.mk	/^pkg_protobuffs_homepage = https:\/\/github.com\/basho\/erlang_protobuffs$/;"	m
pkg_protobuffs_name	deps/cowboy/erlang.mk	/^pkg_protobuffs_name = protobuffs$/;"	m
pkg_protobuffs_repo	deps/cowboy/erlang.mk	/^pkg_protobuffs_repo = https:\/\/github.com\/basho\/erlang_protobuffs$/;"	m
pkg_psycho_commit	deps/cowboy/erlang.mk	/^pkg_psycho_commit = master$/;"	m
pkg_psycho_description	deps/cowboy/erlang.mk	/^pkg_psycho_description = HTTP server that provides a WSGI-like interface for applications and middleware.$/;"	m
pkg_psycho_fetch	deps/cowboy/erlang.mk	/^pkg_psycho_fetch = git$/;"	m
pkg_psycho_homepage	deps/cowboy/erlang.mk	/^pkg_psycho_homepage = https:\/\/github.com\/gar1t\/psycho$/;"	m
pkg_psycho_name	deps/cowboy/erlang.mk	/^pkg_psycho_name = psycho$/;"	m
pkg_psycho_repo	deps/cowboy/erlang.mk	/^pkg_psycho_repo = https:\/\/github.com\/gar1t\/psycho$/;"	m
pkg_ptrackerl_commit	deps/cowboy/erlang.mk	/^pkg_ptrackerl_commit = master$/;"	m
pkg_ptrackerl_description	deps/cowboy/erlang.mk	/^pkg_ptrackerl_description = Pivotal Tracker API Client written in Erlang$/;"	m
pkg_ptrackerl_fetch	deps/cowboy/erlang.mk	/^pkg_ptrackerl_fetch = git$/;"	m
pkg_ptrackerl_homepage	deps/cowboy/erlang.mk	/^pkg_ptrackerl_homepage = https:\/\/github.com\/inaka\/ptrackerl$/;"	m
pkg_ptrackerl_name	deps/cowboy/erlang.mk	/^pkg_ptrackerl_name = ptrackerl$/;"	m
pkg_ptrackerl_repo	deps/cowboy/erlang.mk	/^pkg_ptrackerl_repo = https:\/\/github.com\/inaka\/ptrackerl$/;"	m
pkg_purity_commit	deps/cowboy/erlang.mk	/^pkg_purity_commit = master$/;"	m
pkg_purity_description	deps/cowboy/erlang.mk	/^pkg_purity_description = A side-effect analyzer for Erlang$/;"	m
pkg_purity_fetch	deps/cowboy/erlang.mk	/^pkg_purity_fetch = git$/;"	m
pkg_purity_homepage	deps/cowboy/erlang.mk	/^pkg_purity_homepage = https:\/\/github.com\/mpitid\/purity$/;"	m
pkg_purity_name	deps/cowboy/erlang.mk	/^pkg_purity_name = purity$/;"	m
pkg_purity_repo	deps/cowboy/erlang.mk	/^pkg_purity_repo = https:\/\/github.com\/mpitid\/purity$/;"	m
pkg_push_service_commit	deps/cowboy/erlang.mk	/^pkg_push_service_commit = master$/;"	m
pkg_push_service_description	deps/cowboy/erlang.mk	/^pkg_push_service_description = Push service$/;"	m
pkg_push_service_fetch	deps/cowboy/erlang.mk	/^pkg_push_service_fetch = git$/;"	m
pkg_push_service_homepage	deps/cowboy/erlang.mk	/^pkg_push_service_homepage = https:\/\/github.com\/hairyhum\/push_service$/;"	m
pkg_push_service_name	deps/cowboy/erlang.mk	/^pkg_push_service_name = push_service$/;"	m
pkg_push_service_repo	deps/cowboy/erlang.mk	/^pkg_push_service_repo = https:\/\/github.com\/hairyhum\/push_service$/;"	m
pkg_qdate_commit	deps/cowboy/erlang.mk	/^pkg_qdate_commit = 0.4.0$/;"	m
pkg_qdate_description	deps/cowboy/erlang.mk	/^pkg_qdate_description = Date, time, and timezone parsing, formatting, and conversion for Erlang.$/;"	m
pkg_qdate_fetch	deps/cowboy/erlang.mk	/^pkg_qdate_fetch = git$/;"	m
pkg_qdate_homepage	deps/cowboy/erlang.mk	/^pkg_qdate_homepage = https:\/\/github.com\/choptastic\/qdate$/;"	m
pkg_qdate_name	deps/cowboy/erlang.mk	/^pkg_qdate_name = qdate$/;"	m
pkg_qdate_repo	deps/cowboy/erlang.mk	/^pkg_qdate_repo = https:\/\/github.com\/choptastic\/qdate$/;"	m
pkg_qrcode_commit	deps/cowboy/erlang.mk	/^pkg_qrcode_commit = master$/;"	m
pkg_qrcode_description	deps/cowboy/erlang.mk	/^pkg_qrcode_description = QR Code encoder in Erlang$/;"	m
pkg_qrcode_fetch	deps/cowboy/erlang.mk	/^pkg_qrcode_fetch = git$/;"	m
pkg_qrcode_homepage	deps/cowboy/erlang.mk	/^pkg_qrcode_homepage = https:\/\/github.com\/komone\/qrcode$/;"	m
pkg_qrcode_name	deps/cowboy/erlang.mk	/^pkg_qrcode_name = qrcode$/;"	m
pkg_qrcode_repo	deps/cowboy/erlang.mk	/^pkg_qrcode_repo = https:\/\/github.com\/komone\/qrcode$/;"	m
pkg_quest_commit	deps/cowboy/erlang.mk	/^pkg_quest_commit = master$/;"	m
pkg_quest_description	deps/cowboy/erlang.mk	/^pkg_quest_description = Learn Erlang through this set of challenges. An interactive system for getting to know Erlang.$/;"	m
pkg_quest_fetch	deps/cowboy/erlang.mk	/^pkg_quest_fetch = git$/;"	m
pkg_quest_homepage	deps/cowboy/erlang.mk	/^pkg_quest_homepage = https:\/\/github.com\/eriksoe\/ErlangQuest$/;"	m
pkg_quest_name	deps/cowboy/erlang.mk	/^pkg_quest_name = quest$/;"	m
pkg_quest_repo	deps/cowboy/erlang.mk	/^pkg_quest_repo = https:\/\/github.com\/eriksoe\/ErlangQuest$/;"	m
pkg_quickrand_commit	deps/cowboy/erlang.mk	/^pkg_quickrand_commit = master$/;"	m
pkg_quickrand_description	deps/cowboy/erlang.mk	/^pkg_quickrand_description = Quick Erlang Random Number Generation$/;"	m
pkg_quickrand_fetch	deps/cowboy/erlang.mk	/^pkg_quickrand_fetch = git$/;"	m
pkg_quickrand_homepage	deps/cowboy/erlang.mk	/^pkg_quickrand_homepage = https:\/\/github.com\/okeuday\/quickrand$/;"	m
pkg_quickrand_name	deps/cowboy/erlang.mk	/^pkg_quickrand_name = quickrand$/;"	m
pkg_quickrand_repo	deps/cowboy/erlang.mk	/^pkg_quickrand_repo = https:\/\/github.com\/okeuday\/quickrand$/;"	m
pkg_rabbit_commit	deps/cowboy/erlang.mk	/^pkg_rabbit_commit = master$/;"	m
pkg_rabbit_description	deps/cowboy/erlang.mk	/^pkg_rabbit_description = RabbitMQ Server$/;"	m
pkg_rabbit_exchange_type_riak_commit	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_commit = master$/;"	m
pkg_rabbit_exchange_type_riak_description	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_description = Custom RabbitMQ exchange type for sticking messages in Riak$/;"	m
pkg_rabbit_exchange_type_riak_fetch	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_fetch = git$/;"	m
pkg_rabbit_exchange_type_riak_homepage	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_homepage = https:\/\/github.com\/jbrisbin\/riak-exchange$/;"	m
pkg_rabbit_exchange_type_riak_name	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_name = rabbit_exchange_type_riak$/;"	m
pkg_rabbit_exchange_type_riak_repo	deps/cowboy/erlang.mk	/^pkg_rabbit_exchange_type_riak_repo = https:\/\/github.com\/jbrisbin\/riak-exchange$/;"	m
pkg_rabbit_fetch	deps/cowboy/erlang.mk	/^pkg_rabbit_fetch = git$/;"	m
pkg_rabbit_homepage	deps/cowboy/erlang.mk	/^pkg_rabbit_homepage = https:\/\/www.rabbitmq.com\/$/;"	m
pkg_rabbit_name	deps/cowboy/erlang.mk	/^pkg_rabbit_name = rabbit$/;"	m
pkg_rabbit_repo	deps/cowboy/erlang.mk	/^pkg_rabbit_repo = https:\/\/github.com\/rabbitmq\/rabbitmq-server.git$/;"	m
pkg_rack_commit	deps/cowboy/erlang.mk	/^pkg_rack_commit = master$/;"	m
pkg_rack_description	deps/cowboy/erlang.mk	/^pkg_rack_description = Rack handler for erlang$/;"	m
pkg_rack_fetch	deps/cowboy/erlang.mk	/^pkg_rack_fetch = git$/;"	m
pkg_rack_homepage	deps/cowboy/erlang.mk	/^pkg_rack_homepage = https:\/\/github.com\/erlyvideo\/rack$/;"	m
pkg_rack_name	deps/cowboy/erlang.mk	/^pkg_rack_name = rack$/;"	m
pkg_rack_repo	deps/cowboy/erlang.mk	/^pkg_rack_repo = https:\/\/github.com\/erlyvideo\/rack$/;"	m
pkg_radierl_commit	deps/cowboy/erlang.mk	/^pkg_radierl_commit = master$/;"	m
pkg_radierl_description	deps/cowboy/erlang.mk	/^pkg_radierl_description = RADIUS protocol stack implemented in Erlang.$/;"	m
pkg_radierl_fetch	deps/cowboy/erlang.mk	/^pkg_radierl_fetch = git$/;"	m
pkg_radierl_homepage	deps/cowboy/erlang.mk	/^pkg_radierl_homepage = https:\/\/github.com\/vances\/radierl$/;"	m
pkg_radierl_name	deps/cowboy/erlang.mk	/^pkg_radierl_name = radierl$/;"	m
pkg_radierl_repo	deps/cowboy/erlang.mk	/^pkg_radierl_repo = https:\/\/github.com\/vances\/radierl$/;"	m
pkg_rafter_commit	deps/cowboy/erlang.mk	/^pkg_rafter_commit = master$/;"	m
pkg_rafter_description	deps/cowboy/erlang.mk	/^pkg_rafter_description = An Erlang library application which implements the Raft consensus protocol$/;"	m
pkg_rafter_fetch	deps/cowboy/erlang.mk	/^pkg_rafter_fetch = git$/;"	m
pkg_rafter_homepage	deps/cowboy/erlang.mk	/^pkg_rafter_homepage = https:\/\/github.com\/andrewjstone\/rafter$/;"	m
pkg_rafter_name	deps/cowboy/erlang.mk	/^pkg_rafter_name = rafter$/;"	m
pkg_rafter_repo	deps/cowboy/erlang.mk	/^pkg_rafter_repo = https:\/\/github.com\/andrewjstone\/rafter$/;"	m
pkg_ranch_commit	deps/cowboy/erlang.mk	/^pkg_ranch_commit = 1.1.0$/;"	m
pkg_ranch_description	deps/cowboy/erlang.mk	/^pkg_ranch_description = Socket acceptor pool for TCP protocols.$/;"	m
pkg_ranch_fetch	deps/cowboy/erlang.mk	/^pkg_ranch_fetch = git$/;"	m
pkg_ranch_homepage	deps/cowboy/erlang.mk	/^pkg_ranch_homepage = http:\/\/ninenines.eu$/;"	m
pkg_ranch_name	deps/cowboy/erlang.mk	/^pkg_ranch_name = ranch$/;"	m
pkg_ranch_repo	deps/cowboy/erlang.mk	/^pkg_ranch_repo = https:\/\/github.com\/ninenines\/ranch$/;"	m
pkg_rbeacon_commit	deps/cowboy/erlang.mk	/^pkg_rbeacon_commit = master$/;"	m
pkg_rbeacon_description	deps/cowboy/erlang.mk	/^pkg_rbeacon_description = LAN discovery and presence in Erlang.$/;"	m
pkg_rbeacon_fetch	deps/cowboy/erlang.mk	/^pkg_rbeacon_fetch = git$/;"	m
pkg_rbeacon_homepage	deps/cowboy/erlang.mk	/^pkg_rbeacon_homepage = https:\/\/github.com\/refuge\/rbeacon$/;"	m
pkg_rbeacon_name	deps/cowboy/erlang.mk	/^pkg_rbeacon_name = rbeacon$/;"	m
pkg_rbeacon_repo	deps/cowboy/erlang.mk	/^pkg_rbeacon_repo = https:\/\/github.com\/refuge\/rbeacon$/;"	m
pkg_rebar_commit	deps/cowboy/erlang.mk	/^pkg_rebar_commit = master$/;"	m
pkg_rebar_description	deps/cowboy/erlang.mk	/^pkg_rebar_description = Erlang build tool that makes it easy to compile and test Erlang applications, port drivers and releases.$/;"	m
pkg_rebar_fetch	deps/cowboy/erlang.mk	/^pkg_rebar_fetch = git$/;"	m
pkg_rebar_homepage	deps/cowboy/erlang.mk	/^pkg_rebar_homepage = http:\/\/www.rebar3.org$/;"	m
pkg_rebar_name	deps/cowboy/erlang.mk	/^pkg_rebar_name = rebar$/;"	m
pkg_rebar_repo	deps/cowboy/erlang.mk	/^pkg_rebar_repo = https:\/\/github.com\/rebar\/rebar3$/;"	m
pkg_rebus_commit	deps/cowboy/erlang.mk	/^pkg_rebus_commit = master$/;"	m
pkg_rebus_description	deps/cowboy/erlang.mk	/^pkg_rebus_description = A stupid simple, internal, pub\/sub event bus written in- and for Erlang.$/;"	m
pkg_rebus_fetch	deps/cowboy/erlang.mk	/^pkg_rebus_fetch = git$/;"	m
pkg_rebus_homepage	deps/cowboy/erlang.mk	/^pkg_rebus_homepage = https:\/\/github.com\/olle\/rebus$/;"	m
pkg_rebus_name	deps/cowboy/erlang.mk	/^pkg_rebus_name = rebus$/;"	m
pkg_rebus_repo	deps/cowboy/erlang.mk	/^pkg_rebus_repo = https:\/\/github.com\/olle\/rebus$/;"	m
pkg_rec2json_commit	deps/cowboy/erlang.mk	/^pkg_rec2json_commit = master$/;"	m
pkg_rec2json_description	deps/cowboy/erlang.mk	/^pkg_rec2json_description = Compile erlang record definitions into modules to convert them to\/from json easily.$/;"	m
pkg_rec2json_fetch	deps/cowboy/erlang.mk	/^pkg_rec2json_fetch = git$/;"	m
pkg_rec2json_homepage	deps/cowboy/erlang.mk	/^pkg_rec2json_homepage = https:\/\/github.com\/lordnull\/rec2json$/;"	m
pkg_rec2json_name	deps/cowboy/erlang.mk	/^pkg_rec2json_name = rec2json$/;"	m
pkg_rec2json_repo	deps/cowboy/erlang.mk	/^pkg_rec2json_repo = https:\/\/github.com\/lordnull\/rec2json$/;"	m
pkg_recon_commit	deps/cowboy/erlang.mk	/^pkg_recon_commit = 2.2.1$/;"	m
pkg_recon_description	deps/cowboy/erlang.mk	/^pkg_recon_description = Collection of functions and scripts to debug Erlang in production.$/;"	m
pkg_recon_fetch	deps/cowboy/erlang.mk	/^pkg_recon_fetch = git$/;"	m
pkg_recon_homepage	deps/cowboy/erlang.mk	/^pkg_recon_homepage = https:\/\/github.com\/ferd\/recon$/;"	m
pkg_recon_name	deps/cowboy/erlang.mk	/^pkg_recon_name = recon$/;"	m
pkg_recon_repo	deps/cowboy/erlang.mk	/^pkg_recon_repo = https:\/\/github.com\/ferd\/recon$/;"	m
pkg_record_info_commit	deps/cowboy/erlang.mk	/^pkg_record_info_commit = master$/;"	m
pkg_record_info_description	deps/cowboy/erlang.mk	/^pkg_record_info_description = Convert between record and proplist$/;"	m
pkg_record_info_fetch	deps/cowboy/erlang.mk	/^pkg_record_info_fetch = git$/;"	m
pkg_record_info_homepage	deps/cowboy/erlang.mk	/^pkg_record_info_homepage = https:\/\/github.com\/bipthelin\/erlang-record_info$/;"	m
pkg_record_info_name	deps/cowboy/erlang.mk	/^pkg_record_info_name = record_info$/;"	m
pkg_record_info_repo	deps/cowboy/erlang.mk	/^pkg_record_info_repo = https:\/\/github.com\/bipthelin\/erlang-record_info$/;"	m
pkg_redgrid_commit	deps/cowboy/erlang.mk	/^pkg_redgrid_commit = master$/;"	m
pkg_redgrid_description	deps/cowboy/erlang.mk	/^pkg_redgrid_description = automatic Erlang node discovery via redis$/;"	m
pkg_redgrid_fetch	deps/cowboy/erlang.mk	/^pkg_redgrid_fetch = git$/;"	m
pkg_redgrid_homepage	deps/cowboy/erlang.mk	/^pkg_redgrid_homepage = https:\/\/github.com\/jkvor\/redgrid$/;"	m
pkg_redgrid_name	deps/cowboy/erlang.mk	/^pkg_redgrid_name = redgrid$/;"	m
pkg_redgrid_repo	deps/cowboy/erlang.mk	/^pkg_redgrid_repo = https:\/\/github.com\/jkvor\/redgrid$/;"	m
pkg_redo_commit	deps/cowboy/erlang.mk	/^pkg_redo_commit = master$/;"	m
pkg_redo_description	deps/cowboy/erlang.mk	/^pkg_redo_description = pipelined erlang redis client$/;"	m
pkg_redo_fetch	deps/cowboy/erlang.mk	/^pkg_redo_fetch = git$/;"	m
pkg_redo_homepage	deps/cowboy/erlang.mk	/^pkg_redo_homepage = https:\/\/github.com\/jkvor\/redo$/;"	m
pkg_redo_name	deps/cowboy/erlang.mk	/^pkg_redo_name = redo$/;"	m
pkg_redo_repo	deps/cowboy/erlang.mk	/^pkg_redo_repo = https:\/\/github.com\/jkvor\/redo$/;"	m
pkg_reltool_util_commit	deps/cowboy/erlang.mk	/^pkg_reltool_util_commit = master$/;"	m
pkg_reltool_util_description	deps/cowboy/erlang.mk	/^pkg_reltool_util_description = Erlang reltool utility functionality application$/;"	m
pkg_reltool_util_fetch	deps/cowboy/erlang.mk	/^pkg_reltool_util_fetch = git$/;"	m
pkg_reltool_util_homepage	deps/cowboy/erlang.mk	/^pkg_reltool_util_homepage = https:\/\/github.com\/okeuday\/reltool_util$/;"	m
pkg_reltool_util_name	deps/cowboy/erlang.mk	/^pkg_reltool_util_name = reltool_util$/;"	m
pkg_reltool_util_repo	deps/cowboy/erlang.mk	/^pkg_reltool_util_repo = https:\/\/github.com\/okeuday\/reltool_util$/;"	m
pkg_relx_commit	deps/cowboy/erlang.mk	/^pkg_relx_commit = master$/;"	m
pkg_relx_description	deps/cowboy/erlang.mk	/^pkg_relx_description = Sane, simple release creation for Erlang$/;"	m
pkg_relx_fetch	deps/cowboy/erlang.mk	/^pkg_relx_fetch = git$/;"	m
pkg_relx_homepage	deps/cowboy/erlang.mk	/^pkg_relx_homepage = https:\/\/github.com\/erlware\/relx$/;"	m
pkg_relx_name	deps/cowboy/erlang.mk	/^pkg_relx_name = relx$/;"	m
pkg_relx_repo	deps/cowboy/erlang.mk	/^pkg_relx_repo = https:\/\/github.com\/erlware\/relx$/;"	m
pkg_resource_discovery_commit	deps/cowboy/erlang.mk	/^pkg_resource_discovery_commit = master$/;"	m
pkg_resource_discovery_description	deps/cowboy/erlang.mk	/^pkg_resource_discovery_description = An application used to dynamically discover resources present in an Erlang node cluster.$/;"	m
pkg_resource_discovery_fetch	deps/cowboy/erlang.mk	/^pkg_resource_discovery_fetch = git$/;"	m
pkg_resource_discovery_homepage	deps/cowboy/erlang.mk	/^pkg_resource_discovery_homepage = http:\/\/erlware.org\/$/;"	m
pkg_resource_discovery_name	deps/cowboy/erlang.mk	/^pkg_resource_discovery_name = resource_discovery$/;"	m
pkg_resource_discovery_repo	deps/cowboy/erlang.mk	/^pkg_resource_discovery_repo = https:\/\/github.com\/erlware\/resource_discovery$/;"	m
pkg_restc_commit	deps/cowboy/erlang.mk	/^pkg_restc_commit = master$/;"	m
pkg_restc_description	deps/cowboy/erlang.mk	/^pkg_restc_description = Erlang Rest Client$/;"	m
pkg_restc_fetch	deps/cowboy/erlang.mk	/^pkg_restc_fetch = git$/;"	m
pkg_restc_homepage	deps/cowboy/erlang.mk	/^pkg_restc_homepage = https:\/\/github.com\/kivra\/restclient$/;"	m
pkg_restc_name	deps/cowboy/erlang.mk	/^pkg_restc_name = restc$/;"	m
pkg_restc_repo	deps/cowboy/erlang.mk	/^pkg_restc_repo = https:\/\/github.com\/kivra\/restclient$/;"	m
pkg_rfc4627_jsonrpc_commit	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_commit = master$/;"	m
pkg_rfc4627_jsonrpc_description	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_description = Erlang RFC4627 (JSON) codec and JSON-RPC server implementation.$/;"	m
pkg_rfc4627_jsonrpc_fetch	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_fetch = git$/;"	m
pkg_rfc4627_jsonrpc_homepage	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_homepage = https:\/\/github.com\/tonyg\/erlang-rfc4627$/;"	m
pkg_rfc4627_jsonrpc_name	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_name = rfc4627_jsonrpc$/;"	m
pkg_rfc4627_jsonrpc_repo	deps/cowboy/erlang.mk	/^pkg_rfc4627_jsonrpc_repo = https:\/\/github.com\/tonyg\/erlang-rfc4627$/;"	m
pkg_riak_core_commit	deps/cowboy/erlang.mk	/^pkg_riak_core_commit = master$/;"	m
pkg_riak_core_description	deps/cowboy/erlang.mk	/^pkg_riak_core_description = Distributed systems infrastructure used by Riak.$/;"	m
pkg_riak_core_fetch	deps/cowboy/erlang.mk	/^pkg_riak_core_fetch = git$/;"	m
pkg_riak_core_homepage	deps/cowboy/erlang.mk	/^pkg_riak_core_homepage = https:\/\/github.com\/basho\/riak_core$/;"	m
pkg_riak_core_name	deps/cowboy/erlang.mk	/^pkg_riak_core_name = riak_core$/;"	m
pkg_riak_core_repo	deps/cowboy/erlang.mk	/^pkg_riak_core_repo = https:\/\/github.com\/basho\/riak_core$/;"	m
pkg_riak_dt_commit	deps/cowboy/erlang.mk	/^pkg_riak_dt_commit = master$/;"	m
pkg_riak_dt_description	deps/cowboy/erlang.mk	/^pkg_riak_dt_description = Convergent replicated datatypes in Erlang$/;"	m
pkg_riak_dt_fetch	deps/cowboy/erlang.mk	/^pkg_riak_dt_fetch = git$/;"	m
pkg_riak_dt_homepage	deps/cowboy/erlang.mk	/^pkg_riak_dt_homepage = https:\/\/github.com\/basho\/riak_dt$/;"	m
pkg_riak_dt_name	deps/cowboy/erlang.mk	/^pkg_riak_dt_name = riak_dt$/;"	m
pkg_riak_dt_repo	deps/cowboy/erlang.mk	/^pkg_riak_dt_repo = https:\/\/github.com\/basho\/riak_dt$/;"	m
pkg_riak_ensemble_commit	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_commit = master$/;"	m
pkg_riak_ensemble_description	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_description = Multi-Paxos framework in Erlang$/;"	m
pkg_riak_ensemble_fetch	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_fetch = git$/;"	m
pkg_riak_ensemble_homepage	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_homepage = https:\/\/github.com\/basho\/riak_ensemble$/;"	m
pkg_riak_ensemble_name	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_name = riak_ensemble$/;"	m
pkg_riak_ensemble_repo	deps/cowboy/erlang.mk	/^pkg_riak_ensemble_repo = https:\/\/github.com\/basho\/riak_ensemble$/;"	m
pkg_riak_kv_commit	deps/cowboy/erlang.mk	/^pkg_riak_kv_commit = master$/;"	m
pkg_riak_kv_description	deps/cowboy/erlang.mk	/^pkg_riak_kv_description = Riak Key\/Value Store$/;"	m
pkg_riak_kv_fetch	deps/cowboy/erlang.mk	/^pkg_riak_kv_fetch = git$/;"	m
pkg_riak_kv_homepage	deps/cowboy/erlang.mk	/^pkg_riak_kv_homepage = https:\/\/github.com\/basho\/riak_kv$/;"	m
pkg_riak_kv_name	deps/cowboy/erlang.mk	/^pkg_riak_kv_name = riak_kv$/;"	m
pkg_riak_kv_repo	deps/cowboy/erlang.mk	/^pkg_riak_kv_repo = https:\/\/github.com\/basho\/riak_kv$/;"	m
pkg_riak_pg_commit	deps/cowboy/erlang.mk	/^pkg_riak_pg_commit = master$/;"	m
pkg_riak_pg_description	deps/cowboy/erlang.mk	/^pkg_riak_pg_description = Distributed process groups with riak_core.$/;"	m
pkg_riak_pg_fetch	deps/cowboy/erlang.mk	/^pkg_riak_pg_fetch = git$/;"	m
pkg_riak_pg_homepage	deps/cowboy/erlang.mk	/^pkg_riak_pg_homepage = https:\/\/github.com\/cmeiklejohn\/riak_pg$/;"	m
pkg_riak_pg_name	deps/cowboy/erlang.mk	/^pkg_riak_pg_name = riak_pg$/;"	m
pkg_riak_pg_repo	deps/cowboy/erlang.mk	/^pkg_riak_pg_repo = https:\/\/github.com\/cmeiklejohn\/riak_pg$/;"	m
pkg_riak_pipe_commit	deps/cowboy/erlang.mk	/^pkg_riak_pipe_commit = master$/;"	m
pkg_riak_pipe_description	deps/cowboy/erlang.mk	/^pkg_riak_pipe_description = Riak Pipelines$/;"	m
pkg_riak_pipe_fetch	deps/cowboy/erlang.mk	/^pkg_riak_pipe_fetch = git$/;"	m
pkg_riak_pipe_homepage	deps/cowboy/erlang.mk	/^pkg_riak_pipe_homepage = https:\/\/github.com\/basho\/riak_pipe$/;"	m
pkg_riak_pipe_name	deps/cowboy/erlang.mk	/^pkg_riak_pipe_name = riak_pipe$/;"	m
pkg_riak_pipe_repo	deps/cowboy/erlang.mk	/^pkg_riak_pipe_repo = https:\/\/github.com\/basho\/riak_pipe$/;"	m
pkg_riak_sysmon_commit	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_commit = master$/;"	m
pkg_riak_sysmon_description	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_description = Simple OTP app for managing Erlang VM system_monitor event messages$/;"	m
pkg_riak_sysmon_fetch	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_fetch = git$/;"	m
pkg_riak_sysmon_homepage	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_homepage = https:\/\/github.com\/basho\/riak_sysmon$/;"	m
pkg_riak_sysmon_name	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_name = riak_sysmon$/;"	m
pkg_riak_sysmon_repo	deps/cowboy/erlang.mk	/^pkg_riak_sysmon_repo = https:\/\/github.com\/basho\/riak_sysmon$/;"	m
pkg_riak_test_commit	deps/cowboy/erlang.mk	/^pkg_riak_test_commit = master$/;"	m
pkg_riak_test_description	deps/cowboy/erlang.mk	/^pkg_riak_test_description = I'm in your cluster, testing your riaks$/;"	m
pkg_riak_test_fetch	deps/cowboy/erlang.mk	/^pkg_riak_test_fetch = git$/;"	m
pkg_riak_test_homepage	deps/cowboy/erlang.mk	/^pkg_riak_test_homepage = https:\/\/github.com\/basho\/riak_test$/;"	m
pkg_riak_test_name	deps/cowboy/erlang.mk	/^pkg_riak_test_name = riak_test$/;"	m
pkg_riak_test_repo	deps/cowboy/erlang.mk	/^pkg_riak_test_repo = https:\/\/github.com\/basho\/riak_test$/;"	m
pkg_riakc_commit	deps/cowboy/erlang.mk	/^pkg_riakc_commit = master$/;"	m
pkg_riakc_description	deps/cowboy/erlang.mk	/^pkg_riakc_description = Erlang clients for Riak.$/;"	m
pkg_riakc_fetch	deps/cowboy/erlang.mk	/^pkg_riakc_fetch = git$/;"	m
pkg_riakc_homepage	deps/cowboy/erlang.mk	/^pkg_riakc_homepage = https:\/\/github.com\/basho\/riak-erlang-client$/;"	m
pkg_riakc_name	deps/cowboy/erlang.mk	/^pkg_riakc_name = riakc$/;"	m
pkg_riakc_repo	deps/cowboy/erlang.mk	/^pkg_riakc_repo = https:\/\/github.com\/basho\/riak-erlang-client$/;"	m
pkg_riakhttpc_commit	deps/cowboy/erlang.mk	/^pkg_riakhttpc_commit = master$/;"	m
pkg_riakhttpc_description	deps/cowboy/erlang.mk	/^pkg_riakhttpc_description = Riak Erlang client using the HTTP interface$/;"	m
pkg_riakhttpc_fetch	deps/cowboy/erlang.mk	/^pkg_riakhttpc_fetch = git$/;"	m
pkg_riakhttpc_homepage	deps/cowboy/erlang.mk	/^pkg_riakhttpc_homepage = https:\/\/github.com\/basho\/riak-erlang-http-client$/;"	m
pkg_riakhttpc_name	deps/cowboy/erlang.mk	/^pkg_riakhttpc_name = riakhttpc$/;"	m
pkg_riakhttpc_repo	deps/cowboy/erlang.mk	/^pkg_riakhttpc_repo = https:\/\/github.com\/basho\/riak-erlang-http-client$/;"	m
pkg_riaknostic_commit	deps/cowboy/erlang.mk	/^pkg_riaknostic_commit = master$/;"	m
pkg_riaknostic_description	deps/cowboy/erlang.mk	/^pkg_riaknostic_description = A diagnostic tool for Riak installations, to find common errors asap$/;"	m
pkg_riaknostic_fetch	deps/cowboy/erlang.mk	/^pkg_riaknostic_fetch = git$/;"	m
pkg_riaknostic_homepage	deps/cowboy/erlang.mk	/^pkg_riaknostic_homepage = https:\/\/github.com\/basho\/riaknostic$/;"	m
pkg_riaknostic_name	deps/cowboy/erlang.mk	/^pkg_riaknostic_name = riaknostic$/;"	m
pkg_riaknostic_repo	deps/cowboy/erlang.mk	/^pkg_riaknostic_repo = https:\/\/github.com\/basho\/riaknostic$/;"	m
pkg_riakpool_commit	deps/cowboy/erlang.mk	/^pkg_riakpool_commit = master$/;"	m
pkg_riakpool_description	deps/cowboy/erlang.mk	/^pkg_riakpool_description = erlang riak client pool$/;"	m
pkg_riakpool_fetch	deps/cowboy/erlang.mk	/^pkg_riakpool_fetch = git$/;"	m
pkg_riakpool_homepage	deps/cowboy/erlang.mk	/^pkg_riakpool_homepage = https:\/\/github.com\/dweldon\/riakpool$/;"	m
pkg_riakpool_name	deps/cowboy/erlang.mk	/^pkg_riakpool_name = riakpool$/;"	m
pkg_riakpool_repo	deps/cowboy/erlang.mk	/^pkg_riakpool_repo = https:\/\/github.com\/dweldon\/riakpool$/;"	m
pkg_rivus_cep_commit	deps/cowboy/erlang.mk	/^pkg_rivus_cep_commit = master$/;"	m
pkg_rivus_cep_description	deps/cowboy/erlang.mk	/^pkg_rivus_cep_description = Complex event processing in Erlang$/;"	m
pkg_rivus_cep_fetch	deps/cowboy/erlang.mk	/^pkg_rivus_cep_fetch = git$/;"	m
pkg_rivus_cep_homepage	deps/cowboy/erlang.mk	/^pkg_rivus_cep_homepage = https:\/\/github.com\/vascokk\/rivus_cep$/;"	m
pkg_rivus_cep_name	deps/cowboy/erlang.mk	/^pkg_rivus_cep_name = rivus_cep$/;"	m
pkg_rivus_cep_repo	deps/cowboy/erlang.mk	/^pkg_rivus_cep_repo = https:\/\/github.com\/vascokk\/rivus_cep$/;"	m
pkg_rlimit_commit	deps/cowboy/erlang.mk	/^pkg_rlimit_commit = master$/;"	m
pkg_rlimit_description	deps/cowboy/erlang.mk	/^pkg_rlimit_description = Magnus Klaar's rate limiter code from etorrent$/;"	m
pkg_rlimit_fetch	deps/cowboy/erlang.mk	/^pkg_rlimit_fetch = git$/;"	m
pkg_rlimit_homepage	deps/cowboy/erlang.mk	/^pkg_rlimit_homepage = https:\/\/github.com\/jlouis\/rlimit$/;"	m
pkg_rlimit_name	deps/cowboy/erlang.mk	/^pkg_rlimit_name = rlimit$/;"	m
pkg_rlimit_repo	deps/cowboy/erlang.mk	/^pkg_rlimit_repo = https:\/\/github.com\/jlouis\/rlimit$/;"	m
pkg_safetyvalve_commit	deps/cowboy/erlang.mk	/^pkg_safetyvalve_commit = master$/;"	m
pkg_safetyvalve_description	deps/cowboy/erlang.mk	/^pkg_safetyvalve_description = A safety valve for your erlang node$/;"	m
pkg_safetyvalve_fetch	deps/cowboy/erlang.mk	/^pkg_safetyvalve_fetch = git$/;"	m
pkg_safetyvalve_homepage	deps/cowboy/erlang.mk	/^pkg_safetyvalve_homepage = https:\/\/github.com\/jlouis\/safetyvalve$/;"	m
pkg_safetyvalve_name	deps/cowboy/erlang.mk	/^pkg_safetyvalve_name = safetyvalve$/;"	m
pkg_safetyvalve_repo	deps/cowboy/erlang.mk	/^pkg_safetyvalve_repo = https:\/\/github.com\/jlouis\/safetyvalve$/;"	m
pkg_seestar_commit	deps/cowboy/erlang.mk	/^pkg_seestar_commit = master$/;"	m
pkg_seestar_description	deps/cowboy/erlang.mk	/^pkg_seestar_description = The Erlang client for Cassandra 1.2+ binary protocol$/;"	m
pkg_seestar_fetch	deps/cowboy/erlang.mk	/^pkg_seestar_fetch = git$/;"	m
pkg_seestar_homepage	deps/cowboy/erlang.mk	/^pkg_seestar_homepage = https:\/\/github.com\/iamaleksey\/seestar$/;"	m
pkg_seestar_name	deps/cowboy/erlang.mk	/^pkg_seestar_name = seestar$/;"	m
pkg_seestar_repo	deps/cowboy/erlang.mk	/^pkg_seestar_repo = https:\/\/github.com\/iamaleksey\/seestar$/;"	m
pkg_service_commit	deps/cowboy/erlang.mk	/^pkg_service_commit = master$/;"	m
pkg_service_description	deps/cowboy/erlang.mk	/^pkg_service_description = A minimal Erlang behavior for creating CloudI internal services$/;"	m
pkg_service_fetch	deps/cowboy/erlang.mk	/^pkg_service_fetch = git$/;"	m
pkg_service_homepage	deps/cowboy/erlang.mk	/^pkg_service_homepage = http:\/\/cloudi.org\/$/;"	m
pkg_service_name	deps/cowboy/erlang.mk	/^pkg_service_name = service$/;"	m
pkg_service_repo	deps/cowboy/erlang.mk	/^pkg_service_repo = https:\/\/github.com\/CloudI\/service$/;"	m
pkg_setup_commit	deps/cowboy/erlang.mk	/^pkg_setup_commit = master$/;"	m
pkg_setup_description	deps/cowboy/erlang.mk	/^pkg_setup_description = Generic setup utility for Erlang-based systems$/;"	m
pkg_setup_fetch	deps/cowboy/erlang.mk	/^pkg_setup_fetch = git$/;"	m
pkg_setup_homepage	deps/cowboy/erlang.mk	/^pkg_setup_homepage = https:\/\/github.com\/uwiger\/setup$/;"	m
pkg_setup_name	deps/cowboy/erlang.mk	/^pkg_setup_name = setup$/;"	m
pkg_setup_repo	deps/cowboy/erlang.mk	/^pkg_setup_repo = https:\/\/github.com\/uwiger\/setup$/;"	m
pkg_sext_commit	deps/cowboy/erlang.mk	/^pkg_sext_commit = master$/;"	m
pkg_sext_description	deps/cowboy/erlang.mk	/^pkg_sext_description = Sortable Erlang Term Serialization$/;"	m
pkg_sext_fetch	deps/cowboy/erlang.mk	/^pkg_sext_fetch = git$/;"	m
pkg_sext_homepage	deps/cowboy/erlang.mk	/^pkg_sext_homepage = https:\/\/github.com\/uwiger\/sext$/;"	m
pkg_sext_name	deps/cowboy/erlang.mk	/^pkg_sext_name = sext$/;"	m
pkg_sext_repo	deps/cowboy/erlang.mk	/^pkg_sext_repo = https:\/\/github.com\/uwiger\/sext$/;"	m
pkg_sfmt_commit	deps/cowboy/erlang.mk	/^pkg_sfmt_commit = master$/;"	m
pkg_sfmt_description	deps/cowboy/erlang.mk	/^pkg_sfmt_description = SFMT pseudo random number generator for Erlang.$/;"	m
pkg_sfmt_fetch	deps/cowboy/erlang.mk	/^pkg_sfmt_fetch = git$/;"	m
pkg_sfmt_homepage	deps/cowboy/erlang.mk	/^pkg_sfmt_homepage = https:\/\/github.com\/jj1bdx\/sfmt-erlang$/;"	m
pkg_sfmt_name	deps/cowboy/erlang.mk	/^pkg_sfmt_name = sfmt$/;"	m
pkg_sfmt_repo	deps/cowboy/erlang.mk	/^pkg_sfmt_repo = https:\/\/github.com\/jj1bdx\/sfmt-erlang$/;"	m
pkg_sgte_commit	deps/cowboy/erlang.mk	/^pkg_sgte_commit = master$/;"	m
pkg_sgte_description	deps/cowboy/erlang.mk	/^pkg_sgte_description = A simple Erlang Template Engine$/;"	m
pkg_sgte_fetch	deps/cowboy/erlang.mk	/^pkg_sgte_fetch = git$/;"	m
pkg_sgte_homepage	deps/cowboy/erlang.mk	/^pkg_sgte_homepage = https:\/\/github.com\/filippo\/sgte$/;"	m
pkg_sgte_name	deps/cowboy/erlang.mk	/^pkg_sgte_name = sgte$/;"	m
pkg_sgte_repo	deps/cowboy/erlang.mk	/^pkg_sgte_repo = https:\/\/github.com\/filippo\/sgte$/;"	m
pkg_sheriff_commit	deps/cowboy/erlang.mk	/^pkg_sheriff_commit = master$/;"	m
pkg_sheriff_description	deps/cowboy/erlang.mk	/^pkg_sheriff_description = Parse transform for type based validation.$/;"	m
pkg_sheriff_fetch	deps/cowboy/erlang.mk	/^pkg_sheriff_fetch = git$/;"	m
pkg_sheriff_homepage	deps/cowboy/erlang.mk	/^pkg_sheriff_homepage = http:\/\/ninenines.eu$/;"	m
pkg_sheriff_name	deps/cowboy/erlang.mk	/^pkg_sheriff_name = sheriff$/;"	m
pkg_sheriff_repo	deps/cowboy/erlang.mk	/^pkg_sheriff_repo = https:\/\/github.com\/extend\/sheriff$/;"	m
pkg_shotgun_commit	deps/cowboy/erlang.mk	/^pkg_shotgun_commit = 0.1.0$/;"	m
pkg_shotgun_description	deps/cowboy/erlang.mk	/^pkg_shotgun_description = better than just a gun$/;"	m
pkg_shotgun_fetch	deps/cowboy/erlang.mk	/^pkg_shotgun_fetch = git$/;"	m
pkg_shotgun_homepage	deps/cowboy/erlang.mk	/^pkg_shotgun_homepage = https:\/\/github.com\/inaka\/shotgun$/;"	m
pkg_shotgun_name	deps/cowboy/erlang.mk	/^pkg_shotgun_name = shotgun$/;"	m
pkg_shotgun_repo	deps/cowboy/erlang.mk	/^pkg_shotgun_repo = https:\/\/github.com\/inaka\/shotgun$/;"	m
pkg_sidejob_commit	deps/cowboy/erlang.mk	/^pkg_sidejob_commit = master$/;"	m
pkg_sidejob_description	deps/cowboy/erlang.mk	/^pkg_sidejob_description = Parallel worker and capacity limiting library for Erlang$/;"	m
pkg_sidejob_fetch	deps/cowboy/erlang.mk	/^pkg_sidejob_fetch = git$/;"	m
pkg_sidejob_homepage	deps/cowboy/erlang.mk	/^pkg_sidejob_homepage = https:\/\/github.com\/basho\/sidejob$/;"	m
pkg_sidejob_name	deps/cowboy/erlang.mk	/^pkg_sidejob_name = sidejob$/;"	m
pkg_sidejob_repo	deps/cowboy/erlang.mk	/^pkg_sidejob_repo = https:\/\/github.com\/basho\/sidejob$/;"	m
pkg_sieve_commit	deps/cowboy/erlang.mk	/^pkg_sieve_commit = master$/;"	m
pkg_sieve_description	deps/cowboy/erlang.mk	/^pkg_sieve_description = sieve is a simple TCP routing proxy (layer 7) in erlang$/;"	m
pkg_sieve_fetch	deps/cowboy/erlang.mk	/^pkg_sieve_fetch = git$/;"	m
pkg_sieve_homepage	deps/cowboy/erlang.mk	/^pkg_sieve_homepage = https:\/\/github.com\/benoitc\/sieve$/;"	m
pkg_sieve_name	deps/cowboy/erlang.mk	/^pkg_sieve_name = sieve$/;"	m
pkg_sieve_repo	deps/cowboy/erlang.mk	/^pkg_sieve_repo = https:\/\/github.com\/benoitc\/sieve$/;"	m
pkg_sighandler_commit	deps/cowboy/erlang.mk	/^pkg_sighandler_commit = master$/;"	m
pkg_sighandler_description	deps/cowboy/erlang.mk	/^pkg_sighandler_description = Handle UNIX signals in Er    lang$/;"	m
pkg_sighandler_fetch	deps/cowboy/erlang.mk	/^pkg_sighandler_fetch = git$/;"	m
pkg_sighandler_homepage	deps/cowboy/erlang.mk	/^pkg_sighandler_homepage = https:\/\/github.com\/jkingsbery\/sighandler$/;"	m
pkg_sighandler_name	deps/cowboy/erlang.mk	/^pkg_sighandler_name = sighandler$/;"	m
pkg_sighandler_repo	deps/cowboy/erlang.mk	/^pkg_sighandler_repo = https:\/\/github.com\/jkingsbery\/sighandler$/;"	m
pkg_simhash_commit	deps/cowboy/erlang.mk	/^pkg_simhash_commit = master$/;"	m
pkg_simhash_description	deps/cowboy/erlang.mk	/^pkg_simhash_description = Simhashing for Erlang -- hashing algorithm to find near-duplicates in binary data.$/;"	m
pkg_simhash_fetch	deps/cowboy/erlang.mk	/^pkg_simhash_fetch = git$/;"	m
pkg_simhash_homepage	deps/cowboy/erlang.mk	/^pkg_simhash_homepage = https:\/\/github.com\/ferd\/simhash$/;"	m
pkg_simhash_name	deps/cowboy/erlang.mk	/^pkg_simhash_name = simhash$/;"	m
pkg_simhash_repo	deps/cowboy/erlang.mk	/^pkg_simhash_repo = https:\/\/github.com\/ferd\/simhash$/;"	m
pkg_simple_bridge_commit	deps/cowboy/erlang.mk	/^pkg_simple_bridge_commit = master$/;"	m
pkg_simple_bridge_description	deps/cowboy/erlang.mk	/^pkg_simple_bridge_description = A simple, standardized interface library to Erlang HTTP Servers.$/;"	m
pkg_simple_bridge_fetch	deps/cowboy/erlang.mk	/^pkg_simple_bridge_fetch = git$/;"	m
pkg_simple_bridge_homepage	deps/cowboy/erlang.mk	/^pkg_simple_bridge_homepage = https:\/\/github.com\/nitrogen\/simple_bridge$/;"	m
pkg_simple_bridge_name	deps/cowboy/erlang.mk	/^pkg_simple_bridge_name = simple_bridge$/;"	m
pkg_simple_bridge_repo	deps/cowboy/erlang.mk	/^pkg_simple_bridge_repo = https:\/\/github.com\/nitrogen\/simple_bridge$/;"	m
pkg_simple_oauth2_commit	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_commit = master$/;"	m
pkg_simple_oauth2_description	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_description = Simple erlang OAuth2 client module for any http server framework (Google, Facebook, Yandex, Vkontakte are preconfigured)$/;"	m
pkg_simple_oauth2_fetch	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_fetch = git$/;"	m
pkg_simple_oauth2_homepage	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_homepage = https:\/\/github.com\/virtan\/simple_oauth2$/;"	m
pkg_simple_oauth2_name	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_name = simple_oauth2$/;"	m
pkg_simple_oauth2_repo	deps/cowboy/erlang.mk	/^pkg_simple_oauth2_repo = https:\/\/github.com\/virtan\/simple_oauth2$/;"	m
pkg_skel_commit	deps/cowboy/erlang.mk	/^pkg_skel_commit = master$/;"	m
pkg_skel_description	deps/cowboy/erlang.mk	/^pkg_skel_description = A Streaming Process-based Skeleton Library for Erlang$/;"	m
pkg_skel_fetch	deps/cowboy/erlang.mk	/^pkg_skel_fetch = git$/;"	m
pkg_skel_homepage	deps/cowboy/erlang.mk	/^pkg_skel_homepage = https:\/\/github.com\/ParaPhrase\/skel$/;"	m
pkg_skel_name	deps/cowboy/erlang.mk	/^pkg_skel_name = skel$/;"	m
pkg_skel_repo	deps/cowboy/erlang.mk	/^pkg_skel_repo = https:\/\/github.com\/ParaPhrase\/skel$/;"	m
pkg_smother_commit	deps/cowboy/erlang.mk	/^pkg_smother_commit = master$/;"	m
pkg_smother_description	deps/cowboy/erlang.mk	/^pkg_smother_description = Extended code coverage metrics for Erlang.$/;"	m
pkg_smother_fetch	deps/cowboy/erlang.mk	/^pkg_smother_fetch = git$/;"	m
pkg_smother_homepage	deps/cowboy/erlang.mk	/^pkg_smother_homepage = https:\/\/ramsay-t.github.io\/Smother\/$/;"	m
pkg_smother_name	deps/cowboy/erlang.mk	/^pkg_smother_name = smother$/;"	m
pkg_smother_repo	deps/cowboy/erlang.mk	/^pkg_smother_repo = https:\/\/github.com\/ramsay-t\/Smother$/;"	m
pkg_social_commit	deps/cowboy/erlang.mk	/^pkg_social_commit = master$/;"	m
pkg_social_description	deps/cowboy/erlang.mk	/^pkg_social_description = Cowboy handler for social login via OAuth2 providers$/;"	m
pkg_social_fetch	deps/cowboy/erlang.mk	/^pkg_social_fetch = git$/;"	m
pkg_social_homepage	deps/cowboy/erlang.mk	/^pkg_social_homepage = https:\/\/github.com\/dvv\/social$/;"	m
pkg_social_name	deps/cowboy/erlang.mk	/^pkg_social_name = social$/;"	m
pkg_social_repo	deps/cowboy/erlang.mk	/^pkg_social_repo = https:\/\/github.com\/dvv\/social$/;"	m
pkg_spapi_router_commit	deps/cowboy/erlang.mk	/^pkg_spapi_router_commit = master$/;"	m
pkg_spapi_router_description	deps/cowboy/erlang.mk	/^pkg_spapi_router_description = Partially-connected Erlang clustering$/;"	m
pkg_spapi_router_fetch	deps/cowboy/erlang.mk	/^pkg_spapi_router_fetch = git$/;"	m
pkg_spapi_router_homepage	deps/cowboy/erlang.mk	/^pkg_spapi_router_homepage = https:\/\/github.com\/spilgames\/spapi-router$/;"	m
pkg_spapi_router_name	deps/cowboy/erlang.mk	/^pkg_spapi_router_name = spapi_router$/;"	m
pkg_spapi_router_repo	deps/cowboy/erlang.mk	/^pkg_spapi_router_repo = https:\/\/github.com\/spilgames\/spapi-router$/;"	m
pkg_sqerl_commit	deps/cowboy/erlang.mk	/^pkg_sqerl_commit = master$/;"	m
pkg_sqerl_description	deps/cowboy/erlang.mk	/^pkg_sqerl_description = An Erlang-flavoured SQL DSL$/;"	m
pkg_sqerl_fetch	deps/cowboy/erlang.mk	/^pkg_sqerl_fetch = git$/;"	m
pkg_sqerl_homepage	deps/cowboy/erlang.mk	/^pkg_sqerl_homepage = https:\/\/github.com\/hairyhum\/sqerl$/;"	m
pkg_sqerl_name	deps/cowboy/erlang.mk	/^pkg_sqerl_name = sqerl$/;"	m
pkg_sqerl_repo	deps/cowboy/erlang.mk	/^pkg_sqerl_repo = https:\/\/github.com\/hairyhum\/sqerl$/;"	m
pkg_srly_commit	deps/cowboy/erlang.mk	/^pkg_srly_commit = master$/;"	m
pkg_srly_description	deps/cowboy/erlang.mk	/^pkg_srly_description = Native Erlang Unix serial interface$/;"	m
pkg_srly_fetch	deps/cowboy/erlang.mk	/^pkg_srly_fetch = git$/;"	m
pkg_srly_homepage	deps/cowboy/erlang.mk	/^pkg_srly_homepage = https:\/\/github.com\/msantos\/srly$/;"	m
pkg_srly_name	deps/cowboy/erlang.mk	/^pkg_srly_name = srly$/;"	m
pkg_srly_repo	deps/cowboy/erlang.mk	/^pkg_srly_repo = https:\/\/github.com\/msantos\/srly$/;"	m
pkg_sshrpc_commit	deps/cowboy/erlang.mk	/^pkg_sshrpc_commit = master$/;"	m
pkg_sshrpc_description	deps/cowboy/erlang.mk	/^pkg_sshrpc_description = Erlang SSH RPC module (experimental)$/;"	m
pkg_sshrpc_fetch	deps/cowboy/erlang.mk	/^pkg_sshrpc_fetch = git$/;"	m
pkg_sshrpc_homepage	deps/cowboy/erlang.mk	/^pkg_sshrpc_homepage = https:\/\/github.com\/jj1bdx\/sshrpc$/;"	m
pkg_sshrpc_name	deps/cowboy/erlang.mk	/^pkg_sshrpc_name = sshrpc$/;"	m
pkg_sshrpc_repo	deps/cowboy/erlang.mk	/^pkg_sshrpc_repo = https:\/\/github.com\/jj1bdx\/sshrpc$/;"	m
pkg_stable_commit	deps/cowboy/erlang.mk	/^pkg_stable_commit = master$/;"	m
pkg_stable_description	deps/cowboy/erlang.mk	/^pkg_stable_description = Library of assorted helpers for Cowboy web server.$/;"	m
pkg_stable_fetch	deps/cowboy/erlang.mk	/^pkg_stable_fetch = git$/;"	m
pkg_stable_homepage	deps/cowboy/erlang.mk	/^pkg_stable_homepage = https:\/\/github.com\/dvv\/stable$/;"	m
pkg_stable_name	deps/cowboy/erlang.mk	/^pkg_stable_name = stable$/;"	m
pkg_stable_repo	deps/cowboy/erlang.mk	/^pkg_stable_repo = https:\/\/github.com\/dvv\/stable$/;"	m
pkg_statebox_commit	deps/cowboy/erlang.mk	/^pkg_statebox_commit = master$/;"	m
pkg_statebox_description	deps/cowboy/erlang.mk	/^pkg_statebox_description = Erlang state monad with merge\/conflict-resolution capabilities. Useful for Riak.$/;"	m
pkg_statebox_fetch	deps/cowboy/erlang.mk	/^pkg_statebox_fetch = git$/;"	m
pkg_statebox_homepage	deps/cowboy/erlang.mk	/^pkg_statebox_homepage = https:\/\/github.com\/mochi\/statebox$/;"	m
pkg_statebox_name	deps/cowboy/erlang.mk	/^pkg_statebox_name = statebox$/;"	m
pkg_statebox_repo	deps/cowboy/erlang.mk	/^pkg_statebox_repo = https:\/\/github.com\/mochi\/statebox$/;"	m
pkg_statebox_riak_commit	deps/cowboy/erlang.mk	/^pkg_statebox_riak_commit = master$/;"	m
pkg_statebox_riak_description	deps/cowboy/erlang.mk	/^pkg_statebox_riak_description = Convenience library that makes it easier to use statebox with riak, extracted from best practices in our production code at Mochi Media.$/;"	m
pkg_statebox_riak_fetch	deps/cowboy/erlang.mk	/^pkg_statebox_riak_fetch = git$/;"	m
pkg_statebox_riak_homepage	deps/cowboy/erlang.mk	/^pkg_statebox_riak_homepage = https:\/\/github.com\/mochi\/statebox_riak$/;"	m
pkg_statebox_riak_name	deps/cowboy/erlang.mk	/^pkg_statebox_riak_name = statebox_riak$/;"	m
pkg_statebox_riak_repo	deps/cowboy/erlang.mk	/^pkg_statebox_riak_repo = https:\/\/github.com\/mochi\/statebox_riak$/;"	m
pkg_statman_commit	deps/cowboy/erlang.mk	/^pkg_statman_commit = master$/;"	m
pkg_statman_description	deps/cowboy/erlang.mk	/^pkg_statman_description = Efficiently collect massive volumes of metrics inside the Erlang VM$/;"	m
pkg_statman_fetch	deps/cowboy/erlang.mk	/^pkg_statman_fetch = git$/;"	m
pkg_statman_homepage	deps/cowboy/erlang.mk	/^pkg_statman_homepage = https:\/\/github.com\/knutin\/statman$/;"	m
pkg_statman_name	deps/cowboy/erlang.mk	/^pkg_statman_name = statman$/;"	m
pkg_statman_repo	deps/cowboy/erlang.mk	/^pkg_statman_repo = https:\/\/github.com\/knutin\/statman$/;"	m
pkg_statsderl_commit	deps/cowboy/erlang.mk	/^pkg_statsderl_commit = master$/;"	m
pkg_statsderl_description	deps/cowboy/erlang.mk	/^pkg_statsderl_description = StatsD client (erlang)$/;"	m
pkg_statsderl_fetch	deps/cowboy/erlang.mk	/^pkg_statsderl_fetch = git$/;"	m
pkg_statsderl_homepage	deps/cowboy/erlang.mk	/^pkg_statsderl_homepage = https:\/\/github.com\/lpgauth\/statsderl$/;"	m
pkg_statsderl_name	deps/cowboy/erlang.mk	/^pkg_statsderl_name = statsderl$/;"	m
pkg_statsderl_repo	deps/cowboy/erlang.mk	/^pkg_statsderl_repo = https:\/\/github.com\/lpgauth\/statsderl$/;"	m
pkg_stdinout_pool_commit	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_commit = master$/;"	m
pkg_stdinout_pool_description	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_description = stdinout_pool    : stuff goes in, stuff goes out. there's never any miscommunication.$/;"	m
pkg_stdinout_pool_fetch	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_fetch = git$/;"	m
pkg_stdinout_pool_homepage	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_homepage = https:\/\/github.com\/mattsta\/erlang-stdinout-pool$/;"	m
pkg_stdinout_pool_name	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_name = stdinout_pool$/;"	m
pkg_stdinout_pool_repo	deps/cowboy/erlang.mk	/^pkg_stdinout_pool_repo = https:\/\/github.com\/mattsta\/erlang-stdinout-pool$/;"	m
pkg_stockdb_commit	deps/cowboy/erlang.mk	/^pkg_stockdb_commit = master$/;"	m
pkg_stockdb_description	deps/cowboy/erlang.mk	/^pkg_stockdb_description = Database for storing Stock Exchange quotes in erlang$/;"	m
pkg_stockdb_fetch	deps/cowboy/erlang.mk	/^pkg_stockdb_fetch = git$/;"	m
pkg_stockdb_homepage	deps/cowboy/erlang.mk	/^pkg_stockdb_homepage = https:\/\/github.com\/maxlapshin\/stockdb$/;"	m
pkg_stockdb_name	deps/cowboy/erlang.mk	/^pkg_stockdb_name = stockdb$/;"	m
pkg_stockdb_repo	deps/cowboy/erlang.mk	/^pkg_stockdb_repo = https:\/\/github.com\/maxlapshin\/stockdb$/;"	m
pkg_stripe_commit	deps/cowboy/erlang.mk	/^pkg_stripe_commit = v1$/;"	m
pkg_stripe_description	deps/cowboy/erlang.mk	/^pkg_stripe_description = Erlang interface to the stripe.com API$/;"	m
pkg_stripe_fetch	deps/cowboy/erlang.mk	/^pkg_stripe_fetch = git$/;"	m
pkg_stripe_homepage	deps/cowboy/erlang.mk	/^pkg_stripe_homepage = https:\/\/github.com\/mattsta\/stripe-erlang$/;"	m
pkg_stripe_name	deps/cowboy/erlang.mk	/^pkg_stripe_name = stripe$/;"	m
pkg_stripe_repo	deps/cowboy/erlang.mk	/^pkg_stripe_repo = https:\/\/github.com\/mattsta\/stripe-erlang$/;"	m
pkg_surrogate_commit	deps/cowboy/erlang.mk	/^pkg_surrogate_commit = master$/;"	m
pkg_surrogate_description	deps/cowboy/erlang.mk	/^pkg_surrogate_description = Proxy server written in erlang. Supports reverse proxy load balancing and forward proxy with http (including CONNECT), socks4, socks5, and transparent proxy modes.$/;"	m
pkg_surrogate_fetch	deps/cowboy/erlang.mk	/^pkg_surrogate_fetch = git$/;"	m
pkg_surrogate_homepage	deps/cowboy/erlang.mk	/^pkg_surrogate_homepage = https:\/\/github.com\/skruger\/Surrogate$/;"	m
pkg_surrogate_name	deps/cowboy/erlang.mk	/^pkg_surrogate_name = surrogate$/;"	m
pkg_surrogate_repo	deps/cowboy/erlang.mk	/^pkg_surrogate_repo = https:\/\/github.com\/skruger\/Surrogate$/;"	m
pkg_swab_commit	deps/cowboy/erlang.mk	/^pkg_swab_commit = master$/;"	m
pkg_swab_description	deps/cowboy/erlang.mk	/^pkg_swab_description = General purpose buffer handling module$/;"	m
pkg_swab_fetch	deps/cowboy/erlang.mk	/^pkg_swab_fetch = git$/;"	m
pkg_swab_homepage	deps/cowboy/erlang.mk	/^pkg_swab_homepage = https:\/\/github.com\/crownedgrouse\/swab$/;"	m
pkg_swab_name	deps/cowboy/erlang.mk	/^pkg_swab_name = swab$/;"	m
pkg_swab_repo	deps/cowboy/erlang.mk	/^pkg_swab_repo = https:\/\/github.com\/crownedgrouse\/swab$/;"	m
pkg_swarm_commit	deps/cowboy/erlang.mk	/^pkg_swarm_commit = master$/;"	m
pkg_swarm_description	deps/cowboy/erlang.mk	/^pkg_swarm_description = Fast and simple acceptor pool for Erlang$/;"	m
pkg_swarm_fetch	deps/cowboy/erlang.mk	/^pkg_swarm_fetch = git$/;"	m
pkg_swarm_homepage	deps/cowboy/erlang.mk	/^pkg_swarm_homepage = https:\/\/github.com\/jeremey\/swarm$/;"	m
pkg_swarm_name	deps/cowboy/erlang.mk	/^pkg_swarm_name = swarm$/;"	m
pkg_swarm_repo	deps/cowboy/erlang.mk	/^pkg_swarm_repo = https:\/\/github.com\/jeremey\/swarm$/;"	m
pkg_switchboard_commit	deps/cowboy/erlang.mk	/^pkg_switchboard_commit = master$/;"	m
pkg_switchboard_description	deps/cowboy/erlang.mk	/^pkg_switchboard_description = A framework for processing email using worker plugins.$/;"	m
pkg_switchboard_fetch	deps/cowboy/erlang.mk	/^pkg_switchboard_fetch = git$/;"	m
pkg_switchboard_homepage	deps/cowboy/erlang.mk	/^pkg_switchboard_homepage = https:\/\/github.com\/thusfresh\/switchboard$/;"	m
pkg_switchboard_name	deps/cowboy/erlang.mk	/^pkg_switchboard_name = switchboard$/;"	m
pkg_switchboard_repo	deps/cowboy/erlang.mk	/^pkg_switchboard_repo = https:\/\/github.com\/thusfresh\/switchboard$/;"	m
pkg_syn_commit	deps/cowboy/erlang.mk	/^pkg_syn_commit = master$/;"	m
pkg_syn_description	deps/cowboy/erlang.mk	/^pkg_syn_description = A global process registry for Erlang.$/;"	m
pkg_syn_fetch	deps/cowboy/erlang.mk	/^pkg_syn_fetch = git$/;"	m
pkg_syn_homepage	deps/cowboy/erlang.mk	/^pkg_syn_homepage = https:\/\/github.com\/ostinelli\/syn$/;"	m
pkg_syn_name	deps/cowboy/erlang.mk	/^pkg_syn_name = syn$/;"	m
pkg_syn_repo	deps/cowboy/erlang.mk	/^pkg_syn_repo = https:\/\/github.com\/ostinelli\/syn$/;"	m
pkg_sync_commit	deps/cowboy/erlang.mk	/^pkg_sync_commit = master$/;"	m
pkg_sync_description	deps/cowboy/erlang.mk	/^pkg_sync_description = On-the-fly recompiling and reloading in Erlang.$/;"	m
pkg_sync_fetch	deps/cowboy/erlang.mk	/^pkg_sync_fetch = git$/;"	m
pkg_sync_homepage	deps/cowboy/erlang.mk	/^pkg_sync_homepage = https:\/\/github.com\/rustyio\/sync$/;"	m
pkg_sync_name	deps/cowboy/erlang.mk	/^pkg_sync_name = sync$/;"	m
pkg_sync_repo	deps/cowboy/erlang.mk	/^pkg_sync_repo = https:\/\/github.com\/rustyio\/sync$/;"	m
pkg_syntaxerl_commit	deps/cowboy/erlang.mk	/^pkg_syntaxerl_commit = master$/;"	m
pkg_syntaxerl_description	deps/cowboy/erlang.mk	/^pkg_syntaxerl_description = Syntax checker for Erlang$/;"	m
pkg_syntaxerl_fetch	deps/cowboy/erlang.mk	/^pkg_syntaxerl_fetch = git$/;"	m
pkg_syntaxerl_homepage	deps/cowboy/erlang.mk	/^pkg_syntaxerl_homepage = https:\/\/github.com\/ten0s\/syntaxerl$/;"	m
pkg_syntaxerl_name	deps/cowboy/erlang.mk	/^pkg_syntaxerl_name = syntaxerl$/;"	m
pkg_syntaxerl_repo	deps/cowboy/erlang.mk	/^pkg_syntaxerl_repo = https:\/\/github.com\/ten0s\/syntaxerl$/;"	m
pkg_syslog_commit	deps/cowboy/erlang.mk	/^pkg_syslog_commit = master$/;"	m
pkg_syslog_description	deps/cowboy/erlang.mk	/^pkg_syslog_description = Erlang port driver for interacting with syslog via syslog(3)$/;"	m
pkg_syslog_fetch	deps/cowboy/erlang.mk	/^pkg_syslog_fetch = git$/;"	m
pkg_syslog_homepage	deps/cowboy/erlang.mk	/^pkg_syslog_homepage = https:\/\/github.com\/Vagabond\/erlang-syslog$/;"	m
pkg_syslog_name	deps/cowboy/erlang.mk	/^pkg_syslog_name = syslog$/;"	m
pkg_syslog_repo	deps/cowboy/erlang.mk	/^pkg_syslog_repo = https:\/\/github.com\/Vagabond\/erlang-syslog$/;"	m
pkg_taskforce_commit	deps/cowboy/erlang.mk	/^pkg_taskforce_commit = master$/;"	m
pkg_taskforce_description	deps/cowboy/erlang.mk	/^pkg_taskforce_description = Erlang worker pools for controlled parallelisation of arbitrary tasks.$/;"	m
pkg_taskforce_fetch	deps/cowboy/erlang.mk	/^pkg_taskforce_fetch = git$/;"	m
pkg_taskforce_homepage	deps/cowboy/erlang.mk	/^pkg_taskforce_homepage = https:\/\/github.com\/g-andrade\/taskforce$/;"	m
pkg_taskforce_name	deps/cowboy/erlang.mk	/^pkg_taskforce_name = taskforce$/;"	m
pkg_taskforce_repo	deps/cowboy/erlang.mk	/^pkg_taskforce_repo = https:\/\/github.com\/g-andrade\/taskforce$/;"	m
pkg_tddreloader_commit	deps/cowboy/erlang.mk	/^pkg_tddreloader_commit = master$/;"	m
pkg_tddreloader_description	deps/cowboy/erlang.mk	/^pkg_tddreloader_description = Shell utility for recompiling, reloading, and testing code as it changes$/;"	m
pkg_tddreloader_fetch	deps/cowboy/erlang.mk	/^pkg_tddreloader_fetch = git$/;"	m
pkg_tddreloader_homepage	deps/cowboy/erlang.mk	/^pkg_tddreloader_homepage = https:\/\/github.com\/version2beta\/tddreloader$/;"	m
pkg_tddreloader_name	deps/cowboy/erlang.mk	/^pkg_tddreloader_name = tddreloader$/;"	m
pkg_tddreloader_repo	deps/cowboy/erlang.mk	/^pkg_tddreloader_repo = https:\/\/github.com\/version2beta\/tddreloader$/;"	m
pkg_tempo_commit	deps/cowboy/erlang.mk	/^pkg_tempo_commit = master$/;"	m
pkg_tempo_description	deps/cowboy/erlang.mk	/^pkg_tempo_description = NIF-based date and time parsing and formatting for Erlang.$/;"	m
pkg_tempo_fetch	deps/cowboy/erlang.mk	/^pkg_tempo_fetch = git$/;"	m
pkg_tempo_homepage	deps/cowboy/erlang.mk	/^pkg_tempo_homepage = https:\/\/github.com\/selectel\/tempo$/;"	m
pkg_tempo_name	deps/cowboy/erlang.mk	/^pkg_tempo_name = tempo$/;"	m
pkg_tempo_repo	deps/cowboy/erlang.mk	/^pkg_tempo_repo = https:\/\/github.com\/selectel\/tempo$/;"	m
pkg_ticktick_commit	deps/cowboy/erlang.mk	/^pkg_ticktick_commit = master$/;"	m
pkg_ticktick_description	deps/cowboy/erlang.mk	/^pkg_ticktick_description = Ticktick is an id generator for message service.$/;"	m
pkg_ticktick_fetch	deps/cowboy/erlang.mk	/^pkg_ticktick_fetch = git$/;"	m
pkg_ticktick_homepage	deps/cowboy/erlang.mk	/^pkg_ticktick_homepage = https:\/\/github.com\/ericliang\/ticktick$/;"	m
pkg_ticktick_name	deps/cowboy/erlang.mk	/^pkg_ticktick_name = ticktick$/;"	m
pkg_ticktick_repo	deps/cowboy/erlang.mk	/^pkg_ticktick_repo = https:\/\/github.com\/ericliang\/ticktick$/;"	m
pkg_tinymq_commit	deps/cowboy/erlang.mk	/^pkg_tinymq_commit = master$/;"	m
pkg_tinymq_description	deps/cowboy/erlang.mk	/^pkg_tinymq_description = TinyMQ - a diminutive, in-memory message queue$/;"	m
pkg_tinymq_fetch	deps/cowboy/erlang.mk	/^pkg_tinymq_fetch = git$/;"	m
pkg_tinymq_homepage	deps/cowboy/erlang.mk	/^pkg_tinymq_homepage = https:\/\/github.com\/ChicagoBoss\/tinymq$/;"	m
pkg_tinymq_name	deps/cowboy/erlang.mk	/^pkg_tinymq_name = tinymq$/;"	m
pkg_tinymq_repo	deps/cowboy/erlang.mk	/^pkg_tinymq_repo = https:\/\/github.com\/ChicagoBoss\/tinymq$/;"	m
pkg_tinymt_commit	deps/cowboy/erlang.mk	/^pkg_tinymt_commit = master$/;"	m
pkg_tinymt_description	deps/cowboy/erlang.mk	/^pkg_tinymt_description = TinyMT pseudo random number generator for Erlang.$/;"	m
pkg_tinymt_fetch	deps/cowboy/erlang.mk	/^pkg_tinymt_fetch = git$/;"	m
pkg_tinymt_homepage	deps/cowboy/erlang.mk	/^pkg_tinymt_homepage = https:\/\/github.com\/jj1bdx\/tinymt-erlang$/;"	m
pkg_tinymt_name	deps/cowboy/erlang.mk	/^pkg_tinymt_name = tinymt$/;"	m
pkg_tinymt_repo	deps/cowboy/erlang.mk	/^pkg_tinymt_repo = https:\/\/github.com\/jj1bdx\/tinymt-erlang$/;"	m
pkg_tirerl_commit	deps/cowboy/erlang.mk	/^pkg_tirerl_commit = master$/;"	m
pkg_tirerl_description	deps/cowboy/erlang.mk	/^pkg_tirerl_description = Erlang interface to Elastic Search$/;"	m
pkg_tirerl_fetch	deps/cowboy/erlang.mk	/^pkg_tirerl_fetch = git$/;"	m
pkg_tirerl_homepage	deps/cowboy/erlang.mk	/^pkg_tirerl_homepage = https:\/\/github.com\/inaka\/tirerl$/;"	m
pkg_tirerl_name	deps/cowboy/erlang.mk	/^pkg_tirerl_name = tirerl$/;"	m
pkg_tirerl_repo	deps/cowboy/erlang.mk	/^pkg_tirerl_repo = https:\/\/github.com\/inaka\/tirerl$/;"	m
pkg_traffic_tools_commit	deps/cowboy/erlang.mk	/^pkg_traffic_tools_commit = master$/;"	m
pkg_traffic_tools_description	deps/cowboy/erlang.mk	/^pkg_traffic_tools_description = Simple traffic limiting library$/;"	m
pkg_traffic_tools_fetch	deps/cowboy/erlang.mk	/^pkg_traffic_tools_fetch = git$/;"	m
pkg_traffic_tools_homepage	deps/cowboy/erlang.mk	/^pkg_traffic_tools_homepage = https:\/\/github.com\/systra\/traffic_tools$/;"	m
pkg_traffic_tools_name	deps/cowboy/erlang.mk	/^pkg_traffic_tools_name = traffic_tools$/;"	m
pkg_traffic_tools_repo	deps/cowboy/erlang.mk	/^pkg_traffic_tools_repo = https:\/\/github.com\/systra\/traffic_tools$/;"	m
pkg_trails_commit	deps/cowboy/erlang.mk	/^pkg_trails_commit = master$/;"	m
pkg_trails_description	deps/cowboy/erlang.mk	/^pkg_trails_description = A couple of improvements over Cowboy Routes$/;"	m
pkg_trails_fetch	deps/cowboy/erlang.mk	/^pkg_trails_fetch = git$/;"	m
pkg_trails_homepage	deps/cowboy/erlang.mk	/^pkg_trails_homepage = http:\/\/inaka.github.io\/cowboy-trails\/$/;"	m
pkg_trails_name	deps/cowboy/erlang.mk	/^pkg_trails_name = trails$/;"	m
pkg_trails_repo	deps/cowboy/erlang.mk	/^pkg_trails_repo = https:\/\/github.com\/inaka\/cowboy-trails$/;"	m
pkg_trane_commit	deps/cowboy/erlang.mk	/^pkg_trane_commit = master$/;"	m
pkg_trane_description	deps/cowboy/erlang.mk	/^pkg_trane_description = SAX style broken HTML parser in Erlang$/;"	m
pkg_trane_fetch	deps/cowboy/erlang.mk	/^pkg_trane_fetch = git$/;"	m
pkg_trane_homepage	deps/cowboy/erlang.mk	/^pkg_trane_homepage = https:\/\/github.com\/massemanet\/trane$/;"	m
pkg_trane_name	deps/cowboy/erlang.mk	/^pkg_trane_name = trane$/;"	m
pkg_trane_repo	deps/cowboy/erlang.mk	/^pkg_trane_repo = https:\/\/github.com\/massemanet\/trane$/;"	m
pkg_transit_commit	deps/cowboy/erlang.mk	/^pkg_transit_commit = master$/;"	m
pkg_transit_description	deps/cowboy/erlang.mk	/^pkg_transit_description = transit format for erlang$/;"	m
pkg_transit_fetch	deps/cowboy/erlang.mk	/^pkg_transit_fetch = git$/;"	m
pkg_transit_homepage	deps/cowboy/erlang.mk	/^pkg_transit_homepage = https:\/\/github.com\/isaiah\/transit-erlang$/;"	m
pkg_transit_name	deps/cowboy/erlang.mk	/^pkg_transit_name = transit$/;"	m
pkg_transit_repo	deps/cowboy/erlang.mk	/^pkg_transit_repo = https:\/\/github.com\/isaiah\/transit-erlang$/;"	m
pkg_trie_commit	deps/cowboy/erlang.mk	/^pkg_trie_commit = master$/;"	m
pkg_trie_description	deps/cowboy/erlang.mk	/^pkg_trie_description = Erlang Trie Implementation$/;"	m
pkg_trie_fetch	deps/cowboy/erlang.mk	/^pkg_trie_fetch = git$/;"	m
pkg_trie_homepage	deps/cowboy/erlang.mk	/^pkg_trie_homepage = https:\/\/github.com\/okeuday\/trie$/;"	m
pkg_trie_name	deps/cowboy/erlang.mk	/^pkg_trie_name = trie$/;"	m
pkg_trie_repo	deps/cowboy/erlang.mk	/^pkg_trie_repo = https:\/\/github.com\/okeuday\/trie$/;"	m
pkg_triq_commit	deps/cowboy/erlang.mk	/^pkg_triq_commit = master$/;"	m
pkg_triq_description	deps/cowboy/erlang.mk	/^pkg_triq_description = Trifork QuickCheck$/;"	m
pkg_triq_fetch	deps/cowboy/erlang.mk	/^pkg_triq_fetch = git$/;"	m
pkg_triq_homepage	deps/cowboy/erlang.mk	/^pkg_triq_homepage = https:\/\/github.com\/krestenkrab\/triq$/;"	m
pkg_triq_name	deps/cowboy/erlang.mk	/^pkg_triq_name = triq$/;"	m
pkg_triq_repo	deps/cowboy/erlang.mk	/^pkg_triq_repo = https:\/\/github.com\/krestenkrab\/triq$/;"	m
pkg_tunctl_commit	deps/cowboy/erlang.mk	/^pkg_tunctl_commit = master$/;"	m
pkg_tunctl_description	deps/cowboy/erlang.mk	/^pkg_tunctl_description = Erlang TUN\/TAP interface$/;"	m
pkg_tunctl_fetch	deps/cowboy/erlang.mk	/^pkg_tunctl_fetch = git$/;"	m
pkg_tunctl_homepage	deps/cowboy/erlang.mk	/^pkg_tunctl_homepage = https:\/\/github.com\/msantos\/tunctl$/;"	m
pkg_tunctl_name	deps/cowboy/erlang.mk	/^pkg_tunctl_name = tunctl$/;"	m
pkg_tunctl_repo	deps/cowboy/erlang.mk	/^pkg_tunctl_repo = https:\/\/github.com\/msantos\/tunctl$/;"	m
pkg_twerl_commit	deps/cowboy/erlang.mk	/^pkg_twerl_commit = oauth$/;"	m
pkg_twerl_description	deps/cowboy/erlang.mk	/^pkg_twerl_description = Erlang client for the Twitter Streaming API$/;"	m
pkg_twerl_fetch	deps/cowboy/erlang.mk	/^pkg_twerl_fetch = git$/;"	m
pkg_twerl_homepage	deps/cowboy/erlang.mk	/^pkg_twerl_homepage = https:\/\/github.com\/lucaspiller\/twerl$/;"	m
pkg_twerl_name	deps/cowboy/erlang.mk	/^pkg_twerl_name = twerl$/;"	m
pkg_twerl_repo	deps/cowboy/erlang.mk	/^pkg_twerl_repo = https:\/\/github.com\/lucaspiller\/twerl$/;"	m
pkg_twitter_erlang_commit	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_commit = master$/;"	m
pkg_twitter_erlang_description	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_description = An Erlang twitter client$/;"	m
pkg_twitter_erlang_fetch	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_fetch = git$/;"	m
pkg_twitter_erlang_homepage	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_homepage = https:\/\/github.com\/ngerakines\/erlang_twitter$/;"	m
pkg_twitter_erlang_name	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_name = twitter_erlang$/;"	m
pkg_twitter_erlang_repo	deps/cowboy/erlang.mk	/^pkg_twitter_erlang_repo = https:\/\/github.com\/ngerakines\/erlang_twitter$/;"	m
pkg_ucol_nif_commit	deps/cowboy/erlang.mk	/^pkg_ucol_nif_commit = master$/;"	m
pkg_ucol_nif_description	deps/cowboy/erlang.mk	/^pkg_ucol_nif_description = ICU based collation Erlang module$/;"	m
pkg_ucol_nif_fetch	deps/cowboy/erlang.mk	/^pkg_ucol_nif_fetch = git$/;"	m
pkg_ucol_nif_homepage	deps/cowboy/erlang.mk	/^pkg_ucol_nif_homepage = https:\/\/github.com\/refuge\/ucol_nif$/;"	m
pkg_ucol_nif_name	deps/cowboy/erlang.mk	/^pkg_ucol_nif_name = ucol_nif$/;"	m
pkg_ucol_nif_repo	deps/cowboy/erlang.mk	/^pkg_ucol_nif_repo = https:\/\/github.com\/refuge\/ucol_nif$/;"	m
pkg_unicorn_commit	deps/cowboy/erlang.mk	/^pkg_unicorn_commit = 0.3.0$/;"	m
pkg_unicorn_description	deps/cowboy/erlang.mk	/^pkg_unicorn_description = Generic configuration server$/;"	m
pkg_unicorn_fetch	deps/cowboy/erlang.mk	/^pkg_unicorn_fetch = git$/;"	m
pkg_unicorn_homepage	deps/cowboy/erlang.mk	/^pkg_unicorn_homepage = https:\/\/github.com\/shizzard\/unicorn$/;"	m
pkg_unicorn_name	deps/cowboy/erlang.mk	/^pkg_unicorn_name = unicorn$/;"	m
pkg_unicorn_repo	deps/cowboy/erlang.mk	/^pkg_unicorn_repo = https:\/\/github.com\/shizzard\/unicorn$/;"	m
pkg_unsplit_commit	deps/cowboy/erlang.mk	/^pkg_unsplit_commit = master$/;"	m
pkg_unsplit_description	deps/cowboy/erlang.mk	/^pkg_unsplit_description = Resolves conflicts in Mnesia after network splits$/;"	m
pkg_unsplit_fetch	deps/cowboy/erlang.mk	/^pkg_unsplit_fetch = git$/;"	m
pkg_unsplit_homepage	deps/cowboy/erlang.mk	/^pkg_unsplit_homepage = https:\/\/github.com\/uwiger\/unsplit$/;"	m
pkg_unsplit_name	deps/cowboy/erlang.mk	/^pkg_unsplit_name = unsplit$/;"	m
pkg_unsplit_repo	deps/cowboy/erlang.mk	/^pkg_unsplit_repo = https:\/\/github.com\/uwiger\/unsplit$/;"	m
pkg_uuid_commit	deps/cowboy/erlang.mk	/^pkg_uuid_commit = v1.4.0$/;"	m
pkg_uuid_description	deps/cowboy/erlang.mk	/^pkg_uuid_description = Erlang UUID Implementation$/;"	m
pkg_uuid_fetch	deps/cowboy/erlang.mk	/^pkg_uuid_fetch = git$/;"	m
pkg_uuid_homepage	deps/cowboy/erlang.mk	/^pkg_uuid_homepage = https:\/\/github.com\/okeuday\/uuid$/;"	m
pkg_uuid_name	deps/cowboy/erlang.mk	/^pkg_uuid_name = uuid$/;"	m
pkg_uuid_repo	deps/cowboy/erlang.mk	/^pkg_uuid_repo = https:\/\/github.com\/okeuday\/uuid$/;"	m
pkg_ux_commit	deps/cowboy/erlang.mk	/^pkg_ux_commit = master$/;"	m
pkg_ux_description	deps/cowboy/erlang.mk	/^pkg_ux_description = Unicode eXtention for Erlang (Strings, Collation)$/;"	m
pkg_ux_fetch	deps/cowboy/erlang.mk	/^pkg_ux_fetch = git$/;"	m
pkg_ux_homepage	deps/cowboy/erlang.mk	/^pkg_ux_homepage = https:\/\/github.com\/erlang-unicode\/ux$/;"	m
pkg_ux_name	deps/cowboy/erlang.mk	/^pkg_ux_name = ux$/;"	m
pkg_ux_repo	deps/cowboy/erlang.mk	/^pkg_ux_repo = https:\/\/github.com\/erlang-unicode\/ux$/;"	m
pkg_vert_commit	deps/cowboy/erlang.mk	/^pkg_vert_commit = master$/;"	m
pkg_vert_description	deps/cowboy/erlang.mk	/^pkg_vert_description = Erlang binding to libvirt virtualization API$/;"	m
pkg_vert_fetch	deps/cowboy/erlang.mk	/^pkg_vert_fetch = git$/;"	m
pkg_vert_homepage	deps/cowboy/erlang.mk	/^pkg_vert_homepage = https:\/\/github.com\/msantos\/erlang-libvirt$/;"	m
pkg_vert_name	deps/cowboy/erlang.mk	/^pkg_vert_name = vert$/;"	m
pkg_vert_repo	deps/cowboy/erlang.mk	/^pkg_vert_repo = https:\/\/github.com\/msantos\/erlang-libvirt$/;"	m
pkg_verx_commit	deps/cowboy/erlang.mk	/^pkg_verx_commit = master$/;"	m
pkg_verx_description	deps/cowboy/erlang.mk	/^pkg_verx_description = Erlang implementation of the libvirtd remote protocol$/;"	m
pkg_verx_fetch	deps/cowboy/erlang.mk	/^pkg_verx_fetch = git$/;"	m
pkg_verx_homepage	deps/cowboy/erlang.mk	/^pkg_verx_homepage = https:\/\/github.com\/msantos\/verx$/;"	m
pkg_verx_name	deps/cowboy/erlang.mk	/^pkg_verx_name = verx$/;"	m
pkg_verx_repo	deps/cowboy/erlang.mk	/^pkg_verx_repo = https:\/\/github.com\/msantos\/verx$/;"	m
pkg_vmq_acl_commit	deps/cowboy/erlang.mk	/^pkg_vmq_acl_commit = master$/;"	m
pkg_vmq_acl_description	deps/cowboy/erlang.mk	/^pkg_vmq_acl_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_acl_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_acl_fetch = git$/;"	m
pkg_vmq_acl_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_acl_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_acl_name	deps/cowboy/erlang.mk	/^pkg_vmq_acl_name = vmq_acl$/;"	m
pkg_vmq_acl_repo	deps/cowboy/erlang.mk	/^pkg_vmq_acl_repo = https:\/\/github.com\/erlio\/vmq_acl$/;"	m
pkg_vmq_bridge_commit	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_commit = master$/;"	m
pkg_vmq_bridge_description	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_bridge_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_fetch = git$/;"	m
pkg_vmq_bridge_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_bridge_name	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_name = vmq_bridge$/;"	m
pkg_vmq_bridge_repo	deps/cowboy/erlang.mk	/^pkg_vmq_bridge_repo = https:\/\/github.com\/erlio\/vmq_bridge$/;"	m
pkg_vmq_graphite_commit	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_commit = master$/;"	m
pkg_vmq_graphite_description	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_graphite_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_fetch = git$/;"	m
pkg_vmq_graphite_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_graphite_name	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_name = vmq_graphite$/;"	m
pkg_vmq_graphite_repo	deps/cowboy/erlang.mk	/^pkg_vmq_graphite_repo = https:\/\/github.com\/erlio\/vmq_graphite$/;"	m
pkg_vmq_passwd_commit	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_commit = master$/;"	m
pkg_vmq_passwd_description	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_passwd_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_fetch = git$/;"	m
pkg_vmq_passwd_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_passwd_name	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_name = vmq_passwd$/;"	m
pkg_vmq_passwd_repo	deps/cowboy/erlang.mk	/^pkg_vmq_passwd_repo = https:\/\/github.com\/erlio\/vmq_passwd$/;"	m
pkg_vmq_server_commit	deps/cowboy/erlang.mk	/^pkg_vmq_server_commit = master$/;"	m
pkg_vmq_server_description	deps/cowboy/erlang.mk	/^pkg_vmq_server_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_server_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_server_fetch = git$/;"	m
pkg_vmq_server_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_server_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_server_name	deps/cowboy/erlang.mk	/^pkg_vmq_server_name = vmq_server$/;"	m
pkg_vmq_server_repo	deps/cowboy/erlang.mk	/^pkg_vmq_server_repo = https:\/\/github.com\/erlio\/vmq_server$/;"	m
pkg_vmq_snmp_commit	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_commit = master$/;"	m
pkg_vmq_snmp_description	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_snmp_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_fetch = git$/;"	m
pkg_vmq_snmp_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_snmp_name	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_name = vmq_snmp$/;"	m
pkg_vmq_snmp_repo	deps/cowboy/erlang.mk	/^pkg_vmq_snmp_repo = https:\/\/github.com\/erlio\/vmq_snmp$/;"	m
pkg_vmq_systree_commit	deps/cowboy/erlang.mk	/^pkg_vmq_systree_commit = master$/;"	m
pkg_vmq_systree_description	deps/cowboy/erlang.mk	/^pkg_vmq_systree_description = Component of VerneMQ: A distributed MQTT message broker$/;"	m
pkg_vmq_systree_fetch	deps/cowboy/erlang.mk	/^pkg_vmq_systree_fetch = git$/;"	m
pkg_vmq_systree_homepage	deps/cowboy/erlang.mk	/^pkg_vmq_systree_homepage = https:\/\/verne.mq\/$/;"	m
pkg_vmq_systree_name	deps/cowboy/erlang.mk	/^pkg_vmq_systree_name = vmq_systree$/;"	m
pkg_vmq_systree_repo	deps/cowboy/erlang.mk	/^pkg_vmq_systree_repo = https:\/\/github.com\/erlio\/vmq_systree$/;"	m
pkg_vmstats_commit	deps/cowboy/erlang.mk	/^pkg_vmstats_commit = master$/;"	m
pkg_vmstats_description	deps/cowboy/erlang.mk	/^pkg_vmstats_description = tiny Erlang app that works in conjunction with statsderl in order to generate information on the Erlang VM for graphite logs.$/;"	m
pkg_vmstats_fetch	deps/cowboy/erlang.mk	/^pkg_vmstats_fetch = git$/;"	m
pkg_vmstats_homepage	deps/cowboy/erlang.mk	/^pkg_vmstats_homepage = https:\/\/github.com\/ferd\/vmstats$/;"	m
pkg_vmstats_name	deps/cowboy/erlang.mk	/^pkg_vmstats_name = vmstats$/;"	m
pkg_vmstats_repo	deps/cowboy/erlang.mk	/^pkg_vmstats_repo = https:\/\/github.com\/ferd\/vmstats$/;"	m
pkg_walrus_commit	deps/cowboy/erlang.mk	/^pkg_walrus_commit = master$/;"	m
pkg_walrus_description	deps/cowboy/erlang.mk	/^pkg_walrus_description = Walrus - Mustache-like Templating$/;"	m
pkg_walrus_fetch	deps/cowboy/erlang.mk	/^pkg_walrus_fetch = git$/;"	m
pkg_walrus_homepage	deps/cowboy/erlang.mk	/^pkg_walrus_homepage = https:\/\/github.com\/devinus\/walrus$/;"	m
pkg_walrus_name	deps/cowboy/erlang.mk	/^pkg_walrus_name = walrus$/;"	m
pkg_walrus_repo	deps/cowboy/erlang.mk	/^pkg_walrus_repo = https:\/\/github.com\/devinus\/walrus$/;"	m
pkg_webmachine_commit	deps/cowboy/erlang.mk	/^pkg_webmachine_commit = master$/;"	m
pkg_webmachine_description	deps/cowboy/erlang.mk	/^pkg_webmachine_description = A REST-based system for building web applications.$/;"	m
pkg_webmachine_fetch	deps/cowboy/erlang.mk	/^pkg_webmachine_fetch = git$/;"	m
pkg_webmachine_homepage	deps/cowboy/erlang.mk	/^pkg_webmachine_homepage = https:\/\/github.com\/basho\/webmachine$/;"	m
pkg_webmachine_name	deps/cowboy/erlang.mk	/^pkg_webmachine_name = webmachine$/;"	m
pkg_webmachine_repo	deps/cowboy/erlang.mk	/^pkg_webmachine_repo = https:\/\/github.com\/basho\/webmachine$/;"	m
pkg_websocket_client_commit	deps/cowboy/erlang.mk	/^pkg_websocket_client_commit = master$/;"	m
pkg_websocket_client_description	deps/cowboy/erlang.mk	/^pkg_websocket_client_description = Erlang websocket client (ws and wss supported)$/;"	m
pkg_websocket_client_fetch	deps/cowboy/erlang.mk	/^pkg_websocket_client_fetch = git$/;"	m
pkg_websocket_client_homepage	deps/cowboy/erlang.mk	/^pkg_websocket_client_homepage = https:\/\/github.com\/jeremyong\/websocket_client$/;"	m
pkg_websocket_client_name	deps/cowboy/erlang.mk	/^pkg_websocket_client_name = websocket_client$/;"	m
pkg_websocket_client_repo	deps/cowboy/erlang.mk	/^pkg_websocket_client_repo = https:\/\/github.com\/jeremyong\/websocket_client$/;"	m
pkg_worker_pool_commit	deps/cowboy/erlang.mk	/^pkg_worker_pool_commit = 1.0.2$/;"	m
pkg_worker_pool_description	deps/cowboy/erlang.mk	/^pkg_worker_pool_description = a simple erlang worker pool$/;"	m
pkg_worker_pool_fetch	deps/cowboy/erlang.mk	/^pkg_worker_pool_fetch = git$/;"	m
pkg_worker_pool_homepage	deps/cowboy/erlang.mk	/^pkg_worker_pool_homepage = https:\/\/github.com\/inaka\/worker_pool$/;"	m
pkg_worker_pool_name	deps/cowboy/erlang.mk	/^pkg_worker_pool_name = worker_pool$/;"	m
pkg_worker_pool_repo	deps/cowboy/erlang.mk	/^pkg_worker_pool_repo = https:\/\/github.com\/inaka\/worker_pool$/;"	m
pkg_wrangler_commit	deps/cowboy/erlang.mk	/^pkg_wrangler_commit = master$/;"	m
pkg_wrangler_description	deps/cowboy/erlang.mk	/^pkg_wrangler_description = Import of the Wrangler svn repository.$/;"	m
pkg_wrangler_fetch	deps/cowboy/erlang.mk	/^pkg_wrangler_fetch = git$/;"	m
pkg_wrangler_homepage	deps/cowboy/erlang.mk	/^pkg_wrangler_homepage = http:\/\/www.cs.kent.ac.uk\/projects\/wrangler\/Home.html$/;"	m
pkg_wrangler_name	deps/cowboy/erlang.mk	/^pkg_wrangler_name = wrangler$/;"	m
pkg_wrangler_repo	deps/cowboy/erlang.mk	/^pkg_wrangler_repo = https:\/\/github.com\/RefactoringTools\/wrangler$/;"	m
pkg_wsock_commit	deps/cowboy/erlang.mk	/^pkg_wsock_commit = master$/;"	m
pkg_wsock_description	deps/cowboy/erlang.mk	/^pkg_wsock_description = Erlang library to build WebSocket clients and servers$/;"	m
pkg_wsock_fetch	deps/cowboy/erlang.mk	/^pkg_wsock_fetch = git$/;"	m
pkg_wsock_homepage	deps/cowboy/erlang.mk	/^pkg_wsock_homepage = https:\/\/github.com\/madtrick\/wsock$/;"	m
pkg_wsock_name	deps/cowboy/erlang.mk	/^pkg_wsock_name = wsock$/;"	m
pkg_wsock_repo	deps/cowboy/erlang.mk	/^pkg_wsock_repo = https:\/\/github.com\/madtrick\/wsock$/;"	m
pkg_xhttpc_commit	deps/cowboy/erlang.mk	/^pkg_xhttpc_commit = master$/;"	m
pkg_xhttpc_description	deps/cowboy/erlang.mk	/^pkg_xhttpc_description = Extensible HTTP Client for Erlang$/;"	m
pkg_xhttpc_fetch	deps/cowboy/erlang.mk	/^pkg_xhttpc_fetch = git$/;"	m
pkg_xhttpc_homepage	deps/cowboy/erlang.mk	/^pkg_xhttpc_homepage = https:\/\/github.com\/seriyps\/xhttpc$/;"	m
pkg_xhttpc_name	deps/cowboy/erlang.mk	/^pkg_xhttpc_name = xhttpc$/;"	m
pkg_xhttpc_repo	deps/cowboy/erlang.mk	/^pkg_xhttpc_repo = https:\/\/github.com\/seriyps\/xhttpc$/;"	m
pkg_xref_runner_commit	deps/cowboy/erlang.mk	/^pkg_xref_runner_commit = 0.2.0$/;"	m
pkg_xref_runner_description	deps/cowboy/erlang.mk	/^pkg_xref_runner_description = Erlang Xref Runner (inspired in rebar xref)$/;"	m
pkg_xref_runner_fetch	deps/cowboy/erlang.mk	/^pkg_xref_runner_fetch = git$/;"	m
pkg_xref_runner_homepage	deps/cowboy/erlang.mk	/^pkg_xref_runner_homepage = https:\/\/github.com\/inaka\/xref_runner$/;"	m
pkg_xref_runner_name	deps/cowboy/erlang.mk	/^pkg_xref_runner_name = xref_runner$/;"	m
pkg_xref_runner_repo	deps/cowboy/erlang.mk	/^pkg_xref_runner_repo = https:\/\/github.com\/inaka\/xref_runner$/;"	m
pkg_yamerl_commit	deps/cowboy/erlang.mk	/^pkg_yamerl_commit = master$/;"	m
pkg_yamerl_description	deps/cowboy/erlang.mk	/^pkg_yamerl_description = YAML 1.2 parser in pure Erlang$/;"	m
pkg_yamerl_fetch	deps/cowboy/erlang.mk	/^pkg_yamerl_fetch = git$/;"	m
pkg_yamerl_homepage	deps/cowboy/erlang.mk	/^pkg_yamerl_homepage = https:\/\/github.com\/yakaz\/yamerl$/;"	m
pkg_yamerl_name	deps/cowboy/erlang.mk	/^pkg_yamerl_name = yamerl$/;"	m
pkg_yamerl_repo	deps/cowboy/erlang.mk	/^pkg_yamerl_repo = https:\/\/github.com\/yakaz\/yamerl$/;"	m
pkg_yamler_commit	deps/cowboy/erlang.mk	/^pkg_yamler_commit = master$/;"	m
pkg_yamler_description	deps/cowboy/erlang.mk	/^pkg_yamler_description = libyaml-based yaml loader for Erlang$/;"	m
pkg_yamler_fetch	deps/cowboy/erlang.mk	/^pkg_yamler_fetch = git$/;"	m
pkg_yamler_homepage	deps/cowboy/erlang.mk	/^pkg_yamler_homepage = https:\/\/github.com\/goertzenator\/yamler$/;"	m
pkg_yamler_name	deps/cowboy/erlang.mk	/^pkg_yamler_name = yamler$/;"	m
pkg_yamler_repo	deps/cowboy/erlang.mk	/^pkg_yamler_repo = https:\/\/github.com\/goertzenator\/yamler$/;"	m
pkg_yaws_commit	deps/cowboy/erlang.mk	/^pkg_yaws_commit = master$/;"	m
pkg_yaws_description	deps/cowboy/erlang.mk	/^pkg_yaws_description = Yaws webserver$/;"	m
pkg_yaws_fetch	deps/cowboy/erlang.mk	/^pkg_yaws_fetch = git$/;"	m
pkg_yaws_homepage	deps/cowboy/erlang.mk	/^pkg_yaws_homepage = http:\/\/yaws.hyber.org$/;"	m
pkg_yaws_name	deps/cowboy/erlang.mk	/^pkg_yaws_name = yaws$/;"	m
pkg_yaws_repo	deps/cowboy/erlang.mk	/^pkg_yaws_repo = https:\/\/github.com\/klacke\/yaws$/;"	m
pkg_zab_engine_commit	deps/cowboy/erlang.mk	/^pkg_zab_engine_commit = master$/;"	m
pkg_zab_engine_description	deps/cowboy/erlang.mk	/^pkg_zab_engine_description = zab propotocol implement by erlang$/;"	m
pkg_zab_engine_fetch	deps/cowboy/erlang.mk	/^pkg_zab_engine_fetch = git$/;"	m
pkg_zab_engine_homepage	deps/cowboy/erlang.mk	/^pkg_zab_engine_homepage = https:\/\/github.com\/xinmingyao\/zab_engine$/;"	m
pkg_zab_engine_name	deps/cowboy/erlang.mk	/^pkg_zab_engine_name = zab_engine$/;"	m
pkg_zab_engine_repo	deps/cowboy/erlang.mk	/^pkg_zab_engine_repo = https:\/\/github.com\/xinmingyao\/zab_engine$/;"	m
pkg_zeta_commit	deps/cowboy/erlang.mk	/^pkg_zeta_commit =  $/;"	m
pkg_zeta_description	deps/cowboy/erlang.mk	/^pkg_zeta_description = HTTP access log parser in Erlang$/;"	m
pkg_zeta_fetch	deps/cowboy/erlang.mk	/^pkg_zeta_fetch = git$/;"	m
pkg_zeta_homepage	deps/cowboy/erlang.mk	/^pkg_zeta_homepage = https:\/\/github.com\/s1n4\/zeta$/;"	m
pkg_zeta_name	deps/cowboy/erlang.mk	/^pkg_zeta_name = zeta$/;"	m
pkg_zeta_repo	deps/cowboy/erlang.mk	/^pkg_zeta_repo = https:\/\/github.com\/s1n4\/zeta$/;"	m
pkg_zippers_commit	deps/cowboy/erlang.mk	/^pkg_zippers_commit = master$/;"	m
pkg_zippers_description	deps/cowboy/erlang.mk	/^pkg_zippers_description = A library for functional zipper data structures in Erlang. Read more on zippers$/;"	m
pkg_zippers_fetch	deps/cowboy/erlang.mk	/^pkg_zippers_fetch = git$/;"	m
pkg_zippers_homepage	deps/cowboy/erlang.mk	/^pkg_zippers_homepage = https:\/\/github.com\/ferd\/zippers$/;"	m
pkg_zippers_name	deps/cowboy/erlang.mk	/^pkg_zippers_name = zippers$/;"	m
pkg_zippers_repo	deps/cowboy/erlang.mk	/^pkg_zippers_repo = https:\/\/github.com\/ferd\/zippers$/;"	m
pkg_zlists_commit	deps/cowboy/erlang.mk	/^pkg_zlists_commit = master$/;"	m
pkg_zlists_description	deps/cowboy/erlang.mk	/^pkg_zlists_description = Erlang lazy lists library.$/;"	m
pkg_zlists_fetch	deps/cowboy/erlang.mk	/^pkg_zlists_fetch = git$/;"	m
pkg_zlists_homepage	deps/cowboy/erlang.mk	/^pkg_zlists_homepage = https:\/\/github.com\/vjache\/erlang-zlists$/;"	m
pkg_zlists_name	deps/cowboy/erlang.mk	/^pkg_zlists_name = zlists$/;"	m
pkg_zlists_repo	deps/cowboy/erlang.mk	/^pkg_zlists_repo = https:\/\/github.com\/vjache\/erlang-zlists$/;"	m
pkg_zraft_lib_commit	deps/cowboy/erlang.mk	/^pkg_zraft_lib_commit = master$/;"	m
pkg_zraft_lib_description	deps/cowboy/erlang.mk	/^pkg_zraft_lib_description = Erlang raft consensus protocol implementation$/;"	m
pkg_zraft_lib_fetch	deps/cowboy/erlang.mk	/^pkg_zraft_lib_fetch = git$/;"	m
pkg_zraft_lib_homepage	deps/cowboy/erlang.mk	/^pkg_zraft_lib_homepage = https:\/\/github.com\/dreyk\/zraft_lib$/;"	m
pkg_zraft_lib_name	deps/cowboy/erlang.mk	/^pkg_zraft_lib_name = zraft_lib$/;"	m
pkg_zraft_lib_repo	deps/cowboy/erlang.mk	/^pkg_zraft_lib_repo = https:\/\/github.com\/dreyk\/zraft_lib$/;"	m
pkg_zucchini_commit	deps/cowboy/erlang.mk	/^pkg_zucchini_commit = master$/;"	m
pkg_zucchini_description	deps/cowboy/erlang.mk	/^pkg_zucchini_description = An Erlang INI parser$/;"	m
pkg_zucchini_fetch	deps/cowboy/erlang.mk	/^pkg_zucchini_fetch = git$/;"	m
pkg_zucchini_homepage	deps/cowboy/erlang.mk	/^pkg_zucchini_homepage = https:\/\/github.com\/devinus\/zucchini$/;"	m
pkg_zucchini_name	deps/cowboy/erlang.mk	/^pkg_zucchini_name = zucchini$/;"	m
pkg_zucchini_repo	deps/cowboy/erlang.mk	/^pkg_zucchini_repo = https:\/\/github.com\/devinus\/zucchini$/;"	m
plug	deps/plug/lib/plug/builder.ex	/^  defmacro plug(plug, opts \\\\ []) do$/;"	a
plug_builder_call	deps/plug/lib/plug/builder.ex	/^      defp plug_builder_call(unquote(conn), _), do: unquote(body)$/;"	f
plug_server	deps/plug/lib/plug/upload.ex	/^  defp plug_server do$/;"	f
port	deps/cowboy/src/cowboy_req.erl	/^port(Req) ->$/;"	f	module:cowboy_req
post	deps/plug/lib/plug/router.ex	/^  defmacro post(path, options, contents \\\\ []) do$/;"	a
precondition_failed	deps/cowboy/src/cowboy_rest.erl	/^precondition_failed(Req, State) ->$/;"	f	module:cowboy_rest
precondition_is_head_get	deps/cowboy/src/cowboy_rest.erl	/^precondition_is_head_get(Req, State) ->$/;"	f	module:cowboy_rest
precondition_is_head_get	deps/cowboy/src/cowboy_rest.erl	/^precondition_is_head_get(Req, State=#state{method=Method})$/;"	f	module:cowboy_rest
prefix	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro prefix(path) do$/;"	a
present	deps/maru/lib/maru/helpers/response.ex	/^  defmacro present(key, payload, opts) do$/;"	a
present	deps/maru/lib/maru/helpers/response.ex	/^  defmacro present(payload, opts) do$/;"	a
pretty	deps/poison/lib/poison/encoder.ex	/^      defp pretty(options) do$/;"	f
previously_existed	deps/cowboy/src/cowboy_rest.erl	/^previously_existed(Req, State) ->$/;"	f	module:cowboy_rest
prioritize_accept	deps/cowboy/src/cowboy_rest.erl	/^prioritize_accept(Accept) ->$/;"	f	module:cowboy_rest
prioritize_charsets	deps/cowboy/src/cowboy_rest.erl	/^prioritize_charsets(AcceptCharsets) ->$/;"	f	module:cowboy_rest
prioritize_languages	deps/cowboy/src/cowboy_rest.erl	/^prioritize_languages(AcceptLanguages) ->$/;"	f	module:cowboy_rest
prioritize_mediatype	deps/cowboy/src/cowboy_rest.erl	/^prioritize_mediatype({TypeA, SubTypeA, ParamsA}, {TypeB, SubTypeB, ParamsB}) ->$/;"	f	module:cowboy_rest
priv_path	deps/cowboy/src/cowboy_static.erl	/^priv_path(App, Path) ->$/;"	f	module:cowboy_static
process_content_type	deps/cowboy/src/cowboy_rest.erl	/^process_content_type(Req, State=#state{method=Method, exists=Exists}, Fun) ->$/;"	f	module:cowboy_rest
profile_output	deps/ranch/src/ranch_app.erl	/^profile_output() ->$/;"	f	module:ranch_app
project	deps/maru/mix.exs	/^  def project do$/;"	f
project	deps/plug/mix.exs	/^  def project do$/;"	f
project	deps/poison/mix.exs	/^  def project do$/;"	f
project	mix.exs	/^  def project do$/;"	f
proto_verbose	deps/cowboy/erlang.mk	/^proto_verbose = $(proto_verbose_$(V))$/;"	m
proto_verbose_0	deps/cowboy/erlang.mk	/^proto_verbose_0 = @echo " PROTO " $(filter %.proto,$(?F));$/;"	m
prune	deps/plug/lib/plug/conn/query.ex	/^  defp prune([?&|t]), do: t$/;"	f
prune	deps/plug/lib/plug/conn/query.ex	/^  defp prune([]), do: []$/;"	f
put	deps/plug/lib/plug/router.ex	/^  defmacro put(path, options, contents \\\\ []) do$/;"	a
put	deps/plug/lib/plug/session/cookie.ex	/^  def put(conn, _sid, term, opts) do$/;"	f
put	deps/plug/lib/plug/session/ets.ex	/^  def put(_conn, nil, data, table) do$/;"	f
put	deps/plug/lib/plug/session/ets.ex	/^  def put(_conn, sid, data, table) do$/;"	f
put	deps/plug/lib/plug/session/store.ex	/^  defcallback put(Plug.Conn.t, sid, any, Plug.opts) :: cookie$/;"	c
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header(%Conn{query_string: "vsn=" <> _} = conn, qs_cache, _et_cache, _file_info)$/;"	f
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header(conn, _, _, _) do$/;"	f
put_cache_header	deps/plug/lib/plug/static.ex	/^  defp put_cache_header(conn, _qs_cache, et_cache, file_info) when is_binary(et_cache) do$/;"	f
put_cookie	deps/plug/lib/plug/session.ex	/^  defp put_cookie(value, conn, %{cookie_opts: cookie_opts, key: key}),$/;"	f
put_hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp put_hsts_header(conn, _), do: conn$/;"	f
put_hsts_header	deps/plug/lib/plug/ssl.ex	/^  defp put_hsts_header(conn, hsts_header) when is_binary(hsts_header) do$/;"	f
put_new	deps/plug/lib/plug/session/ets.ex	/^  defp put_new(data, table, counter \\\\ 0)$/;"	f
put_present	deps/maru/lib/maru/helpers/response.ex	/^  def put_present(conn, key, payload, opts) do$/;"	f
put_present	deps/maru/lib/maru/helpers/response.ex	/^  def put_present(conn, payload, opts) do$/;"	f
put_private	deps/plug/lib/plug/conn.ex	/^  def put_private(%Conn{private: private} = conn, key, value) when is_atom(key) do$/;"	f
put_req_cookie	deps/plug/lib/plug/test.ex	/^  def put_req_cookie(conn, key, value) when is_binary(key) and is_binary(value) do$/;"	f
put_req_header	deps/plug/lib/plug/conn.ex	/^  def put_req_header(%Conn{req_headers: headers} = conn, key, value) when$/;"	f
put_req_header	deps/plug/lib/plug/conn.ex	/^  def put_req_header(%Conn{state: :sent}, _key, _value) do$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, charset \\\\ "utf-8")$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, charset) when$/;"	f
put_resp_content_type	deps/plug/lib/plug/conn.ex	/^  def put_resp_content_type(conn, content_type, nil) when is_binary(content_type) do$/;"	f
put_resp_cookie	deps/plug/lib/plug/conn.ex	/^  def put_resp_cookie(%Conn{resp_cookies: resp_cookies, scheme: scheme} = conn, key, value, opts \\\\ []) when$/;"	f
put_resp_header	deps/plug/lib/plug/conn.ex	/^  def put_resp_header(%Conn{resp_headers: headers} = conn, key, value) when$/;"	f
put_resp_header	deps/plug/lib/plug/conn.ex	/^  def put_resp_header(%Conn{state: :sent}, _key, _value) do$/;"	f
put_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^      def put_secret_key_base(conn, _) do$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  def put_session(%Conn{state: state}, _key, _value) when not state in @unsent,$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  def put_session(conn, key, value) do$/;"	f
put_session	deps/plug/lib/plug/conn.ex	/^  defp put_session(conn, fun) do$/;"	f
put_session	deps/plug/lib/plug/session.ex	/^  defp put_session(sid, conn, %{store: store, store_config: store_config}),$/;"	f
put_ssl_file	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp put_ssl_file(cowboy_options, key, value) do$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{state: :sent}, _status),$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{} = conn, nil),$/;"	f
put_status	deps/plug/lib/plug/conn.ex	/^  def put_status(%Conn{} = conn, status),$/;"	f
qparam	deps/cowboy/src/cowboy_http.erl	/^qparam(<< Q, $=, Data\/binary >>, Fun) when Q =:= $q; Q =:= $Q ->$/;"	f	module:cowboy_http
qs	deps/cowboy/src/cowboy_req.erl	/^qs(Req) ->$/;"	f	module:cowboy_req
qs	deps/cowlib/src/cow_qs.erl	/^qs(L) ->$/;"	f	module:cow_qs
qs	deps/cowlib/src/cow_qs.erl	/^qs([]) ->$/;"	f	module:cow_qs
qs	deps/cowlib/src/cow_qs.erl	/^qs([], Acc) ->$/;"	f	module:cow_qs
qs	deps/cowlib/src/cow_qs.erl	/^qs([{Name, Value}|Tail], Acc) ->$/;"	f	module:cow_qs
qs	deps/cowlib/src/cow_qs.erl	/^qs([{Name, true}|Tail], Acc) ->$/;"	f	module:cow_qs
qs	deps/plug/lib/plug/ssl.ex	/^  defp qs(""), do: ""$/;"	f
qs	deps/plug/lib/plug/ssl.ex	/^  defp qs(qs), do: "?" <> qs$/;"	f
qs_identity_test_	deps/cowlib/src/cow_qs.erl	/^qs_identity_test_() ->$/;"	f	module:cow_qs
qs_test_	deps/cowlib/src/cow_qs.erl	/^qs_test_() ->$/;"	f	module:cow_qs
qs_val	deps/cowboy/src/cowboy_req.erl	/^qs_val(Name, Req) when is_binary(Name) ->$/;"	f	module:cowboy_req
qs_val	deps/cowboy/src/cowboy_req.erl	/^qs_val(Name, Req, Default) ->$/;"	f	module:cowboy_req
qs_val	deps/cowboy/src/cowboy_req.erl	/^qs_val(Name, Req=#http_req{qs=RawQs, qs_vals=undefined}, Default)$/;"	f	module:cowboy_req
qs_vals	deps/cowboy/src/cowboy_req.erl	/^qs_vals(Req=#http_req{qs=RawQs, qs_vals=undefined}) ->$/;"	f	module:cowboy_req
qs_vals	deps/cowboy/src/cowboy_req.erl	/^qs_vals(Req=#http_req{qs_vals=QsVals}) ->$/;"	f	module:cowboy_req
quote_if_buffer	deps/plug/lib/plug/router/utils.ex	/^  defp quote_if_buffer(identifier, "", context, _fun) do$/;"	f
quote_if_buffer	deps/plug/lib/plug/router/utils.ex	/^  defp quote_if_buffer(identifier, _buffer, context, fun) do$/;"	f
quote_plug	deps/plug/lib/plug/builder.ex	/^  defp quote_plug({plug_type, plug, opts, guards}, acc, env, builder_opts) do$/;"	f
quote_plug_call	deps/plug/lib/plug/builder.ex	/^  defp quote_plug_call(:function, plug, opts) do$/;"	f
quote_plug_call	deps/plug/lib/plug/builder.ex	/^  defp quote_plug_call(:module, plug, opts) do$/;"	f
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(<< $", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(<< $", Rest\/binary >>, Fun, Acc) ->$/;"	f	module:cowboy_http
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(<< $\\\\, C, Rest\/binary >>, Fun, Acc) ->$/;"	f	module:cowboy_http
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(<< C, Rest\/binary >>, Fun, Acc) ->$/;"	f	module:cowboy_http
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(<<>>, _Fun, _Acc) ->$/;"	f	module:cowboy_http
quoted_string	deps/cowboy/src/cowboy_http.erl	/^quoted_string(_, _Fun) ->$/;"	f	module:cowboy_http
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<>>, _acc),$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<?", t :: binary>>, acc),$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<?\\\\, h, t :: binary>>, acc),$/;"	f
quoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp quoted_token(<<h, t :: binary>>, acc),$/;"	f
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $., Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $0, $., Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $0, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $1, $., $0, $0, $0, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $1, $., $0, $0, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $1, $., $0, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< $1, Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(<< C, Rest\/binary >>, Fun, Q, M)$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(Data, Fun, Q, 0) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(Data, Fun, Q, _M) ->$/;"	f	module:cowboy_http
qvalue	deps/cowboy/src/cowboy_http.erl	/^qvalue(_Data, _Fun) ->$/;"	f	module:cowboy_http
raise_missing_parsers	deps/plug/lib/plug/parsers.ex	/^  defp raise_missing_parsers do$/;"	f
ranch	deps/ranch/src/ranch.erl	/^-module(ranch).$/;"	m
ranch_acceptor	deps/ranch/src/ranch_acceptor.erl	/^-module(ranch_acceptor).$/;"	m
ranch_acceptors_sup	deps/ranch/src/ranch_acceptors_sup.erl	/^-module(ranch_acceptors_sup).$/;"	m
ranch_app	deps/ranch/src/ranch_app.erl	/^-module(ranch_app).$/;"	m
ranch_conns_sup	deps/ranch/src/ranch_conns_sup.erl	/^-module(ranch_conns_sup).$/;"	m
ranch_listener_sup	deps/ranch/src/ranch_listener_sup.erl	/^-module(ranch_listener_sup).$/;"	m
ranch_protocol	deps/ranch/src/ranch_protocol.erl	/^-module(ranch_protocol).$/;"	m
ranch_server	deps/ranch/src/ranch_server.erl	/^-module(ranch_server).$/;"	m
ranch_ssl	deps/ranch/src/ranch_ssl.erl	/^-module(ranch_ssl).$/;"	m
ranch_sup	deps/ranch/src/ranch_sup.erl	/^-module(ranch_sup).$/;"	m
ranch_tcp	deps/ranch/src/ranch_tcp.erl	/^-module(ranch_tcp).$/;"	m
ranch_transport	deps/ranch/src/ranch_transport.erl	/^-module(ranch_transport).$/;"	m
random_file	deps/plug/lib/plug/upload.ex	/^  def random_file(prefix) do$/;"	f
random_file!	deps/plug/lib/plug/upload.ex	/^  def random_file!(prefix) do$/;"	f
range	deps/cowboy/src/cowboy_http.erl	/^range(Data) ->$/;"	f	module:cowboy_http
range	deps/cowboy/src/cowboy_http.erl	/^range(Data, Token) ->$/;"	f	module:cowboy_http
range_beginning	deps/cowboy/src/cowboy_http.erl	/^range_beginning(Data, Fun) ->$/;"	f	module:cowboy_http
range_digits	deps/cowboy/src/cowboy_http.erl	/^range_digits(Data, Default, Fun) ->$/;"	f	module:cowboy_http
range_digits	deps/cowboy/src/cowboy_http.erl	/^range_digits(Data, Fun) ->$/;"	f	module:cowboy_http
range_ending	deps/cowboy/src/cowboy_http.erl	/^range_ending(Data, Fun, RangeBeginning) ->$/;"	f	module:cowboy_http
read_body	deps/plug/lib/plug/conn.ex	/^  def read_body(%Conn{adapter: {adapter, state}} = conn, opts \\\\ []) do$/;"	f
read_req_body	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def read_req_body(req, opts \\\\ []) do$/;"	f
read_req_body	deps/plug/lib/plug/adapters/test/conn.ex	/^  def read_req_body(%{req_body: body} = state, opts \\\\ []) do$/;"	f
read_req_body	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback read_req_body(payload, options :: Keyword.t) ::$/;"	c
read_size	deps/ranch/src/ranch_transport.erl	/^read_size(0, _Sent, ChunkSize) ->$/;"	f	module:ranch_transport
read_size	deps/ranch/src/ranch_transport.erl	/^read_size(Bytes, Sent, ChunkSize) ->$/;"	f	module:ranch_transport
receive_resp	deps/plug/lib/plug/test.ex	/^  defp receive_resp(ref) do$/;"	f
recv	deps/cowboy/src/cowboy_protocol.erl	/^recv(Socket, Transport, Until) ->$/;"	f	module:cowboy_protocol
recv	deps/cowboy/src/cowboy_protocol.erl	/^recv(Socket, Transport, infinity) ->$/;"	f	module:cowboy_protocol
recv	deps/cowboy/src/cowboy_spdy.erl	/^recv(Socket = {Pid, _}, Length, Timeout) ->$/;"	f	module:cowboy_spdy
recv	deps/ranch/src/ranch_ssl.erl	/^recv(Socket, Length, Timeout) ->$/;"	f	module:ranch_ssl
recv	deps/ranch/src/ranch_tcp.erl	/^recv(Socket, Length, Timeout) ->$/;"	f	module:ranch_tcp
recycle_cookies	deps/plug/lib/plug/test.ex	/^  def recycle_cookies(new_conn, old_conn) do$/;"	f
redirect	deps/maru/lib/maru/helpers/response.ex	/^  defmacro redirect(url) do$/;"	a
redirect	deps/maru/lib/maru/helpers/response.ex	/^  defmacro redirect(url, permanent: true) do$/;"	a
redirect_to_https	deps/plug/lib/plug/ssl.ex	/^  defp redirect_to_https(%Conn{host: host} = conn, custom_host) do$/;"	f
reduce	deps/plug/lib/plug/parsers.ex	/^  defp reduce(conn, [], type, subtype, _headers, opts) do$/;"	f
reduce	deps/plug/lib/plug/parsers.ex	/^  defp reduce(conn, [h|t], type, subtype, headers, opts) do$/;"	f
register_before_send	deps/plug/lib/plug/conn.ex	/^  def register_before_send(%Conn{before_send: before_send} = conn, callback)$/;"	f
register_before_send	deps/plug/lib/plug/conn.ex	/^  def register_before_send(%Conn{state: state}, _callback)$/;"	f
regular_file_info	deps/plug/lib/plug/static.ex	/^  defp regular_file_info(path) do$/;"	f
relx_fetch	deps/ranch/erlang.mk	/^define relx_fetch$/;"	m
remove_connection	deps/ranch/src/ranch.erl	/^remove_connection(Ref) ->$/;"	f	module:ranch
render	deps/plug/lib/plug/debugger.ex	/^  def render(conn, kind, reason, stack, opts) do$/;"	f
render_template	deps/cowboy/erlang.mk	/^define render_template$/;"	m
replace_child	deps/cowboy/src/cowboy_spdy.erl	/^replace_child(Child=#child{streamid=StreamID},$/;"	f	module:cowboy_spdy
reply	deps/cowboy/src/cowboy_req.erl	/^reply(Status, Headers, Body, Req=#http_req{$/;"	f	module:cowboy_req
reply	deps/cowboy/src/cowboy_req.erl	/^reply(Status, Headers, Req=#http_req{resp_body=Body}) ->$/;"	f	module:cowboy_req
reply	deps/cowboy/src/cowboy_req.erl	/^reply(Status, Req=#http_req{resp_body=Body}) ->$/;"	f	module:cowboy_req
reply	deps/cowboy/src/cowboy_spdy.erl	/^reply(Socket = {Pid, _}, Status, Headers, Body) ->$/;"	f	module:cowboy_spdy
reply_may_compress	deps/cowboy/src/cowboy_req.erl	/^reply_may_compress(Status, Headers, Body, Req,$/;"	f	module:cowboy_req
reply_no_compress	deps/cowboy/src/cowboy_req.erl	/^reply_no_compress(Status, Headers, Body, Req,$/;"	f	module:cowboy_req
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(Ref, Protocol, Pid, Reason) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, normal) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, shutdown) ->$/;"	f	module:ranch_conns_sup
report_error	deps/ranch/src/ranch_conns_sup.erl	/^report_error(_, _, _, {shutdown, _}) ->$/;"	f	module:ranch_conns_sup
request	deps/cowboy/src/cowboy_protocol.erl	/^request(B, State=#state{transport=Transport}, M, P, Q, Version, Headers) ->$/;"	f	module:cowboy_protocol
request	deps/cowboy/src/cowboy_protocol.erl	/^request(Buffer, State=#state{socket=Socket, transport=Transport,$/;"	f	module:cowboy_protocol
request	deps/cowlib/src/cow_http.erl	/^request(Method, Path, Version, Headers) ->$/;"	f	module:cow_http
request_info	deps/plug/lib/plug/adapters/translator.ex	/^  defp request_info(%Plug.Conn{method: method, query_string: query_string} = conn) do$/;"	f
request_init	deps/cowboy/src/cowboy_spdy.erl	/^request_init(FakeSocket, Peer, OnRequest, OnResponse,$/;"	f	module:cowboy_spdy
require	deps/ranch/src/ranch.erl	/^require([App|Tail]) ->$/;"	f	module:ranch
require	deps/ranch/src/ranch.erl	/^require([]) ->$/;"	f	module:ranch
requires	deps/maru/lib/maru/builder/params.ex	/^  defmacro requires(attr_name) do$/;"	a
requires	deps/maru/lib/maru/builder/params.ex	/^  defmacro requires(attr_name, [do: block]) do$/;"	a
requires	deps/maru/lib/maru/builder/params.ex	/^  defmacro requires(attr_name, options) do$/;"	a
requires	deps/maru/lib/maru/builder/params.ex	/^  defmacro requires(attr_name, options, [do: block]) do$/;"	a
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(_conn, :error, %__MODULE__{stack: stack} = reason) do$/;"	f
reraise	deps/plug/lib/plug/conn/wrapper_error.ex	/^  def reraise(conn, kind, reason) do$/;"	f
rescue_from	deps/maru/lib/maru/builder/exceptions.ex	/^  defmacro rescue_from(:all, [as: error_var], [do: block]) do$/;"	a
rescue_from	deps/maru/lib/maru/builder/exceptions.ex	/^  defmacro rescue_from(:all, [do: block]) do$/;"	a
rescue_from	deps/maru/lib/maru/builder/exceptions.ex	/^  defmacro rescue_from(error, [as: error_var], [do: block]) do$/;"	a
rescue_from	deps/maru/lib/maru/builder/exceptions.ex	/^  defmacro rescue_from(error, [do: block]) do$/;"	a
resource_exists	deps/cowboy/src/cowboy_rest.erl	/^resource_exists(Req, State) ->$/;"	f	module:cowboy_rest
resource_exists	deps/cowboy/src/cowboy_static.erl	/^resource_exists(Req, State) ->$/;"	f	module:cowboy_static
resource_exists	deps/cowboy/src/cowboy_static.erl	/^resource_exists(Req, State={_, {ok, #file_info{type=regular}}, _}) ->$/;"	f	module:cowboy_static
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{state: state}, status, _body)$/;"	f
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{} = conn, status, body)$/;"	f
resp	deps/plug/lib/plug/conn.ex	/^  def resp(%Conn{}, _status, nil) do$/;"	f
resp_body	deps/maru/lib/maru/response.ex	/^  def resp_body(resp) do$/;"	f
resp_body	deps/maru/lib/maru/response.ex	/^  def resp_body(resp)$/;"	f
respond	deps/cowboy/src/cowboy_rest.erl	/^respond(Req, State, StatusCode) ->$/;"	f	module:cowboy_rest
response	deps/cowboy/src/cowboy_req.erl	/^response(Status, Headers, RespHeaders, DefaultHeaders, Body, Req=#http_req{$/;"	f	module:cowboy_req
response_connection	deps/cowboy/src/cowboy_req.erl	/^response_connection([], Connection) ->$/;"	f	module:cowboy_req
response_connection	deps/cowboy/src/cowboy_req.erl	/^response_connection([{Name, Value}|Tail], Connection) ->$/;"	f	module:cowboy_req
response_merge_headers	deps/cowboy/src/cowboy_req.erl	/^response_merge_headers(Headers, RespHeaders, DefaultHeaders) ->$/;"	f	module:cowboy_req
rest_init	deps/cowboy/src/cowboy_static.erl	/^rest_init(Req, Opts) ->$/;"	f	module:cowboy_static
rest_init	deps/cowboy/src/cowboy_static.erl	/^rest_init(Req, {Name, App, Path})$/;"	f	module:cowboy_static
rest_init	deps/cowboy/src/cowboy_static.erl	/^rest_init(Req, {Name, Path}) ->$/;"	f	module:cowboy_static
rest_init_dir	deps/cowboy/src/cowboy_static.erl	/^rest_init_dir(Req, Path, Extra) ->$/;"	f	module:cowboy_static
rest_init_dir	deps/cowboy/src/cowboy_static.erl	/^rest_init_dir(Req, Path, Extra) when is_list(Path) ->$/;"	f	module:cowboy_static
rest_init_info	deps/cowboy/src/cowboy_static.erl	/^rest_init_info(Req, Path, Extra) ->$/;"	f	module:cowboy_static
rest_init_opts	deps/cowboy/src/cowboy_static.erl	/^rest_init_opts(Req, {dir, Path, Extra}) ->$/;"	f	module:cowboy_static
rest_init_opts	deps/cowboy/src/cowboy_static.erl	/^rest_init_opts(Req, {file, Path, Extra}) ->$/;"	f	module:cowboy_static
rest_init_opts	deps/cowboy/src/cowboy_static.erl	/^rest_init_opts(Req, {priv_dir, App, Path, Extra}) ->$/;"	f	module:cowboy_static
rest_init_opts	deps/cowboy/src/cowboy_static.erl	/^rest_init_opts(Req, {priv_file, App, Path, Extra}) ->$/;"	f	module:cowboy_static
rest_terminate	deps/cowboy/src/cowboy_rest.erl	/^rest_terminate(Req, #state{handler=Handler, handler_state=HandlerState}) ->$/;"	f	module:cowboy_rest
resume	deps/cowboy/src/cowboy_protocol.erl	/^resume(State, Env, Tail, Module, Function, Args) ->$/;"	f	module:cowboy_protocol
resume	deps/cowboy/src/cowboy_spdy.erl	/^resume(Env, Tail, Module, Function, Args) ->$/;"	f	module:cowboy_spdy
rewrite_on	deps/plug/lib/plug/ssl.ex	/^  defp rewrite_on(conn, rewrites) do$/;"	f
rfc1123	deps/cowboy/src/cowboy_clock.erl	/^rfc1123() ->$/;"	f	module:cowboy_clock
rfc1123	deps/cowboy/src/cowboy_clock.erl	/^rfc1123(DateTime) ->$/;"	f	module:cowboy_clock
rfc1123_date	deps/cowboy/src/cowboy_http.erl	/^rfc1123_date(Data) ->$/;"	f	module:cowboy_http
rfc1123_date_test_	deps/cowboy/src/cowboy_http.erl	/^rfc1123_date_test_() ->$/;"	f	module:cowboy_http
rfc2109	deps/cowlib/src/cow_date.erl	/^rfc2109({Date = {Y, Mo, D}, {H, Mi, S}}) ->$/;"	f	module:cow_date
rfc2109_test_	deps/cowlib/src/cow_date.erl	/^rfc2109_test_() ->$/;"	f	module:cow_date
rfc2822	deps/plug/lib/plug/conn/cookies.ex	/^  defp rfc2822({{year, month, day} = date, {hour, minute, second}}) do$/;"	f
rfc850_date	deps/cowboy/src/cowboy_http.erl	/^rfc850_date(Data) ->$/;"	f	module:cowboy_http
rfc850_date_test_	deps/cowboy/src/cowboy_http.erl	/^rfc850_date_test_() ->$/;"	f	module:cowboy_http
rotate_mask_key	deps/cowboy/src/cowboy_websocket.erl	/^rotate_mask_key(MaskKey, UnmaskedLen) ->$/;"	f	module:cowboy_websocket
route_param	deps/maru/lib/maru/builder/namespaces.ex	/^  defmacro route_param(param, [do: block]) do$/;"	a
rst_stream	deps/cowboy/src/cowboy_spdy.erl	/^rst_stream(#state{socket=Socket, transport=Transport}, StreamID, Status) ->$/;"	f	module:cowboy_spdy
rst_stream	deps/cowlib/src/cow_spdy.erl	/^rst_stream(StreamID, Status) ->$/;"	f	module:cow_spdy
run	deps/maru/lib/mix/tasks/routers.ex	/^  def run(_) do$/;"	f
run	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp run(scheme, plug, opts, cowboy_options) do$/;"	f
run_before_send	deps/plug/lib/plug/conn.ex	/^  defp run_before_send(%Conn{before_send: before_send} = conn, new) do$/;"	f
scheme	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp scheme(:ssl), do: :https$/;"	f
scheme	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp scheme(:tcp), do: :http$/;"	f
secure	deps/ranch/src/ranch_ssl.erl	/^secure() ->$/;"	f	module:ranch_ssl
secure	deps/ranch/src/ranch_tcp.erl	/^secure() ->$/;"	f	module:ranch_tcp
secure_compare	deps/plug/lib/plug/crypto.ex	/^  def secure_compare(left, right) do$/;"	f
secure_compare	deps/plug/lib/plug/crypto.ex	/^  defp secure_compare(<<>>, <<>>, acc) do$/;"	f
secure_compare	deps/plug/lib/plug/crypto.ex	/^  defp secure_compare(<<x, left :: binary>>, <<y, right :: binary>>, acc) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match("*" <> argument, buffer, context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(":" <> argument, buffer, context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(<<>>, buffer, _context) do$/;"	f
segment_match	deps/plug/lib/plug/router/utils.ex	/^  defp segment_match(<<h, t::binary>>, buffer, context) do$/;"	f
send	deps/cowboy/src/cowboy_spdy.erl	/^send(Socket, Data) ->$/;"	f	module:cowboy_spdy
send	deps/ranch/src/ranch_ssl.erl	/^send(Socket, Packet) ->$/;"	f	module:ranch_ssl
send	deps/ranch/src/ranch_tcp.erl	/^send(Socket, Packet) ->$/;"	f	module:ranch_tcp
send_chunked	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def send_chunked(req, status, headers) do$/;"	f
send_chunked	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_chunked(state, _status, _headers),$/;"	f
send_chunked	deps/plug/lib/plug/conn.ex	/^  def send_chunked(%Conn{adapter: {adapter, payload}, owner: owner} = conn, status) do$/;"	f
send_chunked	deps/plug/lib/plug/conn.ex	/^  def send_chunked(%Conn{state: state}, status)$/;"	f
send_chunked	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback send_chunked(payload, Conn.status, Conn.headers) ::$/;"	c
send_file	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def send_file(req, status, headers, path, offset, length) do$/;"	f
send_file	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_file(%{method: "HEAD"} = state, status, headers, _path, _offset, _length) do$/;"	f
send_file	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_file(state, status, headers, path, offset, length) do$/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file(%Conn{adapter: {adapter, payload}, owner: owner} = conn, status, file, offset, length)$/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file(%Conn{state: state}, status, _file, _offset, _length)$/;"	f
send_file	deps/plug/lib/plug/conn.ex	/^  def send_file(conn, status, file, offset \\\\ 0, length  \\\\ :all)$/;"	f
send_file	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback send_file(payload, Conn.status, Conn.headers, file :: binary,$/;"	c
send_resp	deps/maru/lib/maru/router/endpoint.ex	/^  def send_resp(_, %Plug.Conn{private: %{maru_present: present}}=conn) do$/;"	f
send_resp	deps/maru/lib/maru/router/endpoint.ex	/^  def send_resp(_, %Plug.Conn{}=conn) do$/;"	f
send_resp	deps/maru/lib/maru/router/endpoint.ex	/^  def send_resp(conn, resp) do$/;"	f
send_resp	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  def send_resp(req, status, headers, body) do$/;"	f
send_resp	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_resp(%{method: "HEAD"} = state, status, headers, _body) do$/;"	f
send_resp	deps/plug/lib/plug/adapters/test/conn.ex	/^  def send_resp(state, status, headers, body) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{adapter: {adapter, payload}, state: :set, owner: owner} = conn) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{state: :unset}) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{} = conn, status, body) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(%Conn{}) do$/;"	f
send_resp	deps/plug/lib/plug/conn.ex	/^  def send_resp(conn)$/;"	f
send_resp	deps/plug/lib/plug/conn/adapter.ex	/^  defcallback send_resp(payload, Conn.status, Conn.headers, Conn.body) ::$/;"	c
sendfile	deps/cowboy/src/cowboy_spdy.erl	/^sendfile(Socket = {Pid, _}, Filepath) ->$/;"	f	module:cowboy_spdy
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, File, Offset, Bytes) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, File, Offset, Bytes, Opts) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_ssl.erl	/^sendfile(Socket, Filename) ->$/;"	f	module:ranch_ssl
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, File, Offset, Bytes) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, Filename) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, Filename, Offset, Bytes, Opts)$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_tcp.erl	/^sendfile(Socket, RawFile, Offset, Bytes, Opts) ->$/;"	f	module:ranch_tcp
sendfile	deps/ranch/src/ranch_transport.erl	/^sendfile(Transport, Socket, Filename, Offset, Bytes, Opts)$/;"	f	module:ranch_transport
sendfile	deps/ranch/src/ranch_transport.erl	/^sendfile(Transport, Socket, RawFile, Offset, Bytes, Opts) ->$/;"	f	module:ranch_transport
sendfile_loop	deps/ranch/src/ranch_transport.erl	/^sendfile_loop(Transport, Socket, RawFile, Bytes, Sent, ChunkSize) ->$/;"	f	module:ranch_transport
sendfile_loop	deps/ranch/src/ranch_transport.erl	/^sendfile_loop(_Transport, _Socket, _RawFile, Sent, Sent, _ChunkSize)$/;"	f	module:ranch_transport
sent_resp	deps/plug/lib/plug/test.ex	/^  def sent_resp(%Conn{adapter: {Plug.Adapters.Test.Conn, %{ref: ref}}}) do$/;"	f
seq	deps/poison/lib/poison/encoder.ex	/^  defp seq(char) do$/;"	f
serve_static	deps/plug/lib/plug/static.ex	/^  defp serve_static({:error, conn}, _segments, _gzip, _qs_cache, _et_cache, _headers) do$/;"	f
serve_static	deps/plug/lib/plug/static.ex	/^  defp serve_static({:ok, conn, file_info, path}, segments, gzip, qs_cache, et_cache, headers) do$/;"	f
server_config	deps/maru/lib/maru/config.ex	/^  def server_config(module) do$/;"	f
server_info	deps/plug/lib/plug/adapters/translator.ex	/^  defp server_info(%Plug.Conn{host: host, port: port, scheme: scheme}) do$/;"	f
servers	deps/maru/lib/maru/config.ex	/^  def servers do$/;"	f
service_available	deps/cowboy/src/cowboy_rest.erl	/^service_available(Req, State) ->$/;"	f	module:cowboy_rest
session_key	deps/plug/lib/plug/conn.ex	/^  defp session_key(atom) when is_atom(atom), do: Atom.to_string(atom)$/;"	f
session_key	deps/plug/lib/plug/conn.ex	/^  defp session_key(binary) when is_binary(binary), do: binary$/;"	f
set	deps/cowboy/src/cowboy_req.erl	/^set([], Req) -> Req;$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{bindings, Val}|Tail], Req) -> set(Tail, Req#http_req{bindings=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{body_state, Val}|Tail], Req) -> set(Tail, Req#http_req{body_state=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{buffer, Val}|Tail], Req) -> set(Tail, Req#http_req{buffer=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{connection, Val}|Tail], Req) -> set(Tail, Req#http_req{connection=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{cookies, Val}|Tail], Req) -> set(Tail, Req#http_req{cookies=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{headers, Val}|Tail], Req) -> set(Tail, Req#http_req{headers=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{host, Val}|Tail], Req) -> set(Tail, Req#http_req{host=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{host_info, Val}|Tail], Req) -> set(Tail, Req#http_req{host_info=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{meta, Val}|Tail], Req) -> set(Tail, Req#http_req{meta=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{method, Val}|Tail], Req) -> set(Tail, Req#http_req{method=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{multipart, Val}|Tail], Req) -> set(Tail, Req#http_req{multipart=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{onresponse, Val}|Tail], Req) -> set(Tail, Req#http_req{onresponse=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{p_headers, Val}|Tail], Req) -> set(Tail, Req#http_req{p_headers=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{path, Val}|Tail], Req) -> set(Tail, Req#http_req{path=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{path_info, Val}|Tail], Req) -> set(Tail, Req#http_req{path_info=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{peer, Val}|Tail], Req) -> set(Tail, Req#http_req{peer=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{pid, Val}|Tail], Req) -> set(Tail, Req#http_req{pid=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{port, Val}|Tail], Req) -> set(Tail, Req#http_req{port=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{qs, Val}|Tail], Req) -> set(Tail, Req#http_req{qs=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{qs_vals, Val}|Tail], Req) -> set(Tail, Req#http_req{qs_vals=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{resp_body, Val}|Tail], Req) -> set(Tail, Req#http_req{resp_body=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{resp_headers, Val}|Tail], Req) -> set(Tail, Req#http_req{resp_headers=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{resp_state, Val}|Tail], Req) -> set(Tail, Req#http_req{resp_state=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{socket, Val}|Tail], Req) -> set(Tail, Req#http_req{socket=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{transport, Val}|Tail], Req) -> set(Tail, Req#http_req{transport=Val});$/;"	f	module:cowboy_req
set	deps/cowboy/src/cowboy_req.erl	/^set([{version, Val}|Tail], Req) -> set(Tail, Req#http_req{version=Val}).$/;"	f	module:cowboy_req
set_bindings	deps/cowboy/src/cowboy_req.erl	/^set_bindings(HostInfo, PathInfo, Bindings, Req) ->$/;"	f	module:cowboy_req
set_connections_sup	deps/ranch/src/ranch_server.erl	/^set_connections_sup(Ref, Pid) ->$/;"	f	module:ranch_server
set_content_type	deps/cowboy/src/cowboy_rest.erl	/^set_content_type(Req, State=#state{$/;"	f	module:cowboy_rest
set_content_type_build_params	deps/cowboy/src/cowboy_rest.erl	/^set_content_type_build_params('*', []) ->$/;"	f	module:cowboy_rest
set_content_type_build_params	deps/cowboy/src/cowboy_rest.erl	/^set_content_type_build_params([], Acc) ->$/;"	f	module:cowboy_rest
set_content_type_build_params	deps/cowboy/src/cowboy_rest.erl	/^set_content_type_build_params([], []) ->$/;"	f	module:cowboy_rest
set_content_type_build_params	deps/cowboy/src/cowboy_rest.erl	/^set_content_type_build_params([{Attr, Value}|Tail], Acc) ->$/;"	f	module:cowboy_rest
set_env	deps/cowboy/src/cowboy.erl	/^set_env(Ref, Name, Value) ->$/;"	f	module:cowboy
set_language	deps/cowboy/src/cowboy_rest.erl	/^set_language(Req, State=#state{language_a=Language}) ->$/;"	f	module:cowboy_rest
set_max_connections	deps/ranch/src/ranch.erl	/^set_max_connections(Ref, MaxConnections) ->$/;"	f	module:ranch
set_max_connections	deps/ranch/src/ranch_server.erl	/^set_max_connections(Ref, MaxConnections) ->$/;"	f	module:ranch_server
set_meta	deps/cowboy/src/cowboy_req.erl	/^set_meta(Name, Value, Req=#http_req{meta=Meta}) ->$/;"	f	module:cowboy_req
set_new_listener_opts	deps/ranch/src/ranch_server.erl	/^set_new_listener_opts(Ref, MaxConns, Opts) ->$/;"	f	module:ranch_server
set_option_default	deps/ranch/src/ranch.erl	/^set_option_default(Opts, Key, Value) ->$/;"	f	module:ranch
set_port	deps/ranch/src/ranch_server.erl	/^set_port(Ref, Port) ->$/;"	f	module:ranch_server
set_protocol_options	deps/ranch/src/ranch.erl	/^set_protocol_options(Ref, Opts) ->$/;"	f	module:ranch
set_protocol_options	deps/ranch/src/ranch_server.erl	/^set_protocol_options(Ref, ProtoOpts) ->$/;"	f	module:ranch_server
set_request_id	deps/plug/lib/plug/request_id.ex	/^  defp set_request_id({conn, request_id}, header) do$/;"	f
set_resp_body	deps/cowboy/src/cowboy_req.erl	/^set_resp_body(Body, Req) ->$/;"	f	module:cowboy_req
set_resp_body	deps/cowboy/src/cowboy_rest.erl	/^set_resp_body(Req, State=#state{content_type_a={_, Callback}}) ->$/;"	f	module:cowboy_rest
set_resp_body_etag	deps/cowboy/src/cowboy_rest.erl	/^set_resp_body_etag(Req, State) ->$/;"	f	module:cowboy_rest
set_resp_body_expires	deps/cowboy/src/cowboy_rest.erl	/^set_resp_body_expires(Req, State) ->$/;"	f	module:cowboy_rest
set_resp_body_fun	deps/cowboy/src/cowboy_req.erl	/^set_resp_body_fun(StreamFun, Req) when is_function(StreamFun) ->$/;"	f	module:cowboy_req
set_resp_body_fun	deps/cowboy/src/cowboy_req.erl	/^set_resp_body_fun(StreamLen, StreamFun, Req)$/;"	f	module:cowboy_req
set_resp_body_fun	deps/cowboy/src/cowboy_req.erl	/^set_resp_body_fun(chunked, StreamFun, Req)$/;"	f	module:cowboy_req
set_resp_body_last_modified	deps/cowboy/src/cowboy_rest.erl	/^set_resp_body_last_modified(Req, State) ->$/;"	f	module:cowboy_rest
set_resp_cookie	deps/cowboy/src/cowboy_req.erl	/^set_resp_cookie(Name, Value, Opts, Req) ->$/;"	f	module:cowboy_req
set_resp_etag	deps/cowboy/src/cowboy_rest.erl	/^set_resp_etag(Req, State) ->$/;"	f	module:cowboy_rest
set_resp_expires	deps/cowboy/src/cowboy_rest.erl	/^set_resp_expires(Req, State) ->$/;"	f	module:cowboy_rest
set_resp_header	deps/cowboy/src/cowboy_req.erl	/^set_resp_header(Name, Value, Req=#http_req{resp_headers=RespHeaders}) ->$/;"	f	module:cowboy_req
setcookie	deps/cowlib/src/cow_cookie.erl	/^setcookie(Name, Value, Opts) ->$/;"	f	module:cow_cookie
setcookie_failures_test_	deps/cowlib/src/cow_cookie.erl	/^setcookie_failures_test_() ->$/;"	f	module:cow_cookie
setcookie_max_age_test	deps/cowlib/src/cow_cookie.erl	/^setcookie_max_age_test() ->$/;"	f	module:cow_cookie
setcookie_test_	deps/cowlib/src/cow_cookie.erl	/^setcookie_test_() ->$/;"	f	module:cow_cookie
setopts	deps/cowboy/src/cowboy_spdy.erl	/^setopts(Socket = {Pid, _}, [{active, false}]) ->$/;"	f	module:cowboy_spdy
setopts	deps/cowboy/src/cowboy_spdy.erl	/^setopts(Socket = {Pid, _}, [{active, once}]) ->$/;"	f	module:cowboy_spdy
setopts	deps/ranch/src/ranch_ssl.erl	/^setopts(Socket, Opts) ->$/;"	f	module:ranch_ssl
setopts	deps/ranch/src/ranch_tcp.erl	/^setopts(Socket, Opts) ->$/;"	f	module:ranch_tcp
shutdown	deps/plug/lib/plug/adapters/cowboy.ex	/^  def shutdown(ref) do$/;"	f
shutdown	deps/ranch/src/ranch_ssl.erl	/^shutdown(Socket, How) ->$/;"	f	module:ranch_ssl
shutdown	deps/ranch/src/ranch_tcp.erl	/^shutdown(Socket, How) ->$/;"	f	module:ranch_tcp
shutdown_children	deps/ranch/src/ranch_conns_sup.erl	/^shutdown_children() ->$/;"	f	module:ranch_conns_sup
sign	deps/plug/lib/plug/crypto/message_verifier.ex	/^  def sign(binary, secret) when is_binary(binary) and is_binary(secret) do$/;"	f
skip_cookie	deps/cowlib/src/cow_cookie.erl	/^skip_cookie(<< $,, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
skip_cookie	deps/cowlib/src/cow_cookie.erl	/^skip_cookie(<< $;, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
skip_cookie	deps/cowlib/src/cow_cookie.erl	/^skip_cookie(<< _, Rest\/binary >>, Acc) ->$/;"	f	module:cow_cookie
skip_cookie	deps/cowlib/src/cow_cookie.erl	/^skip_cookie(<<>>, Acc) ->$/;"	f	module:cow_cookie
skip_csrf_protection?	deps/plug/lib/plug/csrf_protection.ex	/^  defp skip_csrf_protection?(%Plug.Conn{private: %{plug_skip_csrf_protection: true}}), do: true$/;"	f
skip_csrf_protection?	deps/plug/lib/plug/csrf_protection.ex	/^  defp skip_csrf_protection?(%Plug.Conn{}), do: false$/;"	f
skip_preamble	deps/cowlib/src/cow_multipart.erl	/^skip_preamble(Stream, Boundary) ->$/;"	f	module:cow_multipart
skip_uri_fragment	deps/cowboy/src/cowboy_protocol.erl	/^skip_uri_fragment(<< C, Rest\/bits >>, S, M, P, Q) ->$/;"	f	module:cowboy_protocol
skip_whitespace	deps/poison/lib/poison/parser.ex	/^  defp skip_whitespace(<<char>> <> rest) when char in '\\s\\n\\t\\r' do$/;"	f
skip_whitespace	deps/poison/lib/poison/parser.ex	/^  defp skip_whitespace(string), do: string$/;"	f
sockname	deps/ranch/src/ranch_ssl.erl	/^sockname(Socket) ->$/;"	f	module:ranch_ssl
sockname	deps/ranch/src/ranch_tcp.erl	/^sockname(Socket) ->$/;"	f	module:ranch_tcp
space	deps/cowboy/erlang.mk	/^space := $(empty) $(empty)$/;"	m
spaces	deps/poison/lib/poison/encoder.ex	/^      defp spaces(count) do$/;"	f
split	deps/cowlib/src/cow_spdy.erl	/^split(Data = << _:40, Length:24, _\/bits >>)$/;"	f	module:cow_spdy
split	deps/cowlib/src/cow_spdy.erl	/^split(_) ->$/;"	f	module:cow_spdy
split	deps/maru/lib/maru/router/path.ex	/^  def split(_path), do: raise "path should be Atom or String"$/;"	f
split	deps/maru/lib/maru/router/path.ex	/^  def split(path) when is_atom(path), do: [path |> to_string]$/;"	f
split	deps/maru/lib/maru/router/path.ex	/^  def split(path) when is_binary(path) do$/;"	f
split	deps/plug/lib/plug/router/utils.ex	/^  def split(bin) do$/;"	f
split_host	deps/cowboy/src/cowboy_router.erl	/^split_host(Host) ->$/;"	f	module:cowboy_router
split_host	deps/cowboy/src/cowboy_router.erl	/^split_host(Host, Acc) ->$/;"	f	module:cowboy_router
split_host_test_	deps/cowboy/src/cowboy_router.erl	/^split_host_test_() ->$/;"	f	module:cowboy_router
split_param_context	deps/maru/lib/maru/router/endpoint.ex	/^  defp split_param_context([], _group, {left, right}), do: {Enum.reverse(left), Enum.reverse(right)}$/;"	f
split_param_context	deps/maru/lib/maru/router/endpoint.ex	/^  defp split_param_context([p|t], group, {left, right}) do$/;"	f
split_param_context	deps/maru/lib/maru/router/endpoint.ex	/^  defp split_param_context(list, group) do$/;"	f
split_path	deps/cowboy/src/cowboy_router.erl	/^split_path(<< $\/, Path\/bits >>) ->$/;"	f	module:cowboy_router
split_path	deps/cowboy/src/cowboy_router.erl	/^split_path(Path, Acc) ->$/;"	f	module:cowboy_router
split_path	deps/cowboy/src/cowboy_router.erl	/^split_path(_) ->$/;"	f	module:cowboy_router
split_path	deps/plug/lib/plug/adapters/cowboy/conn.ex	/^  defp split_path(path) do$/;"	f
split_path	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp split_path(path) do$/;"	f
split_path_test_	deps/cowboy/src/cowboy_router.erl	/^split_path_test_() ->$/;"	f	module:cowboy_router
start	deps/cowboy/src/cowboy_app.erl	/^start(_, _) ->$/;"	f	module:cowboy_app
start	deps/maru/lib/maru.ex	/^  def start(_type, _args) do$/;"	f
start	deps/plug/lib/plug.ex	/^  def start(_type, _args) do$/;"	f
start	deps/ranch/src/ranch_app.erl	/^start(_, _) ->$/;"	f	module:ranch_app
start_http	deps/cowboy/src/cowboy.erl	/^start_http(Ref, NbAcceptors, TransOpts, ProtoOpts)$/;"	f	module:cowboy
start_https	deps/cowboy/src/cowboy.erl	/^start_https(Ref, NbAcceptors, TransOpts, ProtoOpts)$/;"	f	module:cowboy
start_link	deps/cowboy/src/cowboy_clock.erl	/^start_link() ->$/;"	f	module:cowboy_clock
start_link	deps/cowboy/src/cowboy_protocol.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:cowboy_protocol
start_link	deps/cowboy/src/cowboy_spdy.erl	/^start_link(Ref, Socket, Transport, Opts) ->$/;"	f	module:cowboy_spdy
start_link	deps/cowboy/src/cowboy_sup.erl	/^start_link() ->$/;"	f	module:cowboy_sup
start_link	deps/plug/lib/plug/supervisor.ex	/^  def start_link() do$/;"	f
start_link	deps/plug/lib/plug/upload.ex	/^  def start_link() do$/;"	f
start_link	deps/ranch/src/ranch_acceptor.erl	/^start_link(LSocket, Transport, ConnsSup) ->$/;"	f	module:ranch_acceptor
start_link	deps/ranch/src/ranch_acceptors_sup.erl	/^start_link(Ref, NbAcceptors, Transport, TransOpts) ->$/;"	f	module:ranch_acceptors_sup
start_link	deps/ranch/src/ranch_conns_sup.erl	/^start_link(Ref, ConnType, Shutdown, Transport, AckTimeout, Protocol) ->$/;"	f	module:ranch_conns_sup
start_link	deps/ranch/src/ranch_listener_sup.erl	/^start_link(Ref, NbAcceptors, Transport, TransOpts, Protocol, ProtoOpts) ->$/;"	f	module:ranch_listener_sup
start_link	deps/ranch/src/ranch_server.erl	/^start_link() ->$/;"	f	module:ranch_server
start_link	deps/ranch/src/ranch_sup.erl	/^start_link() ->$/;"	f	module:ranch_sup
start_listener	deps/ranch/src/ranch.erl	/^start_listener(Ref, NbAcceptors, Transport, TransOpts, Protocol, ProtoOpts)$/;"	f	module:ranch
start_protocol	deps/ranch/src/ranch_conns_sup.erl	/^start_protocol(SupPid, Socket) ->$/;"	f	module:ranch_conns_sup
start_spdy	deps/cowboy/src/cowboy.erl	/^start_spdy(Ref, NbAcceptors, TransOpts, ProtoOpts)$/;"	f	module:cowboy
state	deps/cowboy/src/cowboy_clock.erl	/^-record(state, {$/;"	r
state	deps/cowboy/src/cowboy_handler.erl	/^-record(state, {$/;"	r
state	deps/cowboy/src/cowboy_protocol.erl	/^-record(state, {$/;"	r
state	deps/cowboy/src/cowboy_rest.erl	/^-record(state, {$/;"	r
state	deps/cowboy/src/cowboy_spdy.erl	/^-record(state, {$/;"	r
state	deps/cowboy/src/cowboy_websocket.erl	/^-record(state, {$/;"	r
state	deps/ranch/src/ranch_conns_sup.erl	/^-record(state, {$/;"	r
state	deps/ranch/src/ranch_server.erl	/^-record(state, {$/;"	r
status	deps/cowboy/src/cowboy_req.erl	/^status(100) -> <<"100 Continue">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(101) -> <<"101 Switching Protocols">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(102) -> <<"102 Processing">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(200) -> <<"200 OK">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(201) -> <<"201 Created">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(202) -> <<"202 Accepted">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(203) -> <<"203 Non-Authoritative Information">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(204) -> <<"204 No Content">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(205) -> <<"205 Reset Content">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(206) -> <<"206 Partial Content">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(207) -> <<"207 Multi-Status">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(226) -> <<"226 IM Used">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(300) -> <<"300 Multiple Choices">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(301) -> <<"301 Moved Permanently">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(302) -> <<"302 Found">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(303) -> <<"303 See Other">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(304) -> <<"304 Not Modified">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(305) -> <<"305 Use Proxy">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(306) -> <<"306 Switch Proxy">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(307) -> <<"307 Temporary Redirect">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(400) -> <<"400 Bad Request">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(401) -> <<"401 Unauthorized">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(402) -> <<"402 Payment Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(403) -> <<"403 Forbidden">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(404) -> <<"404 Not Found">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(405) -> <<"405 Method Not Allowed">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(406) -> <<"406 Not Acceptable">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(407) -> <<"407 Proxy Authentication Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(408) -> <<"408 Request Timeout">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(409) -> <<"409 Conflict">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(410) -> <<"410 Gone">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(411) -> <<"411 Length Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(412) -> <<"412 Precondition Failed">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(413) -> <<"413 Request Entity Too Large">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(414) -> <<"414 Request-URI Too Long">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(415) -> <<"415 Unsupported Media Type">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(416) -> <<"416 Requested Range Not Satisfiable">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(417) -> <<"417 Expectation Failed">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(418) -> <<"418 I'm a teapot">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(422) -> <<"422 Unprocessable Entity">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(423) -> <<"423 Locked">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(424) -> <<"424 Failed Dependency">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(425) -> <<"425 Unordered Collection">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(426) -> <<"426 Upgrade Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(428) -> <<"428 Precondition Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(429) -> <<"429 Too Many Requests">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(431) -> <<"431 Request Header Fields Too Large">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(500) -> <<"500 Internal Server Error">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(501) -> <<"501 Not Implemented">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(502) -> <<"502 Bad Gateway">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(503) -> <<"503 Service Unavailable">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(504) -> <<"504 Gateway Timeout">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(505) -> <<"505 HTTP Version Not Supported">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(506) -> <<"506 Variant Also Negotiates">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(507) -> <<"507 Insufficient Storage">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(510) -> <<"510 Not Extended">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(511) -> <<"511 Network Authentication Required">>;$/;"	f	module:cowboy_req
status	deps/cowboy/src/cowboy_req.erl	/^status(B) when is_binary(B) -> B.$/;"	f	module:cowboy_req
status	deps/maru/lib/maru/helpers/response.ex	/^  defmacro status(value) do$/;"	a
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:error, error),  do: Plug.Exception.status(error)$/;"	f
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:exit, _exit),   do: 500$/;"	f
status	deps/plug/lib/plug/error_handler.ex	/^  defp status(:throw, _throw), do: 500$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(%{plug_status: status}) when is_integer(status), do: status$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(_), do: 500$/;"	f
status	deps/plug/lib/plug/exceptions.ex	/^  def status(exception)$/;"	f
stop	deps/cowboy/src/cowboy_app.erl	/^stop(_) ->$/;"	f	module:cowboy_app
stop	deps/cowboy/src/cowboy_clock.erl	/^stop() ->$/;"	f	module:cowboy_clock
stop	deps/ranch/src/ranch_app.erl	/^stop(_) ->$/;"	f	module:ranch_app
stop_listener	deps/cowboy/src/cowboy.erl	/^stop_listener(Ref) ->$/;"	f	module:cowboy
stop_listener	deps/ranch/src/ranch.erl	/^stop_listener(Ref) ->$/;"	f	module:ranch
stopper	deps/plug/lib/plug/builder.ex	/^        def stopper(conn, _opts) do$/;"	f
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(<< "\\n", Rest\/bits >>, {1, Streamed}, Acc) ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(<< "\\r" >>, {2, Streamed}, Acc) ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(<< "\\r\\n", Rest\/bits >>, {2, Streamed}, Acc) ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(<<>>, State = {Rem, _}, Acc) ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(Data = << C, _\/bits >>, {0, Streamed}, Acc) when C =\/= $\\r ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(Data, State) ->$/;"	f	module:cow_http_te
stream_chunked	deps/cowlib/src/cow_http_te.erl	/^stream_chunked(Data, {Rem, Streamed}, Acc) when Rem > 2 ->$/;"	f	module:cow_http_te
stream_chunked_dripfeed2_test	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_dripfeed2_test() ->$/;"	f	module:cow_http_te
stream_chunked_dripfeed_test	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_dripfeed_test() ->$/;"	f	module:cow_http_te
stream_chunked_error_test_	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_error_test_() ->$/;"	f	module:cow_http_te
stream_chunked_identity_test	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_identity_test() ->$/;"	f	module:cow_http_te
stream_chunked_n_passes_test	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_n_passes_test() ->$/;"	f	module:cow_http_te
stream_chunked_one_pass_test	deps/cowlib/src/cow_http_te.erl	/^stream_chunked_one_pass_test() ->$/;"	f	module:cow_http_te
stream_close	deps/cowboy/src/cowboy_spdy.erl	/^stream_close(Socket = {Pid, _}) ->$/;"	f	module:cowboy_spdy
stream_data	deps/cowboy/src/cowboy_spdy.erl	/^stream_data(Socket = {Pid, _}, Data) ->$/;"	f	module:cowboy_spdy
stream_identity	deps/cowlib/src/cow_http_te.erl	/^stream_identity(Data, {Streamed, Total}) ->$/;"	f	module:cow_http_te
stream_identity_parts_test	deps/cowlib/src/cow_http_te.erl	/^stream_identity_parts_test() ->$/;"	f	module:cow_http_te
stream_identity_test	deps/cowlib/src/cow_http_te.erl	/^stream_identity_test() ->$/;"	f	module:cow_http_te
stream_multipart	deps/cowboy/src/cowboy_req.erl	/^stream_multipart(Req=#http_req{body_state=BodyState, multipart={_, <<>>}}, Opts) ->$/;"	f	module:cowboy_req
stream_multipart	deps/cowboy/src/cowboy_req.erl	/^stream_multipart(Req=#http_req{multipart={Boundary, Buffer}}, _) ->$/;"	f	module:cowboy_req
stream_reply	deps/cowboy/src/cowboy_spdy.erl	/^stream_reply(Socket = {Pid, _}, Status, Headers) ->$/;"	f	module:cowboy_spdy
string_chunk_size	deps/poison/lib/poison/parser.ex	/^  defp string_chunk_size("\\"" <> _, acc), do: acc$/;"	f
string_chunk_size	deps/poison/lib/poison/parser.ex	/^  defp string_chunk_size("\\\\" <> _, acc), do: acc$/;"	f
string_chunk_size	deps/poison/lib/poison/parser.ex	/^  defp string_chunk_size(<<char>> <> rest, acc) when char < 0x80 do$/;"	f
string_chunk_size	deps/poison/lib/poison/parser.ex	/^  defp string_chunk_size(<<codepoint :: utf8>> <> rest, acc) do$/;"	f
string_chunk_size	deps/poison/lib/poison/parser.ex	/^  defp string_chunk_size(other, _), do: syntax_error(other)$/;"	f
string_codepoint_size	deps/poison/lib/poison/parser.ex	/^  defp string_codepoint_size(_),                                  do: 4$/;"	f
string_codepoint_size	deps/poison/lib/poison/parser.ex	/^  defp string_codepoint_size(codepoint) when codepoint < 0x10000, do: 3$/;"	f
string_codepoint_size	deps/poison/lib/poison/parser.ex	/^  defp string_codepoint_size(codepoint) when codepoint < 0x800,   do: 2$/;"	f
string_continue	deps/poison/lib/poison/parser.ex	/^  defp string_continue("", _), do: throw(:invalid)$/;"	f
string_continue	deps/poison/lib/poison/parser.ex	/^  defp string_continue("\\"" <> rest, acc) do$/;"	f
string_continue	deps/poison/lib/poison/parser.ex	/^  defp string_continue("\\\\" <> rest, acc) do$/;"	f
string_continue	deps/poison/lib/poison/parser.ex	/^  defp string_continue(string, acc) do$/;"	f
string_escape	deps/poison/lib/poison/parser.ex	/^    defp string_escape(<<unquote(seq)>> <> rest, acc) do$/;"	f
string_escape	deps/poison/lib/poison/parser.ex	/^  defp string_escape(<<?u, a1, b1, c1, d1, "\\\\u", a2, b2, c2, d2>> <> rest, acc)$/;"	f
string_escape	deps/poison/lib/poison/parser.ex	/^  defp string_escape(<<?u, seq :: binary-size(4)>> <> rest, acc) do$/;"	f
string_escape	deps/poison/lib/poison/parser.ex	/^  defp string_escape(other, _), do: syntax_error(other)$/;"	f
stringify_kv	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_kv({k, v}),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(%{__struct__: mod} = struct) when is_atom(mod),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(%{} = params),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params([_|_] = params),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params([{_, _}|_] = params),$/;"	f
stringify_params	deps/plug/lib/plug/adapters/test/conn.ex	/^  defp stringify_params(other),$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces("\\r\\n" <> t),$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces(<<h, t :: binary>>) when h in [?\\s, ?\\t],$/;"	f
strip_spaces	deps/plug/lib/plug/conn/utils.ex	/^  defp strip_spaces(t),$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset([], actual),$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset([h|expected], [h|actual]),$/;"	f
subset	deps/plug/lib/plug/static.ex	/^  defp subset(_, _),$/;"	f
syn_reply	deps/cowboy/src/cowboy_spdy.erl	/^syn_reply(#state{socket=Socket, transport=Transport, zdef=Zdef},$/;"	f	module:cowboy_spdy
syn_reply	deps/cowlib/src/cow_spdy.erl	/^syn_reply(Zdef, StreamID, IsFin, Status, Version, Headers) ->$/;"	f	module:cow_spdy
syn_stream	deps/cowlib/src/cow_spdy.erl	/^syn_stream(Zdef, StreamID, AssocToStreamID, IsFin, IsUnidirectional,$/;"	f	module:cow_spdy
syntax_error	deps/poison/lib/poison/parser.ex	/^  defp syntax_error(<<token :: utf8>> <> _) do$/;"	f
syntax_error	deps/poison/lib/poison/parser.ex	/^  defp syntax_error(_) do$/;"	f
system_code_change	deps/cowboy/src/cowboy_spdy.erl	/^system_code_change(Misc, _, _, _) ->$/;"	f	module:cowboy_spdy
system_code_change	deps/ranch/src/ranch_conns_sup.erl	/^system_code_change(Misc, _, _, _) ->$/;"	f	module:ranch_conns_sup
system_continue	deps/cowboy/src/cowboy_spdy.erl	/^system_continue(_, _, State) ->$/;"	f	module:cowboy_spdy
system_continue	deps/ranch/src/ranch_conns_sup.erl	/^system_continue(_, _, {State, CurConns, NbChildren, Sleepers}) ->$/;"	f	module:ranch_conns_sup
system_terminate	deps/cowboy/src/cowboy_spdy.erl	/^system_terminate(Reason, _, _, _) ->$/;"	f	module:cowboy_spdy
system_terminate	deps/ranch/src/ranch_conns_sup.erl	/^system_terminate(Reason, _, _, {State, _, NbChildren, _}) ->$/;"	f	module:ranch_conns_sup
tab	deps/cowboy/erlang.mk	/^tab := $(empty)	$(empty)$/;"	m
terminate	deps/cowboy/src/cowboy_clock.erl	/^terminate(_Reason, _State) ->$/;"	f	module:cowboy_clock
terminate	deps/cowboy/src/cowboy_protocol.erl	/^terminate(#state{socket=Socket, transport=Transport}) ->$/;"	f	module:cowboy_protocol
terminate	deps/cowboy/src/cowboy_rest.erl	/^terminate(Req, State=#state{env=Env}) ->$/;"	f	module:cowboy_rest
terminate	deps/cowboy/src/cowboy_spdy.erl	/^terminate(_State) ->$/;"	f	module:cowboy_spdy
terminate	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  defp terminate(reason, req, stack) do$/;"	f
terminate	deps/ranch/src/ranch_conns_sup.erl	/^terminate(#state{shutdown=Shutdown}, Reason, NbChildren) ->$/;"	f	module:ranch_conns_sup
terminate	deps/ranch/src/ranch_conns_sup.erl	/^terminate(#state{shutdown=brutal_kill}, Reason, _) ->$/;"	f	module:ranch_conns_sup
terminate	deps/ranch/src/ranch_server.erl	/^terminate(_Reason, _State) ->$/;"	f	module:ranch_server
terminate_request	deps/cowboy/src/cowboy_handler.erl	/^terminate_request(Req, #state{env=Env, loop_timeout_ref=TRef},$/;"	f	module:cowboy_handler
time	deps/cowboy/src/cowboy_http.erl	/^time(<< H1, H2, ":", M1, M2, ":", S1, S2, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
to_args	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp to_args(all_opts) do$/;"	f
to_char_list	deps/plug/lib/plug/adapters/cowboy.ex	/^  defp to_char_list(cowboy_options, key) do$/;"	f
to_flag	deps/cowlib/src/cow_spdy.erl	/^to_flag(false) -> 0;$/;"	f	module:cow_spdy
to_flag	deps/cowlib/src/cow_spdy.erl	/^to_flag(true) -> 1.$/;"	f	module:cow_spdy
to_list	deps/cowboy/src/cowboy_req.erl	/^to_list(Req) ->$/;"	f	module:cowboy_req
to_lower	deps/cowboy/src/cowboy_bstr.erl	/^to_lower(B) ->$/;"	f	module:cowboy_bstr
to_port	deps/maru/lib/maru.ex	/^  defp to_port(nil),                        do: nil$/;"	f
to_port	deps/maru/lib/maru.ex	/^  defp to_port(port) when is_binary(port),  do: port |> String.to_integer$/;"	f
to_port	deps/maru/lib/maru.ex	/^  defp to_port(port) when is_integer(port), do: port$/;"	f
to_port	deps/maru/lib/maru.ex	/^  defp to_port({:system, env_var}),         do: System.get_env(env_var) |> to_port$/;"	f
to_upper	deps/cowboy/src/cowboy_bstr.erl	/^to_upper(B) ->$/;"	f	module:cowboy_bstr
token	deps/cowboy/src/cowboy_http.erl	/^token(<< C, Rest\/binary >>, Fun, Case = ci, Acc) ->$/;"	f	module:cowboy_http
token	deps/cowboy/src/cowboy_http.erl	/^token(<< C, Rest\/binary >>, Fun, Case, Acc) ->$/;"	f	module:cowboy_http
token	deps/cowboy/src/cowboy_http.erl	/^token(<<>>, Fun, _Case, Acc) ->$/;"	f	module:cowboy_http
token	deps/cowboy/src/cowboy_http.erl	/^token(Data = << C, _Rest\/binary >>, Fun, _Case, Acc)$/;"	f	module:cowboy_http
token	deps/cowboy/src/cowboy_http.erl	/^token(Data, Fun) ->$/;"	f	module:cowboy_http
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(""),$/;"	f
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(<<?", quoted :: binary>>),$/;"	f
token	deps/plug/lib/plug/conn/utils.ex	/^  def token(token),$/;"	f
token_ci	deps/cowboy/src/cowboy_http.erl	/^token_ci(Data, Fun) ->$/;"	f	module:cowboy_http
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $,, R\/bits >>, Acc) -> token_ci_list(R, Acc);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $,, R\/bits >>, Acc, T) -> token_ci_list(R, [T|Acc]);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $\\s, R\/bits >>, Acc) -> token_ci_list(R, Acc);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $\\s, R\/bits >>, Acc, T) -> token_ci_list_sep(R, Acc, T);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $\\t, R\/bits >>, Acc) -> token_ci_list(R, Acc);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< $\\t, R\/bits >>, Acc, T) -> token_ci_list_sep(R, Acc, T);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< C, R\/bits >>, Acc) ->$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<< C, R\/bits >>, Acc, T) ->$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<<>>, Acc) -> lists:reverse(Acc);$/;"	f	module:cow_http_hd
token_ci_list	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list(<<>>, Acc, T) -> lists:reverse([T|Acc]);$/;"	f	module:cow_http_hd
token_ci_list_sep	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list_sep(<< $,, R\/bits >>, Acc, T) -> token_ci_list(R, [T|Acc]).$/;"	f	module:cow_http_hd
token_ci_list_sep	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list_sep(<< $\\s, R\/bits >>, Acc, T) -> token_ci_list_sep(R, Acc, T);$/;"	f	module:cow_http_hd
token_ci_list_sep	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list_sep(<< $\\t, R\/bits >>, Acc, T) -> token_ci_list_sep(R, Acc, T);$/;"	f	module:cow_http_hd
token_ci_list_sep	deps/cowlib/src/cow_http_hd.erl	/^token_ci_list_sep(<<>>, Acc, T) -> lists:reverse([T|Acc]);$/;"	f	module:cow_http_hd
topological_sort	deps/maru/lib/maru/builder/routers.ex	/^  defp topological_sort([], r), do: r |> Enum.reverse$/;"	f
topological_sort	deps/maru/lib/maru/builder/routers.ex	/^  defp topological_sort([{_, nil}=h | t], r) do$/;"	f
topological_sort	deps/maru/lib/maru/builder/routers.ex	/^  defp topological_sort([{_, opts}=h | t], r) do$/;"	f
tpl_cowboy_http	deps/cowboy/erlang.mk	/^define tpl_cowboy_http$/;"	m
tpl_cowboy_http	deps/cowlib/erlang.mk	/^tpl_cowboy_http = "-module($(n))." \\$/;"	m
tpl_cowboy_http	deps/ranch/erlang.mk	/^tpl_cowboy_http = "-module($(n))." \\$/;"	m
tpl_cowboy_loop	deps/cowboy/erlang.mk	/^define tpl_cowboy_loop$/;"	m
tpl_cowboy_loop	deps/cowlib/erlang.mk	/^tpl_cowboy_loop = "-module($(n))." \\$/;"	m
tpl_cowboy_loop	deps/ranch/erlang.mk	/^tpl_cowboy_loop = "-module($(n))." \\$/;"	m
tpl_cowboy_rest	deps/cowboy/erlang.mk	/^define tpl_cowboy_rest$/;"	m
tpl_cowboy_rest	deps/cowlib/erlang.mk	/^tpl_cowboy_rest = "-module($(n))." \\$/;"	m
tpl_cowboy_rest	deps/ranch/erlang.mk	/^tpl_cowboy_rest = "-module($(n))." \\$/;"	m
tpl_cowboy_ws	deps/cowboy/erlang.mk	/^define tpl_cowboy_ws$/;"	m
tpl_cowboy_ws	deps/cowlib/erlang.mk	/^tpl_cowboy_ws = "-module($(n))." \\$/;"	m
tpl_cowboy_ws	deps/ranch/erlang.mk	/^tpl_cowboy_ws = "-module($(n))." \\$/;"	m
tpl_gen_fsm	deps/cowboy/erlang.mk	/^define tpl_gen_fsm$/;"	m
tpl_gen_server	deps/cowboy/erlang.mk	/^define tpl_gen_server$/;"	m
tpl_gen_server	deps/cowlib/erlang.mk	/^tpl_gen_server = "-module($(n))." \\$/;"	m
tpl_gen_server	deps/ranch/erlang.mk	/^tpl_gen_server = "-module($(n))." \\$/;"	m
tpl_ranch_protocol	deps/cowboy/erlang.mk	/^define tpl_ranch_protocol$/;"	m
tpl_ranch_protocol	deps/cowlib/erlang.mk	/^tpl_ranch_protocol = "-module($(n))." \\$/;"	m
tpl_ranch_protocol	deps/ranch/erlang.mk	/^tpl_ranch_protocol = "-module($(n))." \\$/;"	m
tpl_supervisor	deps/cowboy/erlang.mk	/^define tpl_supervisor$/;"	m
tpl_supervisor	deps/cowlib/erlang.mk	/^tpl_supervisor = "-module($(n))." \\$/;"	m
tpl_supervisor	deps/ranch/erlang.mk	/^tpl_supervisor = "-module($(n))." \\$/;"	m
transform	deps/poison/lib/poison/decoder.ex	/^  defp transform(value, _keys, _as, _options) do$/;"	f
transform	deps/poison/lib/poison/decoder.ex	/^  defp transform(value, keys, [as], options) do$/;"	f
transform	deps/poison/lib/poison/decoder.ex	/^  defp transform(value, keys, as, options) when is_atom(as) do$/;"	f
transform	deps/poison/lib/poison/decoder.ex	/^  defp transform(value, keys, as, options) when is_map(as) do$/;"	f
transform_map	deps/poison/lib/poison/decoder.ex	/^  defp transform_map(value, keys, as, options) do$/;"	f
transform_struct	deps/poison/lib/poison/decoder.ex	/^  defp transform_struct(value, _keys, as, options) do$/;"	f
transform_struct	deps/poison/lib/poison/decoder.ex	/^  defp transform_struct(value, keys, as, options) when keys in [:atoms, :atoms!] do$/;"	f
translate	deps/plug/lib/plug/adapters/translator.ex	/^  def translate(_min_level, _level, _kind, _data) do$/;"	f
translate	deps/plug/lib/plug/adapters/translator.ex	/^  def translate(min_level, :error, :format,$/;"	f
translate_ranch	deps/plug/lib/plug/adapters/translator.ex	/^  defp translate_ranch(_min_level, ref, protocol, pid, reason) do$/;"	f
translate_ranch	deps/plug/lib/plug/adapters/translator.ex	/^  defp translate_ranch(min_level, _ref, :cowboy_protocol, pid,$/;"	f
traversal_module	deps/maru/lib/maru/builder/routers.ex	/^  defp traversal_module(module) do$/;"	f
trim_secret	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  defp trim_secret(secret) do$/;"	f
triq_check.erl	deps/cowboy/erlang.mk	/^define triq_check.erl$/;"	m
try_extend	deps/maru/lib/maru/plugs/extend.ex	/^  defp try_extend(conn_orig, router, extend) do$/;"	f
type	deps/plug/lib/plug/mime.ex	/^    def type(unquote(ext)), do: unquote(type)$/;"	f
type	deps/plug/lib/plug/mime.ex	/^  def type(_ext), do: @default_type$/;"	f
type	deps/plug/lib/plug/mime.ex	/^  def type(file_extension)$/;"	f
unbroken_cipher_suites	deps/ranch/src/ranch_ssl.erl	/^unbroken_cipher_suites() ->$/;"	f	module:ranch_ssl
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($0) ->  0;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($1) ->  1;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($2) ->  2;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($3) ->  3;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($4) ->  4;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($5) ->  5;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($6) ->  6;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($7) ->  7;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($8) ->  8;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($9) ->  9;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($A) -> 10;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($B) -> 11;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($C) -> 12;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($D) -> 13;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($E) -> 14;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($F) -> 15;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($a) -> 10;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($b) -> 11;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($c) -> 12;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($d) -> 13;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($e) -> 14;$/;"	f	module:cow_qs
unhex	deps/cowlib/src/cow_qs.erl	/^unhex($f) -> 15.$/;"	f	module:cow_qs
unmasked_csrf_token	deps/plug/lib/plug/csrf_protection.ex	/^  defp unmasked_csrf_token do$/;"	f
unpad_message	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  defp unpad_message(msg) do$/;"	f
unquote	deps/maru/lib/maru/builder/methods.ex	/^    defmacro unquote(method)(path \\\\ "", [do: block]) do$/;"	a
unquote	deps/maru/lib/maru/builder/namespaces.ex	/^    defmacro unquote(namespace)([do: block]), do: block$/;"	a
unquote	deps/maru/lib/maru/builder/namespaces.ex	/^    defmacro unquote(namespace)(path, [do: block]) do$/;"	a
unquote	deps/maru/lib/maru/builder/params.ex	/^      defmacro unquote(action)(attr_names) do$/;"	a
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token("\\r\\n" <> t, acc),$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<>>, acc),$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, _ :: binary>>, _acc) when h in @specials or h < 32 or h === 127,$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, t :: binary>>, acc) when h in @space,$/;"	f
unquoted_token	deps/plug/lib/plug/conn/utils.ex	/^  defp unquoted_token(<<h, t :: binary>>, acc),$/;"	f
unsafe_call	deps/cowboy/src/cowboy_rest.erl	/^unsafe_call(Req, #state{handler=Handler, handler_state=HandlerState},$/;"	f	module:cowboy_rest
until	deps/cowboy/src/cowboy_protocol.erl	/^until(Timeout) ->$/;"	f	module:cowboy_protocol
until	deps/cowboy/src/cowboy_protocol.erl	/^until(infinity) ->$/;"	f	module:cowboy_protocol
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{cookies: %Unfetched{}} = conn, _fun),$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{cookies: cookies} = conn, fun),$/;"	f
update_cookies	deps/plug/lib/plug/conn.ex	/^  defp update_cookies(%Conn{state: :sent}, _fun),$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(%Conn{state: :sent}, _key, _initial, _fun) do$/;"	f
update_req_header	deps/plug/lib/plug/conn.ex	/^  def update_req_header(%Conn{} = conn, key, initial, fun) when$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(%Conn{state: :sent}, _key, _initial, _fun) do$/;"	f
update_resp_header	deps/plug/lib/plug/conn.ex	/^  def update_resp_header(%Conn{} = conn, key, initial, fun) when$/;"	f
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(<< Keep:17\/binary, _\/bits >>, {Date, _}, {Date, {H, M, S}}) ->$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(<< Keep:20\/binary, _\/bits >>,$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(<< Keep:23\/binary, _\/bits >>,$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(<< _:11\/binary, Keep:6\/binary, _\/bits >>,$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(<< _:7\/binary, Keep:10\/binary, _\/bits >>,$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(Bin, Now, Now) ->$/;"	f	module:cowboy_clock
update_rfc1123	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123(_, _, {Date = {Y, Mo, D}, {H, M, S}}) ->$/;"	f	module:cowboy_clock
update_rfc1123_test_	deps/cowboy/src/cowboy_clock.erl	/^update_rfc1123_test_() ->$/;"	f	module:cowboy_clock
upgrade	deps/cowboy/src/cowboy_rest.erl	/^upgrade(Req, Env, Handler, HandlerOpts) ->$/;"	f	module:cowboy_rest
upgrade	deps/cowboy/src/cowboy_websocket.erl	/^upgrade(Req, Env, Handler, HandlerOpts) ->$/;"	f	module:cowboy_websocket
upgrade	deps/plug/lib/plug/adapters/cowboy/handler.ex	/^  def upgrade(req, env, __MODULE__, {transport, plug, opts}) do$/;"	f
upgrade_protocol	deps/cowboy/src/cowboy_handler.erl	/^upgrade_protocol(Req, #state{env=Env},$/;"	f	module:cowboy_handler
upgrade_reply	deps/cowboy/src/cowboy_req.erl	/^upgrade_reply(Status, Headers, Req=#http_req{transport=Transport,$/;"	f	module:cowboy_req
upper_camel_case	deps/maru/lib/maru/utils.ex	/^  def upper_camel_case(s) do$/;"	f
uri_too_long	deps/cowboy/src/cowboy_rest.erl	/^uri_too_long(Req, State) ->$/;"	f	module:cowboy_rest
url	deps/cowboy/src/cowboy_req.erl	/^url(HostURL, Req=#http_req{path=Path, qs=QS}) ->$/;"	f	module:cowboy_req
url	deps/cowboy/src/cowboy_req.erl	/^url(Req=#http_req{}) ->$/;"	f	module:cowboy_req
url	deps/cowboy/src/cowboy_req.erl	/^url(undefined, Req=#http_req{}) ->$/;"	f	module:cowboy_req
url	deps/plug/lib/plug/debugger.ex	/^  defp url(%Plug.Conn{scheme: scheme, host: host, port: port} = conn), do:$/;"	f
url_test	deps/cowboy/src/cowboy_req.erl	/^url_test() ->$/;"	f	module:cowboy_req
urldecode	deps/cowlib/src/cow_qs.erl	/^urldecode(<< $%, H, L, Rest\/bits >>, Acc) ->$/;"	f	module:cow_qs
urldecode	deps/cowlib/src/cow_qs.erl	/^urldecode(<< $+, Rest\/bits >>, Acc) ->$/;"	f	module:cow_qs
urldecode	deps/cowlib/src/cow_qs.erl	/^urldecode(<< C, Rest\/bits >>, Acc) when C =\/= $% ->$/;"	f	module:cow_qs
urldecode	deps/cowlib/src/cow_qs.erl	/^urldecode(<<>>, Acc) ->$/;"	f	module:cow_qs
urldecode	deps/cowlib/src/cow_qs.erl	/^urldecode(B) ->$/;"	f	module:cow_qs
urldecode_identity_test_	deps/cowlib/src/cow_qs.erl	/^urldecode_identity_test_() ->$/;"	f	module:cow_qs
urldecode_test_	deps/cowlib/src/cow_qs.erl	/^urldecode_test_() ->$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $-, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $- >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $., Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $. >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $0, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $0 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $1, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $1 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $2, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $2 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $3, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $3 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $4, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $4 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $5, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $5 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $6, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $6 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $7, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $7 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $8, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $8 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $9, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $9 >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $A, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $A >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $B, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $B >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $C, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $C >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $D, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $D >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $E, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $E >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $F, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $F >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $G, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $G >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $H, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $H >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $I, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $I >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $J, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $J >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $K, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $K >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $L, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $L >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $M, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $M >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $N, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $N >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $O, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $O >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $P, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $P >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $Q, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $Q >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $R, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $R >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $S, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $S >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $T, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $T >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $U, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $U >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $V, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $V >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $W, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $W >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $X, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $X >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $Y, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $Y >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $Z, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $Z >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $\\s, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $+ >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $_, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $_ >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $a, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $a >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $b, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $b >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $c, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $c >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $d, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $d >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $e, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $e >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $f, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $f >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $g, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $g >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $h, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $h >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $i, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $i >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $j, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $j >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $k, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $k >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $l, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $l >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $m, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $m >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $n, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $n >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $o, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $o >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $p, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $p >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $q, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $q >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $r, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $r >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $s, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $s >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $t, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $t >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $u, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $u >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $v, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $v >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $w, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $w >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $x, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $x >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $y, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $y >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< $z, Rest\/bits >>, Acc) -> urlencode(Rest, << Acc\/bits, $z >>);$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<< C, Rest\/bits >>, Acc) ->$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(<<>>, Acc) ->$/;"	f	module:cow_qs
urlencode	deps/cowlib/src/cow_qs.erl	/^urlencode(B) ->$/;"	f	module:cow_qs
urlencode_identity_test_	deps/cowlib/src/cow_qs.erl	/^urlencode_identity_test_() ->$/;"	f	module:cow_qs
urlencode_test_	deps/cowlib/src/cow_qs.erl	/^urlencode_test_() ->$/;"	f	module:cow_qs
use	deps/maru/lib/maru/builder/params.ex	/^  defmacro use(param) when is_atom(param) do$/;"	a
use	deps/maru/lib/maru/builder/params.ex	/^  defmacro use(params) do$/;"	a
valid?	deps/plug/lib/plug/mime.ex	/^  def valid?(type) do$/;"	f
valid_content_headers	deps/cowboy/src/cowboy_rest.erl	/^valid_content_headers(Req, State) ->$/;"	f	module:cowboy_rest
valid_csrf_token?	deps/plug/lib/plug/csrf_protection.ex	/^  defp valid_csrf_token?(<<csrf_token::@encoded_token_size-binary>>,$/;"	f
valid_csrf_token?	deps/plug/lib/plug/csrf_protection.ex	/^  defp valid_csrf_token?(_csrf_token, _user_token), do: false$/;"	f
valid_entity_length	deps/cowboy/src/cowboy_rest.erl	/^valid_entity_length(Req, State) ->$/;"	f	module:cowboy_rest
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<>>), do: true$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<_, t::binary>>), do: valid_header_key?(t)$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(<<h, _::binary>>) when h in ?A..?Z, do: false$/;"	f
valid_header_key?	deps/plug/lib/plug/conn.ex	/^  defp valid_header_key?(_), do: false$/;"	f
valid_request_id?	deps/plug/lib/plug/request_id.ex	/^  defp valid_request_id?(s), do: byte_size(s) in 20..200$/;"	f
validate!	deps/maru/lib/maru/validations.ex	/^    def validate!(attr_names, params) do$/;"	f
validate_header_key!	deps/plug/lib/plug/conn.ex	/^  defp validate_header_key!(key) do$/;"	f
validate_param!	deps/maru/lib/maru/validations.ex	/^    def validate_param!(_, _, true), do: true$/;"	f
validate_param!	deps/maru/lib/maru/validations.ex	/^    def validate_param!(attr_name, value, false) do$/;"	f
validate_param!	deps/maru/lib/maru/validations.ex	/^    def validate_param!(attr_name, value, option) do$/;"	f
validate_params	deps/maru/lib/maru/router/endpoint.ex	/^  def validate_params([%Param{attr_name: attr_name, group: group, nested: false}=p|t], params, result) do$/;"	f
validate_params	deps/maru/lib/maru/router/endpoint.ex	/^  def validate_params([%Param{attr_name: attr_name, group: group, parser: Maru.ParamType.List}=p|t], params, result) do$/;"	f
validate_params	deps/maru/lib/maru/router/endpoint.ex	/^  def validate_params([%Param{attr_name: attr_name, group: group, parser: Maru.ParamType.Map}=p|t], params, result) do$/;"	f
validate_params	deps/maru/lib/maru/router/endpoint.ex	/^  def validate_params([%Validator{action: action, attr_names: attr_names, group: group}|t], params, result) do$/;"	f
validate_params	deps/maru/lib/maru/router/endpoint.ex	/^  def validate_params([], _params, result), do: result$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(nil), do:$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(secret_key_base) when byte_size(secret_key_base) < 64, do:$/;"	f
validate_secret_key_base	deps/plug/lib/plug/session/cookie.ex	/^  defp validate_secret_key_base(secret_key_base), do:$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<>>, _context) do$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<_ :: utf8, t :: binary>>, context) do$/;"	f
validate_utf8!	deps/plug/lib/plug/conn/utils.ex	/^  def validate_utf8!(<<h, _ :: binary>>, context) do$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("[" <> rest, keys),      do: array_values(skip_whitespace(rest), keys, [])$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("\\"" <> rest, _keys),    do: string_continue(rest, [])$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("false" <> rest, _keys), do: {false, rest}$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("null" <> rest, _keys),  do: {nil, rest}$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("true" <> rest, _keys),  do: {true, rest}$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value("{" <> rest, keys),      do: object_pairs(skip_whitespace(rest), keys, [])$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value(<<char, _ :: binary>> = string, _keys) when char in '-0123456789' do$/;"	f
value	deps/poison/lib/poison/parser.ex	/^  defp value(other, _keys), do: syntax_error(other)$/;"	f
variances	deps/cowboy/src/cowboy_rest.erl	/^variances(Req, State, Variances) ->$/;"	f	module:cowboy_rest
variances	deps/cowboy/src/cowboy_rest.erl	/^variances(Req, State=#state{content_types_p=CTP,$/;"	f	module:cowboy_rest
verbose	deps/cowboy/erlang.mk	/^verbose = $(verbose_$(V))$/;"	m
verbose_0	deps/cowboy/erlang.mk	/^verbose_0 = @$/;"	m
verified_request?	deps/plug/lib/plug/csrf_protection.ex	/^  defp verified_request?(conn, csrf_token) do$/;"	f
verify	deps/plug/lib/plug/crypto/message_verifier.ex	/^  def verify(binary, secret) when is_binary(binary) and is_binary(secret) do$/;"	f
verify_and_decrypt	deps/plug/lib/plug/crypto/message_encryptor.ex	/^  def verify_and_decrypt(encrypted, secret, sign_secret, cipher \\\\ :aes_cbc256)$/;"	f
version	deps/cowboy/src/cowboy_req.erl	/^version(Req) ->$/;"	f	module:cowboy_req
version	deps/cowlib/src/cow_http.erl	/^version('HTTP\/1.0') -> <<"HTTP\/1.0">>.$/;"	f	module:cow_http
version	deps/cowlib/src/cow_http.erl	/^version('HTTP\/1.1') -> <<"HTTP\/1.1">>;$/;"	f	module:cow_http
version	deps/maru/lib/maru.ex	/^  def version do$/;"	f
version	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro version(v) do$/;"	a
version	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro version(v, [do: block]) do$/;"	a
version	deps/maru/lib/maru/builder/dsls.ex	/^  defmacro version(v, [{:extend, _}, {:at, _} | _]=opts) do$/;"	a
version_test	deps/cowlib/src/cow_http.erl	/^version_test() ->$/;"	f	module:cow_http
wait_children	deps/ranch/src/ranch_conns_sup.erl	/^wait_children(0) ->$/;"	f	module:ranch_conns_sup
wait_children	deps/ranch/src/ranch_conns_sup.erl	/^wait_children(NbChildren) ->$/;"	f	module:ranch_conns_sup
wait_hd_before_value	deps/cowboy/src/cowboy_protocol.erl	/^wait_hd_before_value(Buffer, State=#state{$/;"	f	module:cowboy_protocol
wait_hd_value	deps/cowboy/src/cowboy_protocol.erl	/^wait_hd_value(_, State=#state{$/;"	f	module:cowboy_protocol
wait_hd_value_nl	deps/cowboy/src/cowboy_protocol.erl	/^wait_hd_value_nl(_, State=#state{$/;"	f	module:cowboy_protocol
wait_header	deps/cowboy/src/cowboy_protocol.erl	/^wait_header(Buffer, State=#state{socket=Socket, transport=Transport,$/;"	f	module:cowboy_protocol
wait_header	deps/cowboy/src/cowboy_protocol.erl	/^wait_header(_, State=#state{max_headers=MaxHeaders}, _, _, _, _, Headers)$/;"	f	module:cowboy_protocol
wait_request	deps/cowboy/src/cowboy_protocol.erl	/^wait_request(Buffer, State=#state{socket=Socket, transport=Transport,$/;"	f	module:cowboy_protocol
web	deps/cowlib/src/cow_mimetypes.erl	/^web(Path) ->$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"css">>) -> {<<"text">>, <<"css">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"gif">>) -> {<<"image">>, <<"gif">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"htm">>) -> {<<"text">>, <<"html">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"html">>) -> {<<"text">>, <<"html">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"ico">>) -> {<<"image">>, <<"x-icon">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"jpeg">>) -> {<<"image">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"jpg">>) -> {<<"image">>, <<"jpeg">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"js">>) -> {<<"application">>, <<"javascript">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"mp3">>) -> {<<"audio">>, <<"mpeg">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"mp4">>) -> {<<"video">>, <<"mp4">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"ogg">>) -> {<<"audio">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"ogv">>) -> {<<"video">>, <<"ogg">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"png">>) -> {<<"image">>, <<"png">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"svg">>) -> {<<"image">>, <<"svg+xml">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"wav">>) -> {<<"audio">>, <<"x-wav">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(<<"webm">>) -> {<<"video">>, <<"webm">>, []};$/;"	f	module:cow_mimetypes
web_ext	deps/cowlib/src/cow_mimetypes.erl	/^web_ext(_) -> {<<"application">>, <<"octet-stream">>, []}.$/;"	f	module:cow_mimetypes
websocket_close	deps/cowboy/src/cowboy_websocket.erl	/^websocket_close(State=#state{socket=Socket, transport=Transport},$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << 0:1, _:3, Opcode:4, _\/bits >>)$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << Fin:1, Rsv:3\/bits, Opcode:4, 1:1,$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:1, Rsv:3, _\/bits >>)$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:4, 8:4, _:1, 1:7, _\/bits >>) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:4, Opcode:4, _\/bits >>)$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:8, 0:1, _\/bits >>) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:8, 1:1, 127:7, 1:1, _:7, _\/binary >>) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:9, 126:7, _:48, _\/bits >>) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, << _:9, 127:7, _:96, _\/bits >>) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, Data) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState, Opcode, Len, MaskKey, Data, Rsv, 1) ->$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State, Req, HandlerState,$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State=#state{frag_state=undefined}, Req, HandlerState,$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State=#state{frag_state={nofin, Opcode, SoFar}},$/;"	f	module:cowboy_websocket
websocket_data	deps/cowboy/src/cowboy_websocket.erl	/^websocket_data(State=#state{frag_state={nofin, _, _}}, Req, HandlerState,$/;"	f	module:cowboy_websocket
websocket_deflate_frame	deps/cowboy/src/cowboy_websocket.erl	/^websocket_deflate_frame(Opcode, Payload,$/;"	f	module:cowboy_websocket
websocket_deflate_frame	deps/cowboy/src/cowboy_websocket.erl	/^websocket_deflate_frame(_, Payload, State=#state{deflate_state = Deflate}) ->$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State, Req, HandlerState, RemainingData, 1, Payload) ->$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State, Req, HandlerState, RemainingData, 10, Payload) ->$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State, Req, HandlerState, RemainingData, 2, Payload) ->$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State, Req, HandlerState, _RemainingData, 8, <<>>) ->$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State, Req, HandlerState, _RemainingData, 8,$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State=#state{frag_state={fin, Opcode, SoFar}},$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State=#state{frag_state={nofin, Opcode, SoFar}},$/;"	f	module:cowboy_websocket
websocket_dispatch	deps/cowboy/src/cowboy_websocket.erl	/^websocket_dispatch(State=#state{socket=Socket, transport=Transport},$/;"	f	module:cowboy_websocket
websocket_extensions	deps/cowboy/src/cowboy_websocket.erl	/^websocket_extensions(State, Req) ->$/;"	f	module:cowboy_websocket
websocket_handshake	deps/cowboy/src/cowboy_websocket.erl	/^websocket_handshake(State=#state{$/;"	f	module:cowboy_websocket
websocket_inflate_frame	deps/cowboy/src/cowboy_websocket.erl	/^websocket_inflate_frame(Data, << 1:1, _:2 >>, false, State) ->$/;"	f	module:cowboy_websocket
websocket_inflate_frame	deps/cowboy/src/cowboy_websocket.erl	/^websocket_inflate_frame(Data, << 1:1, _:2 >>, true, State) ->$/;"	f	module:cowboy_websocket
websocket_inflate_frame	deps/cowboy/src/cowboy_websocket.erl	/^websocket_inflate_frame(Data, << Rsv1:1, _:2 >>, _,$/;"	f	module:cowboy_websocket
websocket_opcode	deps/cowboy/src/cowboy_websocket.erl	/^websocket_opcode(binary) -> 2;$/;"	f	module:cowboy_websocket
websocket_opcode	deps/cowboy/src/cowboy_websocket.erl	/^websocket_opcode(close) -> 8;$/;"	f	module:cowboy_websocket
websocket_opcode	deps/cowboy/src/cowboy_websocket.erl	/^websocket_opcode(ping) -> 9;$/;"	f	module:cowboy_websocket
websocket_opcode	deps/cowboy/src/cowboy_websocket.erl	/^websocket_opcode(pong) -> 10.$/;"	f	module:cowboy_websocket
websocket_opcode	deps/cowboy/src/cowboy_websocket.erl	/^websocket_opcode(text) -> 1;$/;"	f	module:cowboy_websocket
websocket_payload	deps/cowboy/src/cowboy_websocket.erl	/^websocket_payload(State, Req, HandlerState,$/;"	f	module:cowboy_websocket
websocket_payload	deps/cowboy/src/cowboy_websocket.erl	/^websocket_payload(State=#state{frag_state={Fin, 1, _}, utf8_state=Incomplete},$/;"	f	module:cowboy_websocket
websocket_payload	deps/cowboy/src/cowboy_websocket.erl	/^websocket_payload(State=#state{frag_state={_, 1, _}, utf8_state=Incomplete},$/;"	f	module:cowboy_websocket
websocket_payload	deps/cowboy/src/cowboy_websocket.erl	/^websocket_payload(State=#state{utf8_state=Incomplete},$/;"	f	module:cowboy_websocket
websocket_payload_loop	deps/cowboy/src/cowboy_websocket.erl	/^websocket_payload_loop(State=#state{socket=Socket, transport=Transport,$/;"	f	module:cowboy_websocket
websocket_send	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send(Type, State=#state{socket=Socket, transport=Transport})$/;"	f	module:cowboy_websocket
websocket_send	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send({Type = close, StatusCode, Payload}, State=#state{$/;"	f	module:cowboy_websocket
websocket_send	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send({Type, Payload0}, State=#state{socket=Socket, transport=Transport}) ->$/;"	f	module:cowboy_websocket
websocket_send	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send({close, Payload}, State) ->$/;"	f	module:cowboy_websocket
websocket_send_many	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send_many([Frame|Tail], State) ->$/;"	f	module:cowboy_websocket
websocket_send_many	deps/cowboy/src/cowboy_websocket.erl	/^websocket_send_many([], State) ->$/;"	f	module:cowboy_websocket
websocket_unmask	deps/cowboy/src/cowboy_websocket.erl	/^websocket_unmask(<< O:16 >>, MaskKey, Acc) ->$/;"	f	module:cowboy_websocket
websocket_unmask	deps/cowboy/src/cowboy_websocket.erl	/^websocket_unmask(<< O:24 >>, MaskKey, Acc) ->$/;"	f	module:cowboy_websocket
websocket_unmask	deps/cowboy/src/cowboy_websocket.erl	/^websocket_unmask(<< O:32, Rest\/bits >>, MaskKey, Acc) ->$/;"	f	module:cowboy_websocket
websocket_unmask	deps/cowboy/src/cowboy_websocket.erl	/^websocket_unmask(<< O:8 >>, MaskKey, Acc) ->$/;"	f	module:cowboy_websocket
websocket_unmask	deps/cowboy/src/cowboy_websocket.erl	/^websocket_unmask(<<>>, _, Unmasked) ->$/;"	f	module:cowboy_websocket
websocket_upgrade	deps/cowboy/src/cowboy_websocket.erl	/^websocket_upgrade(State, Req) ->$/;"	f	module:cowboy_websocket
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(1) -> <<"Mon">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(2) -> <<"Tue">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(3) -> <<"Wed">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(4) -> <<"Thu">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(5) -> <<"Fri">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(6) -> <<"Sat">>;$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_clock.erl	/^weekday(7) -> <<"Sun">>.$/;"	f	module:cowboy_clock
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Friday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Monday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Saturday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Sunday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Thursday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Tuesday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(<< "Wednesday", Rest\/binary >>, Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowboy/src/cowboy_http.erl	/^weekday(_Any, _Fun) ->$/;"	f	module:cowboy_http
weekday	deps/cowlib/src/cow_date.erl	/^weekday(1) -> <<"Mon">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(2) -> <<"Tue">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(3) -> <<"Wed">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(4) -> <<"Thu">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(5) -> <<"Fri">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(6) -> <<"Sat">>;$/;"	f	module:cow_date
weekday	deps/cowlib/src/cow_date.erl	/^weekday(7) -> <<"Sun">>.$/;"	f	module:cow_date
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(1), do: "Mon"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(2), do: "Tue"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(3), do: "Wed"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(4), do: "Thu"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(5), do: "Fri"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(6), do: "Sat"$/;"	f
weekday_name	deps/plug/lib/plug/conn/cookies.ex	/^  defp weekday_name(7), do: "Sun"$/;"	f
whitespace	deps/cowboy/src/cowboy_http.erl	/^whitespace(<< C, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
whitespace	deps/cowboy/src/cowboy_http.erl	/^whitespace(Data, Fun) ->$/;"	f	module:cowboy_http
with_cache	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp with_cache(ets, key, fun) do$/;"	f
with_cache	deps/plug/lib/plug/crypto/key_generator.ex	/^  defp with_cache(nil, _key, fun), do: fun.()$/;"	f
with_line_number	deps/plug/lib/plug/debugger.ex	/^  defp with_line_number(lines, initial, highlight) do$/;"	f
wkday	deps/cowboy/src/cowboy_http.erl	/^wkday(<< WkDay:3\/binary, Rest\/binary >>, Fun)$/;"	f	module:cowboy_http
wkday	deps/cowboy/src/cowboy_http.erl	/^wkday(_Any, _Fun) ->$/;"	f	module:cowboy_http
word	deps/cowboy/src/cowboy_http.erl	/^word(Data = << $", _\/binary >>, Fun) ->$/;"	f	module:cowboy_http
word	deps/cowboy/src/cowboy_http.erl	/^word(Data, Fun) ->$/;"	f	module:cowboy_http
write_tmp_dir	deps/plug/lib/plug/upload.ex	/^  defp write_tmp_dir(path) do$/;"	f
ws_end	deps/cowlib/src/cow_http_hd.erl	/^ws_end(<< $\\s, R\/bits >>) -> ws_end(R);$/;"	f	module:cow_http_hd
ws_end	deps/cowlib/src/cow_http_hd.erl	/^ws_end(<< $\\t, R\/bits >>) -> ws_end(R);$/;"	f	module:cow_http_hd
ws_end	deps/cowlib/src/cow_http_hd.erl	/^ws_end(<<>>) -> ok.$/;"	f	module:cow_http_hd
xhr?	deps/plug/lib/plug/csrf_protection.ex	/^  defp xhr?(conn) do$/;"	f
xyrl_verbose	deps/cowboy/erlang.mk	/^xyrl_verbose = $(xyrl_verbose_$(V))$/;"	m
xyrl_verbose	deps/cowlib/erlang.mk	/^xyrl_verbose = $(xyrl_verbose_$(V))$/;"	m
xyrl_verbose	deps/ranch/erlang.mk	/^xyrl_verbose = $(xyrl_verbose_$(V))$/;"	m
xyrl_verbose_0	deps/cowboy/erlang.mk	/^xyrl_verbose_0 = @echo " XYRL  " $(filter %.xrl %.yrl,$(?F));$/;"	m
xyrl_verbose_0	deps/cowlib/erlang.mk	/^xyrl_verbose_0 = @echo " XYRL  " $(filter %.xrl %.yrl,$(?F));$/;"	m
xyrl_verbose_0	deps/ranch/erlang.mk	/^xyrl_verbose_0 = @echo " XYRL  " $(filter %.xrl %.yrl,$(?F));$/;"	m
year	deps/cowlib/src/cow_date.erl	/^year(1970) -> <<"1970">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1971) -> <<"1971">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1972) -> <<"1972">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1973) -> <<"1973">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1974) -> <<"1974">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1975) -> <<"1975">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1976) -> <<"1976">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1977) -> <<"1977">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1978) -> <<"1978">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1979) -> <<"1979">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1980) -> <<"1980">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1981) -> <<"1981">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1982) -> <<"1982">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1983) -> <<"1983">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1984) -> <<"1984">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1985) -> <<"1985">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1986) -> <<"1986">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1987) -> <<"1987">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1988) -> <<"1988">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1989) -> <<"1989">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1990) -> <<"1990">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1991) -> <<"1991">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1992) -> <<"1992">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1993) -> <<"1993">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1994) -> <<"1994">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1995) -> <<"1995">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1996) -> <<"1996">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1997) -> <<"1997">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1998) -> <<"1998">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(1999) -> <<"1999">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2000) -> <<"2000">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2001) -> <<"2001">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2002) -> <<"2002">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2003) -> <<"2003">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2004) -> <<"2004">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2005) -> <<"2005">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2006) -> <<"2006">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2007) -> <<"2007">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2008) -> <<"2008">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2009) -> <<"2009">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2010) -> <<"2010">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2011) -> <<"2011">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2012) -> <<"2012">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2013) -> <<"2013">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2014) -> <<"2014">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2015) -> <<"2015">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2016) -> <<"2016">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2017) -> <<"2017">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2018) -> <<"2018">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2019) -> <<"2019">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2020) -> <<"2020">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2021) -> <<"2021">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2022) -> <<"2022">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2023) -> <<"2023">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2024) -> <<"2024">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2025) -> <<"2025">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2026) -> <<"2026">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2027) -> <<"2027">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2028) -> <<"2028">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(2029) -> <<"2029">>;$/;"	f	module:cow_date
year	deps/cowlib/src/cow_date.erl	/^year(Year) -> list_to_binary(integer_to_list(Year)).$/;"	f	module:cow_date
